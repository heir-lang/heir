### YamlMime:ManagedReference
items:
- uid: Heir.Types.FunctionType
  commentId: T:Heir.Types.FunctionType
  id: FunctionType
  parent: Heir.Types
  children:
  - Heir.Types.FunctionType.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,Heir.Types.BaseType},Heir.Types.BaseType)
  - Heir.Types.FunctionType.Arity
  - Heir.Types.FunctionType.Defaults
  - Heir.Types.FunctionType.Kind
  - Heir.Types.FunctionType.ParameterTypes
  - Heir.Types.FunctionType.ReturnType
  - Heir.Types.FunctionType.ToString(System.Boolean)
  langs:
  - csharp
  - vb
  name: FunctionType
  nameWithType: FunctionType
  fullName: Heir.Types.FunctionType
  type: Class
  source:
    remote:
      path: Heir/Types/FunctionType.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: FunctionType
    path: Heir/Types/FunctionType.cs
    startLine: 3
  assemblies:
  - Heir
  namespace: Heir.Types
  syntax:
    content: 'public sealed class FunctionType : SingularType'
    content.vb: Public NotInheritable Class FunctionType Inherits SingularType
  inheritance:
  - System.Object
  - Heir.Types.BaseType
  - Heir.Types.SingularType
  inheritedMembers:
  - Heir.Types.SingularType.Name
  - Heir.Types.SingularType.TypeArguments
  - Heir.Types.BaseType.IsNullable
  - Heir.Types.BaseType.IsNone
  - Heir.Types.BaseType.Nullable(Heir.Types.BaseType)
  - Heir.Types.BaseType.FromTypeRef(Heir.AST.Abstract.TypeRef)
  - Heir.Types.BaseType.IsAssignableTo(Heir.Types.BaseType)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Heir.Types.FunctionType.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,Heir.Types.BaseType},Heir.Types.BaseType)
  commentId: M:Heir.Types.FunctionType.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,Heir.Types.BaseType},Heir.Types.BaseType)
  id: '#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,Heir.Types.BaseType},Heir.Types.BaseType)'
  parent: Heir.Types.FunctionType
  langs:
  - csharp
  - vb
  name: FunctionType(Dictionary<string, object?>, Dictionary<string, BaseType>, BaseType)
  nameWithType: FunctionType.FunctionType(Dictionary<string, object?>, Dictionary<string, BaseType>, BaseType)
  fullName: Heir.Types.FunctionType.FunctionType(System.Collections.Generic.Dictionary<string, object?>, System.Collections.Generic.Dictionary<string, Heir.Types.BaseType>, Heir.Types.BaseType)
  type: Constructor
  source:
    remote:
      path: Heir/Types/FunctionType.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: .ctor
    path: Heir/Types/FunctionType.cs
    startLine: 3
  assemblies:
  - Heir
  namespace: Heir.Types
  syntax:
    content: public FunctionType(Dictionary<string, object?> defaults, Dictionary<string, BaseType> parameterTypes, BaseType returnType)
    parameters:
    - id: defaults
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    - id: parameterTypes
      type: System.Collections.Generic.Dictionary{System.String,Heir.Types.BaseType}
    - id: returnType
      type: Heir.Types.BaseType
    content.vb: Public Sub New(defaults As Dictionary(Of String, Object), parameterTypes As Dictionary(Of String, BaseType), returnType As BaseType)
  overload: Heir.Types.FunctionType.#ctor*
  nameWithType.vb: FunctionType.New(Dictionary(Of String, Object), Dictionary(Of String, BaseType), BaseType)
  fullName.vb: Heir.Types.FunctionType.New(System.Collections.Generic.Dictionary(Of String, Object), System.Collections.Generic.Dictionary(Of String, Heir.Types.BaseType), Heir.Types.BaseType)
  name.vb: New(Dictionary(Of String, Object), Dictionary(Of String, BaseType), BaseType)
- uid: Heir.Types.FunctionType.Kind
  commentId: P:Heir.Types.FunctionType.Kind
  id: Kind
  parent: Heir.Types.FunctionType
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: FunctionType.Kind
  fullName: Heir.Types.FunctionType.Kind
  type: Property
  source:
    remote:
      path: Heir/Types/FunctionType.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Kind
    path: Heir/Types/FunctionType.cs
    startLine: 6
  assemblies:
  - Heir
  namespace: Heir.Types
  example: []
  syntax:
    content: public override TypeKind Kind { get; }
    parameters: []
    return:
      type: Heir.Types.TypeKind
    content.vb: Public Overrides ReadOnly Property Kind As TypeKind
  overridden: Heir.Types.SingularType.Kind
  overload: Heir.Types.FunctionType.Kind*
- uid: Heir.Types.FunctionType.Defaults
  commentId: P:Heir.Types.FunctionType.Defaults
  id: Defaults
  parent: Heir.Types.FunctionType
  langs:
  - csharp
  - vb
  name: Defaults
  nameWithType: FunctionType.Defaults
  fullName: Heir.Types.FunctionType.Defaults
  type: Property
  source:
    remote:
      path: Heir/Types/FunctionType.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Defaults
    path: Heir/Types/FunctionType.cs
    startLine: 8
  assemblies:
  - Heir
  namespace: Heir.Types
  syntax:
    content: public Dictionary<string, object?> Defaults { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Public ReadOnly Property Defaults As Dictionary(Of String, Object)
  overload: Heir.Types.FunctionType.Defaults*
- uid: Heir.Types.FunctionType.ParameterTypes
  commentId: P:Heir.Types.FunctionType.ParameterTypes
  id: ParameterTypes
  parent: Heir.Types.FunctionType
  langs:
  - csharp
  - vb
  name: ParameterTypes
  nameWithType: FunctionType.ParameterTypes
  fullName: Heir.Types.FunctionType.ParameterTypes
  type: Property
  source:
    remote:
      path: Heir/Types/FunctionType.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: ParameterTypes
    path: Heir/Types/FunctionType.cs
    startLine: 9
  assemblies:
  - Heir
  namespace: Heir.Types
  syntax:
    content: public Dictionary<string, BaseType> ParameterTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,Heir.Types.BaseType}
    content.vb: Public ReadOnly Property ParameterTypes As Dictionary(Of String, BaseType)
  overload: Heir.Types.FunctionType.ParameterTypes*
- uid: Heir.Types.FunctionType.ReturnType
  commentId: P:Heir.Types.FunctionType.ReturnType
  id: ReturnType
  parent: Heir.Types.FunctionType
  langs:
  - csharp
  - vb
  name: ReturnType
  nameWithType: FunctionType.ReturnType
  fullName: Heir.Types.FunctionType.ReturnType
  type: Property
  source:
    remote:
      path: Heir/Types/FunctionType.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: ReturnType
    path: Heir/Types/FunctionType.cs
    startLine: 10
  assemblies:
  - Heir
  namespace: Heir.Types
  syntax:
    content: public BaseType ReturnType { get; }
    parameters: []
    return:
      type: Heir.Types.BaseType
    content.vb: Public ReadOnly Property ReturnType As BaseType
  overload: Heir.Types.FunctionType.ReturnType*
- uid: Heir.Types.FunctionType.Arity
  commentId: P:Heir.Types.FunctionType.Arity
  id: Arity
  parent: Heir.Types.FunctionType
  langs:
  - csharp
  - vb
  name: Arity
  nameWithType: FunctionType.Arity
  fullName: Heir.Types.FunctionType.Arity
  type: Property
  source:
    remote:
      path: Heir/Types/FunctionType.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Arity
    path: Heir/Types/FunctionType.cs
    startLine: 11
  assemblies:
  - Heir
  namespace: Heir.Types
  syntax:
    content: public Range Arity { get; }
    parameters: []
    return:
      type: System.Range
    content.vb: Public ReadOnly Property Arity As Range
  overload: Heir.Types.FunctionType.Arity*
- uid: Heir.Types.FunctionType.ToString(System.Boolean)
  commentId: M:Heir.Types.FunctionType.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: Heir.Types.FunctionType
  langs:
  - csharp
  - vb
  name: ToString(bool)
  nameWithType: FunctionType.ToString(bool)
  fullName: Heir.Types.FunctionType.ToString(bool)
  type: Method
  source:
    remote:
      path: Heir/Types/FunctionType.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: ToString
    path: Heir/Types/FunctionType.cs
    startLine: 21
  assemblies:
  - Heir
  namespace: Heir.Types
  example: []
  syntax:
    content: public override string ToString(bool colors = false)
    parameters:
    - id: colors
      type: System.Boolean
    return:
      type: System.String
    content.vb: Public Overrides Function ToString(colors As Boolean = False) As String
  overridden: Heir.Types.SingularType.ToString(System.Boolean)
  overload: Heir.Types.FunctionType.ToString*
  nameWithType.vb: FunctionType.ToString(Boolean)
  fullName.vb: Heir.Types.FunctionType.ToString(Boolean)
  name.vb: ToString(Boolean)
references:
- uid: Heir.Types
  commentId: N:Heir.Types
  href: Heir.html
  name: Heir.Types
  nameWithType: Heir.Types
  fullName: Heir.Types
  spec.csharp:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.Types
    name: Types
    href: Heir.Types.html
  spec.vb:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.Types
    name: Types
    href: Heir.Types.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Heir.Types.BaseType
  commentId: T:Heir.Types.BaseType
  parent: Heir.Types
  href: Heir.Types.BaseType.html
  name: BaseType
  nameWithType: BaseType
  fullName: Heir.Types.BaseType
- uid: Heir.Types.SingularType
  commentId: T:Heir.Types.SingularType
  parent: Heir.Types
  href: Heir.Types.SingularType.html
  name: SingularType
  nameWithType: SingularType
  fullName: Heir.Types.SingularType
- uid: Heir.Types.SingularType.Name
  commentId: P:Heir.Types.SingularType.Name
  parent: Heir.Types.SingularType
  href: Heir.Types.SingularType.html#Heir_Types_SingularType_Name
  name: Name
  nameWithType: SingularType.Name
  fullName: Heir.Types.SingularType.Name
- uid: Heir.Types.SingularType.TypeArguments
  commentId: P:Heir.Types.SingularType.TypeArguments
  parent: Heir.Types.SingularType
  href: Heir.Types.SingularType.html#Heir_Types_SingularType_TypeArguments
  name: TypeArguments
  nameWithType: SingularType.TypeArguments
  fullName: Heir.Types.SingularType.TypeArguments
- uid: Heir.Types.BaseType.IsNullable
  commentId: P:Heir.Types.BaseType.IsNullable
  parent: Heir.Types.BaseType
  href: Heir.Types.BaseType.html#Heir_Types_BaseType_IsNullable
  name: IsNullable
  nameWithType: BaseType.IsNullable
  fullName: Heir.Types.BaseType.IsNullable
- uid: Heir.Types.BaseType.IsNone
  commentId: P:Heir.Types.BaseType.IsNone
  parent: Heir.Types.BaseType
  href: Heir.Types.BaseType.html#Heir_Types_BaseType_IsNone
  name: IsNone
  nameWithType: BaseType.IsNone
  fullName: Heir.Types.BaseType.IsNone
- uid: Heir.Types.BaseType.Nullable(Heir.Types.BaseType)
  commentId: M:Heir.Types.BaseType.Nullable(Heir.Types.BaseType)
  parent: Heir.Types.BaseType
  href: Heir.Types.BaseType.html#Heir_Types_BaseType_Nullable_Heir_Types_BaseType_
  name: Nullable(BaseType)
  nameWithType: BaseType.Nullable(BaseType)
  fullName: Heir.Types.BaseType.Nullable(Heir.Types.BaseType)
  spec.csharp:
  - uid: Heir.Types.BaseType.Nullable(Heir.Types.BaseType)
    name: Nullable
    href: Heir.Types.BaseType.html#Heir_Types_BaseType_Nullable_Heir_Types_BaseType_
  - name: (
  - uid: Heir.Types.BaseType
    name: BaseType
    href: Heir.Types.BaseType.html
  - name: )
  spec.vb:
  - uid: Heir.Types.BaseType.Nullable(Heir.Types.BaseType)
    name: Nullable
    href: Heir.Types.BaseType.html#Heir_Types_BaseType_Nullable_Heir_Types_BaseType_
  - name: (
  - uid: Heir.Types.BaseType
    name: BaseType
    href: Heir.Types.BaseType.html
  - name: )
- uid: Heir.Types.BaseType.FromTypeRef(Heir.AST.Abstract.TypeRef)
  commentId: M:Heir.Types.BaseType.FromTypeRef(Heir.AST.Abstract.TypeRef)
  parent: Heir.Types.BaseType
  href: Heir.Types.BaseType.html#Heir_Types_BaseType_FromTypeRef_Heir_AST_Abstract_TypeRef_
  name: FromTypeRef(TypeRef)
  nameWithType: BaseType.FromTypeRef(TypeRef)
  fullName: Heir.Types.BaseType.FromTypeRef(Heir.AST.Abstract.TypeRef)
  spec.csharp:
  - uid: Heir.Types.BaseType.FromTypeRef(Heir.AST.Abstract.TypeRef)
    name: FromTypeRef
    href: Heir.Types.BaseType.html#Heir_Types_BaseType_FromTypeRef_Heir_AST_Abstract_TypeRef_
  - name: (
  - uid: Heir.AST.Abstract.TypeRef
    name: TypeRef
    href: Heir.AST.Abstract.TypeRef.html
  - name: )
  spec.vb:
  - uid: Heir.Types.BaseType.FromTypeRef(Heir.AST.Abstract.TypeRef)
    name: FromTypeRef
    href: Heir.Types.BaseType.html#Heir_Types_BaseType_FromTypeRef_Heir_AST_Abstract_TypeRef_
  - name: (
  - uid: Heir.AST.Abstract.TypeRef
    name: TypeRef
    href: Heir.AST.Abstract.TypeRef.html
  - name: )
- uid: Heir.Types.BaseType.IsAssignableTo(Heir.Types.BaseType)
  commentId: M:Heir.Types.BaseType.IsAssignableTo(Heir.Types.BaseType)
  parent: Heir.Types.BaseType
  href: Heir.Types.BaseType.html#Heir_Types_BaseType_IsAssignableTo_Heir_Types_BaseType_
  name: IsAssignableTo(BaseType)
  nameWithType: BaseType.IsAssignableTo(BaseType)
  fullName: Heir.Types.BaseType.IsAssignableTo(Heir.Types.BaseType)
  spec.csharp:
  - uid: Heir.Types.BaseType.IsAssignableTo(Heir.Types.BaseType)
    name: IsAssignableTo
    href: Heir.Types.BaseType.html#Heir_Types_BaseType_IsAssignableTo_Heir_Types_BaseType_
  - name: (
  - uid: Heir.Types.BaseType
    name: BaseType
    href: Heir.Types.BaseType.html
  - name: )
  spec.vb:
  - uid: Heir.Types.BaseType.IsAssignableTo(Heir.Types.BaseType)
    name: IsAssignableTo
    href: Heir.Types.BaseType.html#Heir_Types_BaseType_IsAssignableTo_Heir_Types_BaseType_
  - name: (
  - uid: Heir.Types.BaseType
    name: BaseType
    href: Heir.Types.BaseType.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Heir.Types.FunctionType.#ctor*
  commentId: Overload:Heir.Types.FunctionType.#ctor
  href: Heir.Types.FunctionType.html#Heir_Types_FunctionType__ctor_System_Collections_Generic_Dictionary_System_String_System_Object__System_Collections_Generic_Dictionary_System_String_Heir_Types_BaseType__Heir_Types_BaseType_
  name: FunctionType
  nameWithType: FunctionType.FunctionType
  fullName: Heir.Types.FunctionType.FunctionType
  nameWithType.vb: FunctionType.New
  fullName.vb: Heir.Types.FunctionType.New
  name.vb: New
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, object>
  nameWithType: Dictionary<string, object>
  fullName: System.Collections.Generic.Dictionary<string, object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.Dictionary{System.String,Heir.Types.BaseType}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Heir.Types.BaseType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, BaseType>
  nameWithType: Dictionary<string, BaseType>
  fullName: System.Collections.Generic.Dictionary<string, Heir.Types.BaseType>
  nameWithType.vb: Dictionary(Of String, BaseType)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Heir.Types.BaseType)
  name.vb: Dictionary(Of String, BaseType)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Heir.Types.BaseType
    name: BaseType
    href: Heir.Types.BaseType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Heir.Types.BaseType
    name: BaseType
    href: Heir.Types.BaseType.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Heir.Types.SingularType.Kind
  commentId: P:Heir.Types.SingularType.Kind
  parent: Heir.Types.SingularType
  href: Heir.Types.SingularType.html#Heir_Types_SingularType_Kind
  name: Kind
  nameWithType: SingularType.Kind
  fullName: Heir.Types.SingularType.Kind
- uid: Heir.Types.FunctionType.Kind*
  commentId: Overload:Heir.Types.FunctionType.Kind
  href: Heir.Types.FunctionType.html#Heir_Types_FunctionType_Kind
  name: Kind
  nameWithType: FunctionType.Kind
  fullName: Heir.Types.FunctionType.Kind
- uid: Heir.Types.TypeKind
  commentId: T:Heir.Types.TypeKind
  parent: Heir.Types
  href: Heir.Types.TypeKind.html
  name: TypeKind
  nameWithType: TypeKind
  fullName: Heir.Types.TypeKind
- uid: Heir.Types.FunctionType.Defaults*
  commentId: Overload:Heir.Types.FunctionType.Defaults
  href: Heir.Types.FunctionType.html#Heir_Types_FunctionType_Defaults
  name: Defaults
  nameWithType: FunctionType.Defaults
  fullName: Heir.Types.FunctionType.Defaults
- uid: Heir.Types.FunctionType.ParameterTypes*
  commentId: Overload:Heir.Types.FunctionType.ParameterTypes
  href: Heir.Types.FunctionType.html#Heir_Types_FunctionType_ParameterTypes
  name: ParameterTypes
  nameWithType: FunctionType.ParameterTypes
  fullName: Heir.Types.FunctionType.ParameterTypes
- uid: Heir.Types.FunctionType.ReturnType*
  commentId: Overload:Heir.Types.FunctionType.ReturnType
  href: Heir.Types.FunctionType.html#Heir_Types_FunctionType_ReturnType
  name: ReturnType
  nameWithType: FunctionType.ReturnType
  fullName: Heir.Types.FunctionType.ReturnType
- uid: Heir.Types.FunctionType.Arity*
  commentId: Overload:Heir.Types.FunctionType.Arity
  href: Heir.Types.FunctionType.html#Heir_Types_FunctionType_Arity
  name: Arity
  nameWithType: FunctionType.Arity
  fullName: Heir.Types.FunctionType.Arity
- uid: System.Range
  commentId: T:System.Range
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.range
  name: Range
  nameWithType: Range
  fullName: System.Range
- uid: Heir.Types.SingularType.ToString(System.Boolean)
  commentId: M:Heir.Types.SingularType.ToString(System.Boolean)
  parent: Heir.Types.SingularType
  isExternal: true
  href: Heir.Types.SingularType.html#Heir_Types_SingularType_ToString_System_Boolean_
  name: ToString(bool)
  nameWithType: SingularType.ToString(bool)
  fullName: Heir.Types.SingularType.ToString(bool)
  nameWithType.vb: SingularType.ToString(Boolean)
  fullName.vb: Heir.Types.SingularType.ToString(Boolean)
  name.vb: ToString(Boolean)
  spec.csharp:
  - uid: Heir.Types.SingularType.ToString(System.Boolean)
    name: ToString
    href: Heir.Types.SingularType.html#Heir_Types_SingularType_ToString_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Heir.Types.SingularType.ToString(System.Boolean)
    name: ToString
    href: Heir.Types.SingularType.html#Heir_Types_SingularType_ToString_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Heir.Types.FunctionType.ToString*
  commentId: Overload:Heir.Types.FunctionType.ToString
  href: Heir.Types.FunctionType.html#Heir_Types_FunctionType_ToString_System_Boolean_
  name: ToString
  nameWithType: FunctionType.ToString
  fullName: Heir.Types.FunctionType.ToString
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
