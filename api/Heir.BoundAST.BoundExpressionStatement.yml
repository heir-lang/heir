### YamlMime:ManagedReference
items:
- uid: Heir.BoundAST.BoundExpressionStatement
  commentId: T:Heir.BoundAST.BoundExpressionStatement
  id: BoundExpressionStatement
  parent: Heir.BoundAST
  children:
  - Heir.BoundAST.BoundExpressionStatement.#ctor(Heir.BoundAST.BoundExpression)
  - Heir.BoundAST.BoundExpressionStatement.Accept``1(Heir.BoundAST.BoundStatement.Visitor{``0})
  - Heir.BoundAST.BoundExpressionStatement.Display(System.Int32)
  - Heir.BoundAST.BoundExpressionStatement.Expression
  - Heir.BoundAST.BoundExpressionStatement.GetTokens
  - Heir.BoundAST.BoundExpressionStatement.Type
  langs:
  - csharp
  - vb
  name: BoundExpressionStatement
  nameWithType: BoundExpressionStatement
  fullName: Heir.BoundAST.BoundExpressionStatement
  type: Class
  source:
    remote:
      path: Heir/BoundAST/BoundExpressionStatement.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: BoundExpressionStatement
    path: Heir/BoundAST/BoundExpressionStatement.cs
    startLine: 5
  assemblies:
  - Heir
  namespace: Heir.BoundAST
  syntax:
    content: 'public class BoundExpressionStatement : BoundStatement'
    content.vb: Public Class BoundExpressionStatement Inherits BoundStatement
  inheritance:
  - System.Object
  - Heir.AST.Abstract.SyntaxNode
  - Heir.BoundAST.BoundSyntaxNode
  - Heir.BoundAST.BoundStatement
  inheritedMembers:
  - Heir.AST.Abstract.SyntaxNode.GetFirstToken
  - Heir.AST.Abstract.SyntaxNode.GetLastToken
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Heir.BoundAST.BoundExpressionStatement.#ctor(Heir.BoundAST.BoundExpression)
  commentId: M:Heir.BoundAST.BoundExpressionStatement.#ctor(Heir.BoundAST.BoundExpression)
  id: '#ctor(Heir.BoundAST.BoundExpression)'
  parent: Heir.BoundAST.BoundExpressionStatement
  langs:
  - csharp
  - vb
  name: BoundExpressionStatement(BoundExpression)
  nameWithType: BoundExpressionStatement.BoundExpressionStatement(BoundExpression)
  fullName: Heir.BoundAST.BoundExpressionStatement.BoundExpressionStatement(Heir.BoundAST.BoundExpression)
  type: Constructor
  source:
    remote:
      path: Heir/BoundAST/BoundExpressionStatement.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: .ctor
    path: Heir/BoundAST/BoundExpressionStatement.cs
    startLine: 5
  assemblies:
  - Heir
  namespace: Heir.BoundAST
  syntax:
    content: public BoundExpressionStatement(BoundExpression expression)
    parameters:
    - id: expression
      type: Heir.BoundAST.BoundExpression
    content.vb: Public Sub New(expression As BoundExpression)
  overload: Heir.BoundAST.BoundExpressionStatement.#ctor*
  nameWithType.vb: BoundExpressionStatement.New(BoundExpression)
  fullName.vb: Heir.BoundAST.BoundExpressionStatement.New(Heir.BoundAST.BoundExpression)
  name.vb: New(BoundExpression)
- uid: Heir.BoundAST.BoundExpressionStatement.Type
  commentId: P:Heir.BoundAST.BoundExpressionStatement.Type
  id: Type
  parent: Heir.BoundAST.BoundExpressionStatement
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: BoundExpressionStatement.Type
  fullName: Heir.BoundAST.BoundExpressionStatement.Type
  type: Property
  source:
    remote:
      path: Heir/BoundAST/BoundExpressionStatement.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Type
    path: Heir/BoundAST/BoundExpressionStatement.cs
    startLine: 7
  assemblies:
  - Heir
  namespace: Heir.BoundAST
  example: []
  syntax:
    content: public override BaseType Type { get; }
    parameters: []
    return:
      type: Heir.Types.BaseType
    content.vb: Public Overrides ReadOnly Property Type As BaseType
  overridden: Heir.BoundAST.BoundStatement.Type
  overload: Heir.BoundAST.BoundExpressionStatement.Type*
- uid: Heir.BoundAST.BoundExpressionStatement.Expression
  commentId: P:Heir.BoundAST.BoundExpressionStatement.Expression
  id: Expression
  parent: Heir.BoundAST.BoundExpressionStatement
  langs:
  - csharp
  - vb
  name: Expression
  nameWithType: BoundExpressionStatement.Expression
  fullName: Heir.BoundAST.BoundExpressionStatement.Expression
  type: Property
  source:
    remote:
      path: Heir/BoundAST/BoundExpressionStatement.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Expression
    path: Heir/BoundAST/BoundExpressionStatement.cs
    startLine: 9
  assemblies:
  - Heir
  namespace: Heir.BoundAST
  syntax:
    content: public BoundExpression Expression { get; }
    parameters: []
    return:
      type: Heir.BoundAST.BoundExpression
    content.vb: Public ReadOnly Property Expression As BoundExpression
  overload: Heir.BoundAST.BoundExpressionStatement.Expression*
- uid: Heir.BoundAST.BoundExpressionStatement.Accept``1(Heir.BoundAST.BoundStatement.Visitor{``0})
  commentId: M:Heir.BoundAST.BoundExpressionStatement.Accept``1(Heir.BoundAST.BoundStatement.Visitor{``0})
  id: Accept``1(Heir.BoundAST.BoundStatement.Visitor{``0})
  parent: Heir.BoundAST.BoundExpressionStatement
  langs:
  - csharp
  - vb
  name: Accept<R>(Visitor<R>)
  nameWithType: BoundExpressionStatement.Accept<R>(BoundStatement.Visitor<R>)
  fullName: Heir.BoundAST.BoundExpressionStatement.Accept<R>(Heir.BoundAST.BoundStatement.Visitor<R>)
  type: Method
  source:
    remote:
      path: Heir/BoundAST/BoundExpressionStatement.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Accept
    path: Heir/BoundAST/BoundExpressionStatement.cs
    startLine: 11
  assemblies:
  - Heir
  namespace: Heir.BoundAST
  example: []
  syntax:
    content: public override R Accept<R>(BoundStatement.Visitor<R> visitor)
    parameters:
    - id: visitor
      type: Heir.BoundAST.BoundStatement.Visitor{{R}}
    typeParameters:
    - id: R
    return:
      type: '{R}'
    content.vb: Public Overrides Function Accept(Of R)(visitor As BoundStatement.Visitor(Of R)) As R
  overridden: Heir.BoundAST.BoundStatement.Accept``1(Heir.BoundAST.BoundStatement.Visitor{{R}})
  overload: Heir.BoundAST.BoundExpressionStatement.Accept*
  nameWithType.vb: BoundExpressionStatement.Accept(Of R)(BoundStatement.Visitor(Of R))
  fullName.vb: Heir.BoundAST.BoundExpressionStatement.Accept(Of R)(Heir.BoundAST.BoundStatement.Visitor(Of R))
  name.vb: Accept(Of R)(Visitor(Of R))
- uid: Heir.BoundAST.BoundExpressionStatement.GetTokens
  commentId: M:Heir.BoundAST.BoundExpressionStatement.GetTokens
  id: GetTokens
  parent: Heir.BoundAST.BoundExpressionStatement
  langs:
  - csharp
  - vb
  name: GetTokens()
  nameWithType: BoundExpressionStatement.GetTokens()
  fullName: Heir.BoundAST.BoundExpressionStatement.GetTokens()
  type: Method
  source:
    remote:
      path: Heir/BoundAST/BoundExpressionStatement.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: GetTokens
    path: Heir/BoundAST/BoundExpressionStatement.cs
    startLine: 12
  assemblies:
  - Heir
  namespace: Heir.BoundAST
  example: []
  syntax:
    content: public override List<Token> GetTokens()
    return:
      type: System.Collections.Generic.List{Heir.Syntax.Token}
    content.vb: Public Overrides Function GetTokens() As List(Of Token)
  overridden: Heir.AST.Abstract.SyntaxNode.GetTokens
  overload: Heir.BoundAST.BoundExpressionStatement.GetTokens*
- uid: Heir.BoundAST.BoundExpressionStatement.Display(System.Int32)
  commentId: M:Heir.BoundAST.BoundExpressionStatement.Display(System.Int32)
  id: Display(System.Int32)
  parent: Heir.BoundAST.BoundExpressionStatement
  langs:
  - csharp
  - vb
  name: Display(int)
  nameWithType: BoundExpressionStatement.Display(int)
  fullName: Heir.BoundAST.BoundExpressionStatement.Display(int)
  type: Method
  source:
    remote:
      path: Heir/BoundAST/BoundExpressionStatement.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Display
    path: Heir/BoundAST/BoundExpressionStatement.cs
    startLine: 14
  assemblies:
  - Heir
  namespace: Heir.BoundAST
  example: []
  syntax:
    content: public override void Display(int indent = 0)
    parameters:
    - id: indent
      type: System.Int32
    content.vb: Public Overrides Sub Display(indent As Integer = 0)
  overridden: Heir.AST.Abstract.SyntaxNode.Display(System.Int32)
  overload: Heir.BoundAST.BoundExpressionStatement.Display*
  nameWithType.vb: BoundExpressionStatement.Display(Integer)
  fullName.vb: Heir.BoundAST.BoundExpressionStatement.Display(Integer)
  name.vb: Display(Integer)
references:
- uid: Heir.BoundAST
  commentId: N:Heir.BoundAST
  href: Heir.html
  name: Heir.BoundAST
  nameWithType: Heir.BoundAST
  fullName: Heir.BoundAST
  spec.csharp:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.BoundAST
    name: BoundAST
    href: Heir.BoundAST.html
  spec.vb:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.BoundAST
    name: BoundAST
    href: Heir.BoundAST.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Heir.AST.Abstract.SyntaxNode
  commentId: T:Heir.AST.Abstract.SyntaxNode
  parent: Heir.AST.Abstract
  href: Heir.AST.Abstract.SyntaxNode.html
  name: SyntaxNode
  nameWithType: SyntaxNode
  fullName: Heir.AST.Abstract.SyntaxNode
- uid: Heir.BoundAST.BoundSyntaxNode
  commentId: T:Heir.BoundAST.BoundSyntaxNode
  parent: Heir.BoundAST
  href: Heir.BoundAST.BoundSyntaxNode.html
  name: BoundSyntaxNode
  nameWithType: BoundSyntaxNode
  fullName: Heir.BoundAST.BoundSyntaxNode
- uid: Heir.BoundAST.BoundStatement
  commentId: T:Heir.BoundAST.BoundStatement
  parent: Heir.BoundAST
  href: Heir.BoundAST.BoundStatement.html
  name: BoundStatement
  nameWithType: BoundStatement
  fullName: Heir.BoundAST.BoundStatement
- uid: Heir.AST.Abstract.SyntaxNode.GetFirstToken
  commentId: M:Heir.AST.Abstract.SyntaxNode.GetFirstToken
  parent: Heir.AST.Abstract.SyntaxNode
  href: Heir.AST.Abstract.SyntaxNode.html#Heir_AST_Abstract_SyntaxNode_GetFirstToken
  name: GetFirstToken()
  nameWithType: SyntaxNode.GetFirstToken()
  fullName: Heir.AST.Abstract.SyntaxNode.GetFirstToken()
  spec.csharp:
  - uid: Heir.AST.Abstract.SyntaxNode.GetFirstToken
    name: GetFirstToken
    href: Heir.AST.Abstract.SyntaxNode.html#Heir_AST_Abstract_SyntaxNode_GetFirstToken
  - name: (
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.SyntaxNode.GetFirstToken
    name: GetFirstToken
    href: Heir.AST.Abstract.SyntaxNode.html#Heir_AST_Abstract_SyntaxNode_GetFirstToken
  - name: (
  - name: )
- uid: Heir.AST.Abstract.SyntaxNode.GetLastToken
  commentId: M:Heir.AST.Abstract.SyntaxNode.GetLastToken
  parent: Heir.AST.Abstract.SyntaxNode
  href: Heir.AST.Abstract.SyntaxNode.html#Heir_AST_Abstract_SyntaxNode_GetLastToken
  name: GetLastToken()
  nameWithType: SyntaxNode.GetLastToken()
  fullName: Heir.AST.Abstract.SyntaxNode.GetLastToken()
  spec.csharp:
  - uid: Heir.AST.Abstract.SyntaxNode.GetLastToken
    name: GetLastToken
    href: Heir.AST.Abstract.SyntaxNode.html#Heir_AST_Abstract_SyntaxNode_GetLastToken
  - name: (
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.SyntaxNode.GetLastToken
    name: GetLastToken
    href: Heir.AST.Abstract.SyntaxNode.html#Heir_AST_Abstract_SyntaxNode_GetLastToken
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Heir.AST.Abstract
  commentId: N:Heir.AST.Abstract
  href: Heir.html
  name: Heir.AST.Abstract
  nameWithType: Heir.AST.Abstract
  fullName: Heir.AST.Abstract
  spec.csharp:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.AST
    name: AST
    href: Heir.AST.html
  - name: .
  - uid: Heir.AST.Abstract
    name: Abstract
    href: Heir.AST.Abstract.html
  spec.vb:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.AST
    name: AST
    href: Heir.AST.html
  - name: .
  - uid: Heir.AST.Abstract
    name: Abstract
    href: Heir.AST.Abstract.html
- uid: Heir.BoundAST.BoundExpressionStatement.#ctor*
  commentId: Overload:Heir.BoundAST.BoundExpressionStatement.#ctor
  href: Heir.BoundAST.BoundExpressionStatement.html#Heir_BoundAST_BoundExpressionStatement__ctor_Heir_BoundAST_BoundExpression_
  name: BoundExpressionStatement
  nameWithType: BoundExpressionStatement.BoundExpressionStatement
  fullName: Heir.BoundAST.BoundExpressionStatement.BoundExpressionStatement
  nameWithType.vb: BoundExpressionStatement.New
  fullName.vb: Heir.BoundAST.BoundExpressionStatement.New
  name.vb: New
- uid: Heir.BoundAST.BoundExpression
  commentId: T:Heir.BoundAST.BoundExpression
  parent: Heir.BoundAST
  href: Heir.BoundAST.BoundExpression.html
  name: BoundExpression
  nameWithType: BoundExpression
  fullName: Heir.BoundAST.BoundExpression
- uid: Heir.BoundAST.BoundStatement.Type
  commentId: P:Heir.BoundAST.BoundStatement.Type
  parent: Heir.BoundAST.BoundStatement
  href: Heir.BoundAST.BoundStatement.html#Heir_BoundAST_BoundStatement_Type
  name: Type
  nameWithType: BoundStatement.Type
  fullName: Heir.BoundAST.BoundStatement.Type
- uid: Heir.BoundAST.BoundExpressionStatement.Type*
  commentId: Overload:Heir.BoundAST.BoundExpressionStatement.Type
  href: Heir.BoundAST.BoundExpressionStatement.html#Heir_BoundAST_BoundExpressionStatement_Type
  name: Type
  nameWithType: BoundExpressionStatement.Type
  fullName: Heir.BoundAST.BoundExpressionStatement.Type
- uid: Heir.Types.BaseType
  commentId: T:Heir.Types.BaseType
  parent: Heir.Types
  href: Heir.Types.BaseType.html
  name: BaseType
  nameWithType: BaseType
  fullName: Heir.Types.BaseType
- uid: Heir.Types
  commentId: N:Heir.Types
  href: Heir.html
  name: Heir.Types
  nameWithType: Heir.Types
  fullName: Heir.Types
  spec.csharp:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.Types
    name: Types
    href: Heir.Types.html
  spec.vb:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.Types
    name: Types
    href: Heir.Types.html
- uid: Heir.BoundAST.BoundExpressionStatement.Expression*
  commentId: Overload:Heir.BoundAST.BoundExpressionStatement.Expression
  href: Heir.BoundAST.BoundExpressionStatement.html#Heir_BoundAST_BoundExpressionStatement_Expression
  name: Expression
  nameWithType: BoundExpressionStatement.Expression
  fullName: Heir.BoundAST.BoundExpressionStatement.Expression
- uid: Heir.BoundAST.BoundStatement.Accept``1(Heir.BoundAST.BoundStatement.Visitor{{R}})
  commentId: M:Heir.BoundAST.BoundStatement.Accept``1(Heir.BoundAST.BoundStatement.Visitor{``0})
  parent: Heir.BoundAST.BoundStatement
  definition: Heir.BoundAST.BoundStatement.Accept``1(Heir.BoundAST.BoundStatement.Visitor{``0})
  href: Heir.BoundAST.BoundStatement.html#Heir_BoundAST_BoundStatement_Accept__1_Heir_BoundAST_BoundStatement_Visitor___0__
  name: Accept<R>(Visitor<R>)
  nameWithType: BoundStatement.Accept<R>(BoundStatement.Visitor<R>)
  fullName: Heir.BoundAST.BoundStatement.Accept<R>(Heir.BoundAST.BoundStatement.Visitor<R>)
  nameWithType.vb: BoundStatement.Accept(Of R)(BoundStatement.Visitor(Of R))
  fullName.vb: Heir.BoundAST.BoundStatement.Accept(Of R)(Heir.BoundAST.BoundStatement.Visitor(Of R))
  name.vb: Accept(Of R)(Visitor(Of R))
  spec.csharp:
  - uid: Heir.BoundAST.BoundStatement.Accept``1(Heir.BoundAST.BoundStatement.Visitor{``0})
    name: Accept
    href: Heir.BoundAST.BoundStatement.html#Heir_BoundAST_BoundStatement_Accept__1_Heir_BoundAST_BoundStatement_Visitor___0__
  - name: <
  - name: R
  - name: '>'
  - name: (
  - uid: Heir.BoundAST.BoundStatement.Visitor`1
    name: Visitor
    href: Heir.BoundAST.BoundStatement.Visitor-1.html
  - name: <
  - name: R
  - name: '>'
  - name: )
  spec.vb:
  - uid: Heir.BoundAST.BoundStatement.Accept``1(Heir.BoundAST.BoundStatement.Visitor{``0})
    name: Accept
    href: Heir.BoundAST.BoundStatement.html#Heir_BoundAST_BoundStatement_Accept__1_Heir_BoundAST_BoundStatement_Visitor___0__
  - name: (
  - name: Of
  - name: " "
  - name: R
  - name: )
  - name: (
  - uid: Heir.BoundAST.BoundStatement.Visitor`1
    name: Visitor
    href: Heir.BoundAST.BoundStatement.Visitor-1.html
  - name: (
  - name: Of
  - name: " "
  - name: R
  - name: )
  - name: )
- uid: Heir.BoundAST.BoundExpressionStatement.Accept*
  commentId: Overload:Heir.BoundAST.BoundExpressionStatement.Accept
  href: Heir.BoundAST.BoundExpressionStatement.html#Heir_BoundAST_BoundExpressionStatement_Accept__1_Heir_BoundAST_BoundStatement_Visitor___0__
  name: Accept
  nameWithType: BoundExpressionStatement.Accept
  fullName: Heir.BoundAST.BoundExpressionStatement.Accept
- uid: Heir.BoundAST.BoundStatement.Visitor{{R}}
  commentId: T:Heir.BoundAST.BoundStatement.Visitor{``0}
  parent: Heir.BoundAST
  definition: Heir.BoundAST.BoundStatement.Visitor`1
  href: Heir.BoundAST.BoundStatement.html
  name: BoundStatement.Visitor<R>
  nameWithType: BoundStatement.Visitor<R>
  fullName: Heir.BoundAST.BoundStatement.Visitor<R>
  nameWithType.vb: BoundStatement.Visitor(Of R)
  fullName.vb: Heir.BoundAST.BoundStatement.Visitor(Of R)
  name.vb: BoundStatement.Visitor(Of R)
  spec.csharp:
  - uid: Heir.BoundAST.BoundStatement
    name: BoundStatement
    href: Heir.BoundAST.BoundStatement.html
  - name: .
  - uid: Heir.BoundAST.BoundStatement.Visitor`1
    name: Visitor
    href: Heir.BoundAST.BoundStatement.Visitor-1.html
  - name: <
  - name: R
  - name: '>'
  spec.vb:
  - uid: Heir.BoundAST.BoundStatement
    name: BoundStatement
    href: Heir.BoundAST.BoundStatement.html
  - name: .
  - uid: Heir.BoundAST.BoundStatement.Visitor`1
    name: Visitor
    href: Heir.BoundAST.BoundStatement.Visitor-1.html
  - name: (
  - name: Of
  - name: " "
  - name: R
  - name: )
- uid: '{R}'
  commentId: '!:R'
  definition: R
  name: R
  nameWithType: R
  fullName: R
- uid: Heir.BoundAST.BoundStatement.Accept``1(Heir.BoundAST.BoundStatement.Visitor{``0})
  commentId: M:Heir.BoundAST.BoundStatement.Accept``1(Heir.BoundAST.BoundStatement.Visitor{``0})
  href: Heir.BoundAST.BoundStatement.html#Heir_BoundAST_BoundStatement_Accept__1_Heir_BoundAST_BoundStatement_Visitor___0__
  name: Accept<R>(Visitor<R>)
  nameWithType: BoundStatement.Accept<R>(BoundStatement.Visitor<R>)
  fullName: Heir.BoundAST.BoundStatement.Accept<R>(Heir.BoundAST.BoundStatement.Visitor<R>)
  nameWithType.vb: BoundStatement.Accept(Of R)(BoundStatement.Visitor(Of R))
  fullName.vb: Heir.BoundAST.BoundStatement.Accept(Of R)(Heir.BoundAST.BoundStatement.Visitor(Of R))
  name.vb: Accept(Of R)(Visitor(Of R))
  spec.csharp:
  - uid: Heir.BoundAST.BoundStatement.Accept``1(Heir.BoundAST.BoundStatement.Visitor{``0})
    name: Accept
    href: Heir.BoundAST.BoundStatement.html#Heir_BoundAST_BoundStatement_Accept__1_Heir_BoundAST_BoundStatement_Visitor___0__
  - name: <
  - name: R
  - name: '>'
  - name: (
  - uid: Heir.BoundAST.BoundStatement.Visitor`1
    name: Visitor
    href: Heir.BoundAST.BoundStatement.Visitor-1.html
  - name: <
  - name: R
  - name: '>'
  - name: )
  spec.vb:
  - uid: Heir.BoundAST.BoundStatement.Accept``1(Heir.BoundAST.BoundStatement.Visitor{``0})
    name: Accept
    href: Heir.BoundAST.BoundStatement.html#Heir_BoundAST_BoundStatement_Accept__1_Heir_BoundAST_BoundStatement_Visitor___0__
  - name: (
  - name: Of
  - name: " "
  - name: R
  - name: )
  - name: (
  - uid: Heir.BoundAST.BoundStatement.Visitor`1
    name: Visitor
    href: Heir.BoundAST.BoundStatement.Visitor-1.html
  - name: (
  - name: Of
  - name: " "
  - name: R
  - name: )
  - name: )
- uid: Heir.BoundAST.BoundStatement.Visitor`1
  commentId: T:Heir.BoundAST.BoundStatement.Visitor`1
  href: Heir.BoundAST.BoundStatement.html
  name: BoundStatement.Visitor<R>
  nameWithType: BoundStatement.Visitor<R>
  fullName: Heir.BoundAST.BoundStatement.Visitor<R>
  nameWithType.vb: BoundStatement.Visitor(Of R)
  fullName.vb: Heir.BoundAST.BoundStatement.Visitor(Of R)
  name.vb: BoundStatement.Visitor(Of R)
  spec.csharp:
  - uid: Heir.BoundAST.BoundStatement
    name: BoundStatement
    href: Heir.BoundAST.BoundStatement.html
  - name: .
  - uid: Heir.BoundAST.BoundStatement.Visitor`1
    name: Visitor
    href: Heir.BoundAST.BoundStatement.Visitor-1.html
  - name: <
  - name: R
  - name: '>'
  spec.vb:
  - uid: Heir.BoundAST.BoundStatement
    name: BoundStatement
    href: Heir.BoundAST.BoundStatement.html
  - name: .
  - uid: Heir.BoundAST.BoundStatement.Visitor`1
    name: Visitor
    href: Heir.BoundAST.BoundStatement.Visitor-1.html
  - name: (
  - name: Of
  - name: " "
  - name: R
  - name: )
- uid: R
  name: R
  nameWithType: R
  fullName: R
- uid: Heir.AST.Abstract.SyntaxNode.GetTokens
  commentId: M:Heir.AST.Abstract.SyntaxNode.GetTokens
  parent: Heir.AST.Abstract.SyntaxNode
  href: Heir.AST.Abstract.SyntaxNode.html#Heir_AST_Abstract_SyntaxNode_GetTokens
  name: GetTokens()
  nameWithType: SyntaxNode.GetTokens()
  fullName: Heir.AST.Abstract.SyntaxNode.GetTokens()
  spec.csharp:
  - uid: Heir.AST.Abstract.SyntaxNode.GetTokens
    name: GetTokens
    href: Heir.AST.Abstract.SyntaxNode.html#Heir_AST_Abstract_SyntaxNode_GetTokens
  - name: (
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.SyntaxNode.GetTokens
    name: GetTokens
    href: Heir.AST.Abstract.SyntaxNode.html#Heir_AST_Abstract_SyntaxNode_GetTokens
  - name: (
  - name: )
- uid: Heir.BoundAST.BoundExpressionStatement.GetTokens*
  commentId: Overload:Heir.BoundAST.BoundExpressionStatement.GetTokens
  href: Heir.BoundAST.BoundExpressionStatement.html#Heir_BoundAST_BoundExpressionStatement_GetTokens
  name: GetTokens
  nameWithType: BoundExpressionStatement.GetTokens
  fullName: Heir.BoundAST.BoundExpressionStatement.GetTokens
- uid: System.Collections.Generic.List{Heir.Syntax.Token}
  commentId: T:System.Collections.Generic.List{Heir.Syntax.Token}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Token>
  nameWithType: List<Token>
  fullName: System.Collections.Generic.List<Heir.Syntax.Token>
  nameWithType.vb: List(Of Token)
  fullName.vb: System.Collections.Generic.List(Of Heir.Syntax.Token)
  name.vb: List(Of Token)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Heir.Syntax.Token
    name: Token
    href: Heir.Syntax.Token.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Heir.Syntax.Token
    name: Token
    href: Heir.Syntax.Token.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Heir.AST.Abstract.SyntaxNode.Display(System.Int32)
  commentId: M:Heir.AST.Abstract.SyntaxNode.Display(System.Int32)
  parent: Heir.AST.Abstract.SyntaxNode
  isExternal: true
  href: Heir.AST.Abstract.SyntaxNode.html#Heir_AST_Abstract_SyntaxNode_Display_System_Int32_
  name: Display(int)
  nameWithType: SyntaxNode.Display(int)
  fullName: Heir.AST.Abstract.SyntaxNode.Display(int)
  nameWithType.vb: SyntaxNode.Display(Integer)
  fullName.vb: Heir.AST.Abstract.SyntaxNode.Display(Integer)
  name.vb: Display(Integer)
  spec.csharp:
  - uid: Heir.AST.Abstract.SyntaxNode.Display(System.Int32)
    name: Display
    href: Heir.AST.Abstract.SyntaxNode.html#Heir_AST_Abstract_SyntaxNode_Display_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.SyntaxNode.Display(System.Int32)
    name: Display
    href: Heir.AST.Abstract.SyntaxNode.html#Heir_AST_Abstract_SyntaxNode_Display_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Heir.BoundAST.BoundExpressionStatement.Display*
  commentId: Overload:Heir.BoundAST.BoundExpressionStatement.Display
  href: Heir.BoundAST.BoundExpressionStatement.html#Heir_BoundAST_BoundExpressionStatement_Display_System_Int32_
  name: Display
  nameWithType: BoundExpressionStatement.Display
  fullName: Heir.BoundAST.BoundExpressionStatement.Display
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
