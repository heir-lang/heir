### YamlMime:ManagedReference
items:
- uid: Heir.BoundAST.BoundStatement.Visitor`1
  commentId: T:Heir.BoundAST.BoundStatement.Visitor`1
  id: BoundStatement.Visitor`1
  parent: Heir.BoundAST
  children:
  - Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundBlock(Heir.BoundAST.BoundBlock)
  - Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundExpressionStatement(Heir.BoundAST.BoundExpressionStatement)
  - Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundFunctionDeclaration(Heir.BoundAST.BoundFunctionDeclaration)
  - Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundIfStatement(Heir.BoundAST.BoundIf)
  - Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundNoOp(Heir.BoundAST.BoundNoOpStatement)
  - Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundReturnStatement(Heir.BoundAST.BoundReturn)
  - Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundSyntaxTree(Heir.BoundAST.BoundSyntaxTree)
  - Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundVariableDeclaration(Heir.BoundAST.BoundVariableDeclaration)
  langs:
  - csharp
  - vb
  name: BoundStatement.Visitor<R>
  nameWithType: BoundStatement.Visitor<R>
  fullName: Heir.BoundAST.BoundStatement.Visitor<R>
  type: Interface
  source:
    remote:
      path: Heir/BoundAST/BoundSyntaxNode.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Visitor
    path: Heir/BoundAST/BoundSyntaxNode.cs
    startLine: 12
  assemblies:
  - Heir
  namespace: Heir.BoundAST
  syntax:
    content: public interface BoundStatement.Visitor<out R>
    typeParameters:
    - id: R
    content.vb: Public Interface BoundStatement.Visitor(Of Out R)
  nameWithType.vb: BoundStatement.Visitor(Of R)
  fullName.vb: Heir.BoundAST.BoundStatement.Visitor(Of R)
  name.vb: BoundStatement.Visitor(Of R)
- uid: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundSyntaxTree(Heir.BoundAST.BoundSyntaxTree)
  commentId: M:Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundSyntaxTree(Heir.BoundAST.BoundSyntaxTree)
  id: VisitBoundSyntaxTree(Heir.BoundAST.BoundSyntaxTree)
  parent: Heir.BoundAST.BoundStatement.Visitor`1
  langs:
  - csharp
  - vb
  name: VisitBoundSyntaxTree(BoundSyntaxTree)
  nameWithType: BoundStatement.Visitor<R>.VisitBoundSyntaxTree(BoundSyntaxTree)
  fullName: Heir.BoundAST.BoundStatement.Visitor<R>.VisitBoundSyntaxTree(Heir.BoundAST.BoundSyntaxTree)
  type: Method
  source:
    remote:
      path: Heir/BoundAST/BoundSyntaxNode.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitBoundSyntaxTree
    path: Heir/BoundAST/BoundSyntaxNode.cs
    startLine: 14
  assemblies:
  - Heir
  namespace: Heir.BoundAST
  syntax:
    content: R VisitBoundSyntaxTree(BoundSyntaxTree tree)
    parameters:
    - id: tree
      type: Heir.BoundAST.BoundSyntaxTree
    return:
      type: '{R}'
    content.vb: Function VisitBoundSyntaxTree(tree As BoundSyntaxTree) As R
  overload: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundSyntaxTree*
  nameWithType.vb: BoundStatement.Visitor(Of R).VisitBoundSyntaxTree(BoundSyntaxTree)
  fullName.vb: Heir.BoundAST.BoundStatement.Visitor(Of R).VisitBoundSyntaxTree(Heir.BoundAST.BoundSyntaxTree)
- uid: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundBlock(Heir.BoundAST.BoundBlock)
  commentId: M:Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundBlock(Heir.BoundAST.BoundBlock)
  id: VisitBoundBlock(Heir.BoundAST.BoundBlock)
  parent: Heir.BoundAST.BoundStatement.Visitor`1
  langs:
  - csharp
  - vb
  name: VisitBoundBlock(BoundBlock)
  nameWithType: BoundStatement.Visitor<R>.VisitBoundBlock(BoundBlock)
  fullName: Heir.BoundAST.BoundStatement.Visitor<R>.VisitBoundBlock(Heir.BoundAST.BoundBlock)
  type: Method
  source:
    remote:
      path: Heir/BoundAST/BoundSyntaxNode.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitBoundBlock
    path: Heir/BoundAST/BoundSyntaxNode.cs
    startLine: 15
  assemblies:
  - Heir
  namespace: Heir.BoundAST
  syntax:
    content: R VisitBoundBlock(BoundBlock boundBlock)
    parameters:
    - id: boundBlock
      type: Heir.BoundAST.BoundBlock
    return:
      type: '{R}'
    content.vb: Function VisitBoundBlock(boundBlock As BoundBlock) As R
  overload: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundBlock*
  nameWithType.vb: BoundStatement.Visitor(Of R).VisitBoundBlock(BoundBlock)
  fullName.vb: Heir.BoundAST.BoundStatement.Visitor(Of R).VisitBoundBlock(Heir.BoundAST.BoundBlock)
- uid: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundVariableDeclaration(Heir.BoundAST.BoundVariableDeclaration)
  commentId: M:Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundVariableDeclaration(Heir.BoundAST.BoundVariableDeclaration)
  id: VisitBoundVariableDeclaration(Heir.BoundAST.BoundVariableDeclaration)
  parent: Heir.BoundAST.BoundStatement.Visitor`1
  langs:
  - csharp
  - vb
  name: VisitBoundVariableDeclaration(BoundVariableDeclaration)
  nameWithType: BoundStatement.Visitor<R>.VisitBoundVariableDeclaration(BoundVariableDeclaration)
  fullName: Heir.BoundAST.BoundStatement.Visitor<R>.VisitBoundVariableDeclaration(Heir.BoundAST.BoundVariableDeclaration)
  type: Method
  source:
    remote:
      path: Heir/BoundAST/BoundSyntaxNode.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitBoundVariableDeclaration
    path: Heir/BoundAST/BoundSyntaxNode.cs
    startLine: 16
  assemblies:
  - Heir
  namespace: Heir.BoundAST
  syntax:
    content: R VisitBoundVariableDeclaration(BoundVariableDeclaration variableDeclaration)
    parameters:
    - id: variableDeclaration
      type: Heir.BoundAST.BoundVariableDeclaration
    return:
      type: '{R}'
    content.vb: Function VisitBoundVariableDeclaration(variableDeclaration As BoundVariableDeclaration) As R
  overload: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundVariableDeclaration*
  nameWithType.vb: BoundStatement.Visitor(Of R).VisitBoundVariableDeclaration(BoundVariableDeclaration)
  fullName.vb: Heir.BoundAST.BoundStatement.Visitor(Of R).VisitBoundVariableDeclaration(Heir.BoundAST.BoundVariableDeclaration)
- uid: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundExpressionStatement(Heir.BoundAST.BoundExpressionStatement)
  commentId: M:Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundExpressionStatement(Heir.BoundAST.BoundExpressionStatement)
  id: VisitBoundExpressionStatement(Heir.BoundAST.BoundExpressionStatement)
  parent: Heir.BoundAST.BoundStatement.Visitor`1
  langs:
  - csharp
  - vb
  name: VisitBoundExpressionStatement(BoundExpressionStatement)
  nameWithType: BoundStatement.Visitor<R>.VisitBoundExpressionStatement(BoundExpressionStatement)
  fullName: Heir.BoundAST.BoundStatement.Visitor<R>.VisitBoundExpressionStatement(Heir.BoundAST.BoundExpressionStatement)
  type: Method
  source:
    remote:
      path: Heir/BoundAST/BoundSyntaxNode.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitBoundExpressionStatement
    path: Heir/BoundAST/BoundSyntaxNode.cs
    startLine: 17
  assemblies:
  - Heir
  namespace: Heir.BoundAST
  syntax:
    content: R VisitBoundExpressionStatement(BoundExpressionStatement expressionStatement)
    parameters:
    - id: expressionStatement
      type: Heir.BoundAST.BoundExpressionStatement
    return:
      type: '{R}'
    content.vb: Function VisitBoundExpressionStatement(expressionStatement As BoundExpressionStatement) As R
  overload: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundExpressionStatement*
  nameWithType.vb: BoundStatement.Visitor(Of R).VisitBoundExpressionStatement(BoundExpressionStatement)
  fullName.vb: Heir.BoundAST.BoundStatement.Visitor(Of R).VisitBoundExpressionStatement(Heir.BoundAST.BoundExpressionStatement)
- uid: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundNoOp(Heir.BoundAST.BoundNoOpStatement)
  commentId: M:Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundNoOp(Heir.BoundAST.BoundNoOpStatement)
  id: VisitBoundNoOp(Heir.BoundAST.BoundNoOpStatement)
  parent: Heir.BoundAST.BoundStatement.Visitor`1
  langs:
  - csharp
  - vb
  name: VisitBoundNoOp(BoundNoOpStatement)
  nameWithType: BoundStatement.Visitor<R>.VisitBoundNoOp(BoundNoOpStatement)
  fullName: Heir.BoundAST.BoundStatement.Visitor<R>.VisitBoundNoOp(Heir.BoundAST.BoundNoOpStatement)
  type: Method
  source:
    remote:
      path: Heir/BoundAST/BoundSyntaxNode.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitBoundNoOp
    path: Heir/BoundAST/BoundSyntaxNode.cs
    startLine: 18
  assemblies:
  - Heir
  namespace: Heir.BoundAST
  syntax:
    content: R VisitBoundNoOp(BoundNoOpStatement noOp)
    parameters:
    - id: noOp
      type: Heir.BoundAST.BoundNoOpStatement
    return:
      type: '{R}'
    content.vb: Function VisitBoundNoOp(noOp As BoundNoOpStatement) As R
  overload: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundNoOp*
  nameWithType.vb: BoundStatement.Visitor(Of R).VisitBoundNoOp(BoundNoOpStatement)
  fullName.vb: Heir.BoundAST.BoundStatement.Visitor(Of R).VisitBoundNoOp(Heir.BoundAST.BoundNoOpStatement)
- uid: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundReturnStatement(Heir.BoundAST.BoundReturn)
  commentId: M:Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundReturnStatement(Heir.BoundAST.BoundReturn)
  id: VisitBoundReturnStatement(Heir.BoundAST.BoundReturn)
  parent: Heir.BoundAST.BoundStatement.Visitor`1
  langs:
  - csharp
  - vb
  name: VisitBoundReturnStatement(BoundReturn)
  nameWithType: BoundStatement.Visitor<R>.VisitBoundReturnStatement(BoundReturn)
  fullName: Heir.BoundAST.BoundStatement.Visitor<R>.VisitBoundReturnStatement(Heir.BoundAST.BoundReturn)
  type: Method
  source:
    remote:
      path: Heir/BoundAST/BoundSyntaxNode.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitBoundReturnStatement
    path: Heir/BoundAST/BoundSyntaxNode.cs
    startLine: 19
  assemblies:
  - Heir
  namespace: Heir.BoundAST
  syntax:
    content: R VisitBoundReturnStatement(BoundReturn @return)
    parameters:
    - id: return
      type: Heir.BoundAST.BoundReturn
    return:
      type: '{R}'
    content.vb: Function VisitBoundReturnStatement([return] As BoundReturn) As R
  overload: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundReturnStatement*
  nameWithType.vb: BoundStatement.Visitor(Of R).VisitBoundReturnStatement(BoundReturn)
  fullName.vb: Heir.BoundAST.BoundStatement.Visitor(Of R).VisitBoundReturnStatement(Heir.BoundAST.BoundReturn)
- uid: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundFunctionDeclaration(Heir.BoundAST.BoundFunctionDeclaration)
  commentId: M:Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundFunctionDeclaration(Heir.BoundAST.BoundFunctionDeclaration)
  id: VisitBoundFunctionDeclaration(Heir.BoundAST.BoundFunctionDeclaration)
  parent: Heir.BoundAST.BoundStatement.Visitor`1
  langs:
  - csharp
  - vb
  name: VisitBoundFunctionDeclaration(BoundFunctionDeclaration)
  nameWithType: BoundStatement.Visitor<R>.VisitBoundFunctionDeclaration(BoundFunctionDeclaration)
  fullName: Heir.BoundAST.BoundStatement.Visitor<R>.VisitBoundFunctionDeclaration(Heir.BoundAST.BoundFunctionDeclaration)
  type: Method
  source:
    remote:
      path: Heir/BoundAST/BoundSyntaxNode.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitBoundFunctionDeclaration
    path: Heir/BoundAST/BoundSyntaxNode.cs
    startLine: 20
  assemblies:
  - Heir
  namespace: Heir.BoundAST
  syntax:
    content: R VisitBoundFunctionDeclaration(BoundFunctionDeclaration declaration)
    parameters:
    - id: declaration
      type: Heir.BoundAST.BoundFunctionDeclaration
    return:
      type: '{R}'
    content.vb: Function VisitBoundFunctionDeclaration(declaration As BoundFunctionDeclaration) As R
  overload: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundFunctionDeclaration*
  nameWithType.vb: BoundStatement.Visitor(Of R).VisitBoundFunctionDeclaration(BoundFunctionDeclaration)
  fullName.vb: Heir.BoundAST.BoundStatement.Visitor(Of R).VisitBoundFunctionDeclaration(Heir.BoundAST.BoundFunctionDeclaration)
- uid: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundIfStatement(Heir.BoundAST.BoundIf)
  commentId: M:Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundIfStatement(Heir.BoundAST.BoundIf)
  id: VisitBoundIfStatement(Heir.BoundAST.BoundIf)
  parent: Heir.BoundAST.BoundStatement.Visitor`1
  langs:
  - csharp
  - vb
  name: VisitBoundIfStatement(BoundIf)
  nameWithType: BoundStatement.Visitor<R>.VisitBoundIfStatement(BoundIf)
  fullName: Heir.BoundAST.BoundStatement.Visitor<R>.VisitBoundIfStatement(Heir.BoundAST.BoundIf)
  type: Method
  source:
    remote:
      path: Heir/BoundAST/BoundSyntaxNode.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitBoundIfStatement
    path: Heir/BoundAST/BoundSyntaxNode.cs
    startLine: 21
  assemblies:
  - Heir
  namespace: Heir.BoundAST
  syntax:
    content: R VisitBoundIfStatement(BoundIf @if)
    parameters:
    - id: if
      type: Heir.BoundAST.BoundIf
    return:
      type: '{R}'
    content.vb: Function VisitBoundIfStatement([if] As BoundIf) As R
  overload: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundIfStatement*
  nameWithType.vb: BoundStatement.Visitor(Of R).VisitBoundIfStatement(BoundIf)
  fullName.vb: Heir.BoundAST.BoundStatement.Visitor(Of R).VisitBoundIfStatement(Heir.BoundAST.BoundIf)
references:
- uid: Heir.BoundAST
  commentId: N:Heir.BoundAST
  href: Heir.html
  name: Heir.BoundAST
  nameWithType: Heir.BoundAST
  fullName: Heir.BoundAST
  spec.csharp:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.BoundAST
    name: BoundAST
    href: Heir.BoundAST.html
  spec.vb:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.BoundAST
    name: BoundAST
    href: Heir.BoundAST.html
- uid: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundSyntaxTree*
  commentId: Overload:Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundSyntaxTree
  href: Heir.BoundAST.BoundStatement.Visitor-1.html#Heir_BoundAST_BoundStatement_Visitor_1_VisitBoundSyntaxTree_Heir_BoundAST_BoundSyntaxTree_
  name: VisitBoundSyntaxTree
  nameWithType: BoundStatement.Visitor<R>.VisitBoundSyntaxTree
  fullName: Heir.BoundAST.BoundStatement.Visitor<R>.VisitBoundSyntaxTree
  nameWithType.vb: BoundStatement.Visitor(Of R).VisitBoundSyntaxTree
  fullName.vb: Heir.BoundAST.BoundStatement.Visitor(Of R).VisitBoundSyntaxTree
- uid: Heir.BoundAST.BoundSyntaxTree
  commentId: T:Heir.BoundAST.BoundSyntaxTree
  parent: Heir.BoundAST
  href: Heir.BoundAST.BoundSyntaxTree.html
  name: BoundSyntaxTree
  nameWithType: BoundSyntaxTree
  fullName: Heir.BoundAST.BoundSyntaxTree
- uid: '{R}'
  commentId: '!:R'
  definition: R
  name: R
  nameWithType: R
  fullName: R
- uid: R
  name: R
  nameWithType: R
  fullName: R
- uid: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundBlock*
  commentId: Overload:Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundBlock
  href: Heir.BoundAST.BoundStatement.Visitor-1.html#Heir_BoundAST_BoundStatement_Visitor_1_VisitBoundBlock_Heir_BoundAST_BoundBlock_
  name: VisitBoundBlock
  nameWithType: BoundStatement.Visitor<R>.VisitBoundBlock
  fullName: Heir.BoundAST.BoundStatement.Visitor<R>.VisitBoundBlock
  nameWithType.vb: BoundStatement.Visitor(Of R).VisitBoundBlock
  fullName.vb: Heir.BoundAST.BoundStatement.Visitor(Of R).VisitBoundBlock
- uid: Heir.BoundAST.BoundBlock
  commentId: T:Heir.BoundAST.BoundBlock
  parent: Heir.BoundAST
  href: Heir.BoundAST.BoundBlock.html
  name: BoundBlock
  nameWithType: BoundBlock
  fullName: Heir.BoundAST.BoundBlock
- uid: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundVariableDeclaration*
  commentId: Overload:Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundVariableDeclaration
  href: Heir.BoundAST.BoundStatement.Visitor-1.html#Heir_BoundAST_BoundStatement_Visitor_1_VisitBoundVariableDeclaration_Heir_BoundAST_BoundVariableDeclaration_
  name: VisitBoundVariableDeclaration
  nameWithType: BoundStatement.Visitor<R>.VisitBoundVariableDeclaration
  fullName: Heir.BoundAST.BoundStatement.Visitor<R>.VisitBoundVariableDeclaration
  nameWithType.vb: BoundStatement.Visitor(Of R).VisitBoundVariableDeclaration
  fullName.vb: Heir.BoundAST.BoundStatement.Visitor(Of R).VisitBoundVariableDeclaration
- uid: Heir.BoundAST.BoundVariableDeclaration
  commentId: T:Heir.BoundAST.BoundVariableDeclaration
  parent: Heir.BoundAST
  href: Heir.BoundAST.BoundVariableDeclaration.html
  name: BoundVariableDeclaration
  nameWithType: BoundVariableDeclaration
  fullName: Heir.BoundAST.BoundVariableDeclaration
- uid: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundExpressionStatement*
  commentId: Overload:Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundExpressionStatement
  href: Heir.BoundAST.BoundStatement.Visitor-1.html#Heir_BoundAST_BoundStatement_Visitor_1_VisitBoundExpressionStatement_Heir_BoundAST_BoundExpressionStatement_
  name: VisitBoundExpressionStatement
  nameWithType: BoundStatement.Visitor<R>.VisitBoundExpressionStatement
  fullName: Heir.BoundAST.BoundStatement.Visitor<R>.VisitBoundExpressionStatement
  nameWithType.vb: BoundStatement.Visitor(Of R).VisitBoundExpressionStatement
  fullName.vb: Heir.BoundAST.BoundStatement.Visitor(Of R).VisitBoundExpressionStatement
- uid: Heir.BoundAST.BoundExpressionStatement
  commentId: T:Heir.BoundAST.BoundExpressionStatement
  parent: Heir.BoundAST
  href: Heir.BoundAST.BoundExpressionStatement.html
  name: BoundExpressionStatement
  nameWithType: BoundExpressionStatement
  fullName: Heir.BoundAST.BoundExpressionStatement
- uid: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundNoOp*
  commentId: Overload:Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundNoOp
  href: Heir.BoundAST.BoundStatement.Visitor-1.html#Heir_BoundAST_BoundStatement_Visitor_1_VisitBoundNoOp_Heir_BoundAST_BoundNoOpStatement_
  name: VisitBoundNoOp
  nameWithType: BoundStatement.Visitor<R>.VisitBoundNoOp
  fullName: Heir.BoundAST.BoundStatement.Visitor<R>.VisitBoundNoOp
  nameWithType.vb: BoundStatement.Visitor(Of R).VisitBoundNoOp
  fullName.vb: Heir.BoundAST.BoundStatement.Visitor(Of R).VisitBoundNoOp
- uid: Heir.BoundAST.BoundNoOpStatement
  commentId: T:Heir.BoundAST.BoundNoOpStatement
  parent: Heir.BoundAST
  href: Heir.BoundAST.BoundNoOpStatement.html
  name: BoundNoOpStatement
  nameWithType: BoundNoOpStatement
  fullName: Heir.BoundAST.BoundNoOpStatement
- uid: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundReturnStatement*
  commentId: Overload:Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundReturnStatement
  href: Heir.BoundAST.BoundStatement.Visitor-1.html#Heir_BoundAST_BoundStatement_Visitor_1_VisitBoundReturnStatement_Heir_BoundAST_BoundReturn_
  name: VisitBoundReturnStatement
  nameWithType: BoundStatement.Visitor<R>.VisitBoundReturnStatement
  fullName: Heir.BoundAST.BoundStatement.Visitor<R>.VisitBoundReturnStatement
  nameWithType.vb: BoundStatement.Visitor(Of R).VisitBoundReturnStatement
  fullName.vb: Heir.BoundAST.BoundStatement.Visitor(Of R).VisitBoundReturnStatement
- uid: Heir.BoundAST.BoundReturn
  commentId: T:Heir.BoundAST.BoundReturn
  parent: Heir.BoundAST
  href: Heir.BoundAST.BoundReturn.html
  name: BoundReturn
  nameWithType: BoundReturn
  fullName: Heir.BoundAST.BoundReturn
- uid: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundFunctionDeclaration*
  commentId: Overload:Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundFunctionDeclaration
  href: Heir.BoundAST.BoundStatement.Visitor-1.html#Heir_BoundAST_BoundStatement_Visitor_1_VisitBoundFunctionDeclaration_Heir_BoundAST_BoundFunctionDeclaration_
  name: VisitBoundFunctionDeclaration
  nameWithType: BoundStatement.Visitor<R>.VisitBoundFunctionDeclaration
  fullName: Heir.BoundAST.BoundStatement.Visitor<R>.VisitBoundFunctionDeclaration
  nameWithType.vb: BoundStatement.Visitor(Of R).VisitBoundFunctionDeclaration
  fullName.vb: Heir.BoundAST.BoundStatement.Visitor(Of R).VisitBoundFunctionDeclaration
- uid: Heir.BoundAST.BoundFunctionDeclaration
  commentId: T:Heir.BoundAST.BoundFunctionDeclaration
  parent: Heir.BoundAST
  href: Heir.BoundAST.BoundFunctionDeclaration.html
  name: BoundFunctionDeclaration
  nameWithType: BoundFunctionDeclaration
  fullName: Heir.BoundAST.BoundFunctionDeclaration
- uid: Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundIfStatement*
  commentId: Overload:Heir.BoundAST.BoundStatement.Visitor`1.VisitBoundIfStatement
  href: Heir.BoundAST.BoundStatement.Visitor-1.html#Heir_BoundAST_BoundStatement_Visitor_1_VisitBoundIfStatement_Heir_BoundAST_BoundIf_
  name: VisitBoundIfStatement
  nameWithType: BoundStatement.Visitor<R>.VisitBoundIfStatement
  fullName: Heir.BoundAST.BoundStatement.Visitor<R>.VisitBoundIfStatement
  nameWithType.vb: BoundStatement.Visitor(Of R).VisitBoundIfStatement
  fullName.vb: Heir.BoundAST.BoundStatement.Visitor(Of R).VisitBoundIfStatement
- uid: Heir.BoundAST.BoundIf
  commentId: T:Heir.BoundAST.BoundIf
  parent: Heir.BoundAST
  href: Heir.BoundAST.BoundIf.html
  name: BoundIf
  nameWithType: BoundIf
  fullName: Heir.BoundAST.BoundIf
