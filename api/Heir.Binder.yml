### YamlMime:ManagedReference
items:
- uid: Heir.Binder
  commentId: T:Heir.Binder
  id: Binder
  parent: Heir
  children:
  - Heir.Binder.#ctor(Heir.DiagnosticBag,Heir.AST.SyntaxTree)
  - Heir.Binder.Bind
  - Heir.Binder.DefineSymbol(Heir.Syntax.Token,Heir.Types.BaseType,System.Boolean)
  - Heir.Binder.DefineSymbol``1(Heir.Syntax.Token,``0,System.Boolean)
  - Heir.Binder.FindSymbol(Heir.Syntax.Token,System.Boolean)
  - Heir.Binder.GetBoundNode(Heir.AST.Abstract.Expression)
  - Heir.Binder.GetBoundNode(Heir.AST.Abstract.Statement)
  - Heir.Binder.GetBoundNode(Heir.AST.Abstract.SyntaxNode)
  - Heir.Binder.GetBoundSyntaxTree
  - Heir.Binder.SyntaxTree
  - Heir.Binder.VisitAssignmentOpExpression(Heir.AST.AssignmentOp)
  - Heir.Binder.VisitBinaryOpExpression(Heir.AST.BinaryOp)
  - Heir.Binder.VisitBlock(Heir.AST.Block)
  - Heir.Binder.VisitElementAccessExpression(Heir.AST.ElementAccess)
  - Heir.Binder.VisitExpressionStatement(Heir.AST.ExpressionStatement)
  - Heir.Binder.VisitFunctionDeclaration(Heir.AST.FunctionDeclaration)
  - Heir.Binder.VisitIdentifierNameExpression(Heir.AST.IdentifierName)
  - Heir.Binder.VisitIfStatement(Heir.AST.If)
  - Heir.Binder.VisitIntersectionTypeRef(Heir.AST.IntersectionType)
  - Heir.Binder.VisitInvocationExpression(Heir.AST.Invocation)
  - Heir.Binder.VisitLiteralExpression(Heir.AST.Literal)
  - Heir.Binder.VisitMemberAccessExpression(Heir.AST.MemberAccess)
  - Heir.Binder.VisitNoOp(Heir.AST.NoOp)
  - Heir.Binder.VisitNoOp(Heir.AST.NoOpStatement)
  - Heir.Binder.VisitNoOp(Heir.AST.NoOpType)
  - Heir.Binder.VisitObjectLiteralExpression(Heir.AST.ObjectLiteral)
  - Heir.Binder.VisitParameter(Heir.AST.Parameter)
  - Heir.Binder.VisitParenthesizedExpression(Heir.AST.Parenthesized)
  - Heir.Binder.VisitParenthesizedTypeRef(Heir.AST.ParenthesizedType)
  - Heir.Binder.VisitReturnStatement(Heir.AST.Return)
  - Heir.Binder.VisitSingularTypeRef(Heir.AST.SingularType)
  - Heir.Binder.VisitSyntaxTree(Heir.AST.SyntaxTree)
  - Heir.Binder.VisitUnaryOpExpression(Heir.AST.UnaryOp)
  - Heir.Binder.VisitUnionTypeRef(Heir.AST.UnionType)
  - Heir.Binder.VisitVariableDeclaration(Heir.AST.VariableDeclaration)
  langs:
  - csharp
  - vb
  name: Binder
  nameWithType: Binder
  fullName: Heir.Binder
  type: Class
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Binder
    path: Heir/Binder.cs
    startLine: 12
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: 'public sealed class Binder : Statement.Visitor<BoundStatement>, Expression.Visitor<BoundExpression>'
    content.vb: Public NotInheritable Class Binder Implements Statement.Visitor(Of BoundStatement), Expression.Visitor(Of BoundExpression)
  inheritance:
  - System.Object
  implements:
  - Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}
  - Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Heir.Binder.#ctor(Heir.DiagnosticBag,Heir.AST.SyntaxTree)
  commentId: M:Heir.Binder.#ctor(Heir.DiagnosticBag,Heir.AST.SyntaxTree)
  id: '#ctor(Heir.DiagnosticBag,Heir.AST.SyntaxTree)'
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: Binder(DiagnosticBag, SyntaxTree)
  nameWithType: Binder.Binder(DiagnosticBag, SyntaxTree)
  fullName: Heir.Binder.Binder(Heir.DiagnosticBag, Heir.AST.SyntaxTree)
  type: Constructor
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: .ctor
    path: Heir/Binder.cs
    startLine: 12
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public Binder(DiagnosticBag diagnostics, SyntaxTree syntaxTree)
    parameters:
    - id: diagnostics
      type: Heir.DiagnosticBag
    - id: syntaxTree
      type: Heir.AST.SyntaxTree
    content.vb: Public Sub New(diagnostics As DiagnosticBag, syntaxTree As SyntaxTree)
  overload: Heir.Binder.#ctor*
  nameWithType.vb: Binder.New(DiagnosticBag, SyntaxTree)
  fullName.vb: Heir.Binder.New(Heir.DiagnosticBag, Heir.AST.SyntaxTree)
  name.vb: New(DiagnosticBag, SyntaxTree)
- uid: Heir.Binder.SyntaxTree
  commentId: P:Heir.Binder.SyntaxTree
  id: SyntaxTree
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: SyntaxTree
  nameWithType: Binder.SyntaxTree
  fullName: Heir.Binder.SyntaxTree
  type: Property
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: SyntaxTree
    path: Heir/Binder.cs
    startLine: 14
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public SyntaxTree SyntaxTree { get; }
    parameters: []
    return:
      type: Heir.AST.SyntaxTree
    content.vb: Public ReadOnly Property SyntaxTree As SyntaxTree
  overload: Heir.Binder.SyntaxTree*
- uid: Heir.Binder.Bind
  commentId: M:Heir.Binder.Bind
  id: Bind
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: Bind()
  nameWithType: Binder.Bind()
  fullName: Heir.Binder.Bind()
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Bind
    path: Heir/Binder.cs
    startLine: 19
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public BoundSyntaxTree Bind()
    return:
      type: Heir.BoundAST.BoundSyntaxTree
    content.vb: Public Function Bind() As BoundSyntaxTree
  overload: Heir.Binder.Bind*
- uid: Heir.Binder.GetBoundSyntaxTree
  commentId: M:Heir.Binder.GetBoundSyntaxTree
  id: GetBoundSyntaxTree
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: GetBoundSyntaxTree()
  nameWithType: Binder.GetBoundSyntaxTree()
  fullName: Heir.Binder.GetBoundSyntaxTree()
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: GetBoundSyntaxTree
    path: Heir/Binder.cs
    startLine: 29
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public BoundSyntaxTree GetBoundSyntaxTree()
    return:
      type: Heir.BoundAST.BoundSyntaxTree
    content.vb: Public Function GetBoundSyntaxTree() As BoundSyntaxTree
  overload: Heir.Binder.GetBoundSyntaxTree*
- uid: Heir.Binder.GetBoundNode(Heir.AST.Abstract.Statement)
  commentId: M:Heir.Binder.GetBoundNode(Heir.AST.Abstract.Statement)
  id: GetBoundNode(Heir.AST.Abstract.Statement)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: GetBoundNode(Statement)
  nameWithType: Binder.GetBoundNode(Statement)
  fullName: Heir.Binder.GetBoundNode(Heir.AST.Abstract.Statement)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: GetBoundNode
    path: Heir/Binder.cs
    startLine: 30
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public BoundStatement GetBoundNode(Statement statement)
    parameters:
    - id: statement
      type: Heir.AST.Abstract.Statement
    return:
      type: Heir.BoundAST.BoundStatement
    content.vb: Public Function GetBoundNode(statement As Statement) As BoundStatement
  overload: Heir.Binder.GetBoundNode*
- uid: Heir.Binder.GetBoundNode(Heir.AST.Abstract.Expression)
  commentId: M:Heir.Binder.GetBoundNode(Heir.AST.Abstract.Expression)
  id: GetBoundNode(Heir.AST.Abstract.Expression)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: GetBoundNode(Expression)
  nameWithType: Binder.GetBoundNode(Expression)
  fullName: Heir.Binder.GetBoundNode(Heir.AST.Abstract.Expression)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: GetBoundNode
    path: Heir/Binder.cs
    startLine: 31
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public BoundExpression GetBoundNode(Expression expression)
    parameters:
    - id: expression
      type: Heir.AST.Abstract.Expression
    return:
      type: Heir.BoundAST.BoundExpression
    content.vb: Public Function GetBoundNode(expression As Expression) As BoundExpression
  overload: Heir.Binder.GetBoundNode*
- uid: Heir.Binder.GetBoundNode(Heir.AST.Abstract.SyntaxNode)
  commentId: M:Heir.Binder.GetBoundNode(Heir.AST.Abstract.SyntaxNode)
  id: GetBoundNode(Heir.AST.Abstract.SyntaxNode)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: GetBoundNode(SyntaxNode)
  nameWithType: Binder.GetBoundNode(SyntaxNode)
  fullName: Heir.Binder.GetBoundNode(Heir.AST.Abstract.SyntaxNode)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: GetBoundNode
    path: Heir/Binder.cs
    startLine: 32
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public BoundSyntaxNode GetBoundNode(SyntaxNode node)
    parameters:
    - id: node
      type: Heir.AST.Abstract.SyntaxNode
    return:
      type: Heir.BoundAST.BoundSyntaxNode
    content.vb: Public Function GetBoundNode(node As SyntaxNode) As BoundSyntaxNode
  overload: Heir.Binder.GetBoundNode*
- uid: Heir.Binder.DefineSymbol(Heir.Syntax.Token,Heir.Types.BaseType,System.Boolean)
  commentId: M:Heir.Binder.DefineSymbol(Heir.Syntax.Token,Heir.Types.BaseType,System.Boolean)
  id: DefineSymbol(Heir.Syntax.Token,Heir.Types.BaseType,System.Boolean)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: DefineSymbol(Token, BaseType, bool)
  nameWithType: Binder.DefineSymbol(Token, BaseType, bool)
  fullName: Heir.Binder.DefineSymbol(Heir.Syntax.Token, Heir.Types.BaseType, bool)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: DefineSymbol
    path: Heir/Binder.cs
    startLine: 34
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public VariableSymbol<BaseType> DefineSymbol(Token name, BaseType type, bool isMutable)
    parameters:
    - id: name
      type: Heir.Syntax.Token
    - id: type
      type: Heir.Types.BaseType
    - id: isMutable
      type: System.Boolean
    return:
      type: Heir.Binding.VariableSymbol{Heir.Types.BaseType}
    content.vb: Public Function DefineSymbol(name As Token, type As BaseType, isMutable As Boolean) As VariableSymbol(Of BaseType)
  overload: Heir.Binder.DefineSymbol*
  nameWithType.vb: Binder.DefineSymbol(Token, BaseType, Boolean)
  fullName.vb: Heir.Binder.DefineSymbol(Heir.Syntax.Token, Heir.Types.BaseType, Boolean)
  name.vb: DefineSymbol(Token, BaseType, Boolean)
- uid: Heir.Binder.DefineSymbol``1(Heir.Syntax.Token,``0,System.Boolean)
  commentId: M:Heir.Binder.DefineSymbol``1(Heir.Syntax.Token,``0,System.Boolean)
  id: DefineSymbol``1(Heir.Syntax.Token,``0,System.Boolean)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: DefineSymbol<TType>(Token, TType, bool)
  nameWithType: Binder.DefineSymbol<TType>(Token, TType, bool)
  fullName: Heir.Binder.DefineSymbol<TType>(Heir.Syntax.Token, TType, bool)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: DefineSymbol
    path: Heir/Binder.cs
    startLine: 37
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: 'public VariableSymbol<TType> DefineSymbol<TType>(Token name, TType type, bool isMutable) where TType : BaseType'
    parameters:
    - id: name
      type: Heir.Syntax.Token
    - id: type
      type: '{TType}'
    - id: isMutable
      type: System.Boolean
    typeParameters:
    - id: TType
    return:
      type: Heir.Binding.VariableSymbol{{TType}}
    content.vb: Public Function DefineSymbol(Of TType As BaseType)(name As Token, type As TType, isMutable As Boolean) As VariableSymbol(Of TType)
  overload: Heir.Binder.DefineSymbol*
  nameWithType.vb: Binder.DefineSymbol(Of TType)(Token, TType, Boolean)
  fullName.vb: Heir.Binder.DefineSymbol(Of TType)(Heir.Syntax.Token, TType, Boolean)
  name.vb: DefineSymbol(Of TType)(Token, TType, Boolean)
- uid: Heir.Binder.FindSymbol(Heir.Syntax.Token,System.Boolean)
  commentId: M:Heir.Binder.FindSymbol(Heir.Syntax.Token,System.Boolean)
  id: FindSymbol(Heir.Syntax.Token,System.Boolean)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: FindSymbol(Token, bool)
  nameWithType: Binder.FindSymbol(Token, bool)
  fullName: Heir.Binder.FindSymbol(Heir.Syntax.Token, bool)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: FindSymbol
    path: Heir/Binder.cs
    startLine: 47
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public VariableSymbol<BaseType>? FindSymbol(Token name, bool errorIfNotFound = true)
    parameters:
    - id: name
      type: Heir.Syntax.Token
    - id: errorIfNotFound
      type: System.Boolean
    return:
      type: Heir.Binding.VariableSymbol{Heir.Types.BaseType}
    content.vb: Public Function FindSymbol(name As Token, errorIfNotFound As Boolean = True) As VariableSymbol(Of BaseType)
  overload: Heir.Binder.FindSymbol*
  nameWithType.vb: Binder.FindSymbol(Token, Boolean)
  fullName.vb: Heir.Binder.FindSymbol(Heir.Syntax.Token, Boolean)
  name.vb: FindSymbol(Token, Boolean)
- uid: Heir.Binder.VisitSyntaxTree(Heir.AST.SyntaxTree)
  commentId: M:Heir.Binder.VisitSyntaxTree(Heir.AST.SyntaxTree)
  id: VisitSyntaxTree(Heir.AST.SyntaxTree)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitSyntaxTree(SyntaxTree)
  nameWithType: Binder.VisitSyntaxTree(SyntaxTree)
  fullName: Heir.Binder.VisitSyntaxTree(Heir.AST.SyntaxTree)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitSyntaxTree
    path: Heir/Binder.cs
    startLine: 62
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundStatement VisitSyntaxTree(SyntaxTree tree)
    parameters:
    - id: tree
      type: Heir.AST.SyntaxTree
    return:
      type: Heir.BoundAST.BoundStatement
    content.vb: Public Function VisitSyntaxTree(tree As SyntaxTree) As BoundStatement
  overload: Heir.Binder.VisitSyntaxTree*
  implements:
  - Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitSyntaxTree(Heir.AST.SyntaxTree)
- uid: Heir.Binder.VisitBlock(Heir.AST.Block)
  commentId: M:Heir.Binder.VisitBlock(Heir.AST.Block)
  id: VisitBlock(Heir.AST.Block)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitBlock(Block)
  nameWithType: Binder.VisitBlock(Block)
  fullName: Heir.Binder.VisitBlock(Heir.AST.Block)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitBlock
    path: Heir/Binder.cs
    startLine: 65
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundStatement VisitBlock(Block block)
    parameters:
    - id: block
      type: Heir.AST.Block
    return:
      type: Heir.BoundAST.BoundStatement
    content.vb: Public Function VisitBlock(block As Block) As BoundStatement
  overload: Heir.Binder.VisitBlock*
  implements:
  - Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitBlock(Heir.AST.Block)
- uid: Heir.Binder.VisitVariableDeclaration(Heir.AST.VariableDeclaration)
  commentId: M:Heir.Binder.VisitVariableDeclaration(Heir.AST.VariableDeclaration)
  id: VisitVariableDeclaration(Heir.AST.VariableDeclaration)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitVariableDeclaration(VariableDeclaration)
  nameWithType: Binder.VisitVariableDeclaration(VariableDeclaration)
  fullName: Heir.Binder.VisitVariableDeclaration(Heir.AST.VariableDeclaration)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitVariableDeclaration
    path: Heir/Binder.cs
    startLine: 67
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundStatement VisitVariableDeclaration(VariableDeclaration variableDeclaration)
    parameters:
    - id: variableDeclaration
      type: Heir.AST.VariableDeclaration
    return:
      type: Heir.BoundAST.BoundStatement
    content.vb: Public Function VisitVariableDeclaration(variableDeclaration As VariableDeclaration) As BoundStatement
  overload: Heir.Binder.VisitVariableDeclaration*
  implements:
  - Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitVariableDeclaration(Heir.AST.VariableDeclaration)
- uid: Heir.Binder.VisitFunctionDeclaration(Heir.AST.FunctionDeclaration)
  commentId: M:Heir.Binder.VisitFunctionDeclaration(Heir.AST.FunctionDeclaration)
  id: VisitFunctionDeclaration(Heir.AST.FunctionDeclaration)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitFunctionDeclaration(FunctionDeclaration)
  nameWithType: Binder.VisitFunctionDeclaration(FunctionDeclaration)
  fullName: Heir.Binder.VisitFunctionDeclaration(Heir.AST.FunctionDeclaration)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitFunctionDeclaration
    path: Heir/Binder.cs
    startLine: 83
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundStatement VisitFunctionDeclaration(FunctionDeclaration functionDeclaration)
    parameters:
    - id: functionDeclaration
      type: Heir.AST.FunctionDeclaration
    return:
      type: Heir.BoundAST.BoundStatement
    content.vb: Public Function VisitFunctionDeclaration(functionDeclaration As FunctionDeclaration) As BoundStatement
  overload: Heir.Binder.VisitFunctionDeclaration*
  implements:
  - Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitFunctionDeclaration(Heir.AST.FunctionDeclaration)
- uid: Heir.Binder.VisitReturnStatement(Heir.AST.Return)
  commentId: M:Heir.Binder.VisitReturnStatement(Heir.AST.Return)
  id: VisitReturnStatement(Heir.AST.Return)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitReturnStatement(Return)
  nameWithType: Binder.VisitReturnStatement(Return)
  fullName: Heir.Binder.VisitReturnStatement(Heir.AST.Return)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitReturnStatement
    path: Heir/Binder.cs
    startLine: 128
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundStatement VisitReturnStatement(Return @return)
    parameters:
    - id: return
      type: Heir.AST.Return
    return:
      type: Heir.BoundAST.BoundStatement
    content.vb: Public Function VisitReturnStatement([return] As [Return]) As BoundStatement
  overload: Heir.Binder.VisitReturnStatement*
  implements:
  - Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitReturnStatement(Heir.AST.Return)
- uid: Heir.Binder.VisitIfStatement(Heir.AST.If)
  commentId: M:Heir.Binder.VisitIfStatement(Heir.AST.If)
  id: VisitIfStatement(Heir.AST.If)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitIfStatement(If)
  nameWithType: Binder.VisitIfStatement(If)
  fullName: Heir.Binder.VisitIfStatement(Heir.AST.If)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitIfStatement
    path: Heir/Binder.cs
    startLine: 134
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundStatement VisitIfStatement(If @if)
    parameters:
    - id: if
      type: Heir.AST.If
    return:
      type: Heir.BoundAST.BoundStatement
    content.vb: Public Function VisitIfStatement([if] As [If]) As BoundStatement
  overload: Heir.Binder.VisitIfStatement*
  implements:
  - Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitIfStatement(Heir.AST.If)
- uid: Heir.Binder.VisitExpressionStatement(Heir.AST.ExpressionStatement)
  commentId: M:Heir.Binder.VisitExpressionStatement(Heir.AST.ExpressionStatement)
  id: VisitExpressionStatement(Heir.AST.ExpressionStatement)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitExpressionStatement(ExpressionStatement)
  nameWithType: Binder.VisitExpressionStatement(ExpressionStatement)
  fullName: Heir.Binder.VisitExpressionStatement(Heir.AST.ExpressionStatement)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitExpressionStatement
    path: Heir/Binder.cs
    startLine: 143
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundStatement VisitExpressionStatement(ExpressionStatement expressionStatement)
    parameters:
    - id: expressionStatement
      type: Heir.AST.ExpressionStatement
    return:
      type: Heir.BoundAST.BoundStatement
    content.vb: Public Function VisitExpressionStatement(expressionStatement As ExpressionStatement) As BoundStatement
  overload: Heir.Binder.VisitExpressionStatement*
  implements:
  - Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitExpressionStatement(Heir.AST.ExpressionStatement)
- uid: Heir.Binder.VisitParameter(Heir.AST.Parameter)
  commentId: M:Heir.Binder.VisitParameter(Heir.AST.Parameter)
  id: VisitParameter(Heir.AST.Parameter)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitParameter(Parameter)
  nameWithType: Binder.VisitParameter(Parameter)
  fullName: Heir.Binder.VisitParameter(Heir.AST.Parameter)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitParameter
    path: Heir/Binder.cs
    startLine: 149
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundExpression VisitParameter(Parameter parameter)
    parameters:
    - id: parameter
      type: Heir.AST.Parameter
    return:
      type: Heir.BoundAST.BoundExpression
    content.vb: Public Function VisitParameter(parameter As Parameter) As BoundExpression
  overload: Heir.Binder.VisitParameter*
  implements:
  - Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitParameter(Heir.AST.Parameter)
- uid: Heir.Binder.VisitMemberAccessExpression(Heir.AST.MemberAccess)
  commentId: M:Heir.Binder.VisitMemberAccessExpression(Heir.AST.MemberAccess)
  id: VisitMemberAccessExpression(Heir.AST.MemberAccess)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitMemberAccessExpression(MemberAccess)
  nameWithType: Binder.VisitMemberAccessExpression(MemberAccess)
  fullName: Heir.Binder.VisitMemberAccessExpression(Heir.AST.MemberAccess)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitMemberAccessExpression
    path: Heir/Binder.cs
    startLine: 165
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundExpression VisitMemberAccessExpression(MemberAccess memberAccess)
    parameters:
    - id: memberAccess
      type: Heir.AST.MemberAccess
    return:
      type: Heir.BoundAST.BoundExpression
    content.vb: Public Function VisitMemberAccessExpression(memberAccess As MemberAccess) As BoundExpression
  overload: Heir.Binder.VisitMemberAccessExpression*
  implements:
  - Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitMemberAccessExpression(Heir.AST.MemberAccess)
- uid: Heir.Binder.VisitElementAccessExpression(Heir.AST.ElementAccess)
  commentId: M:Heir.Binder.VisitElementAccessExpression(Heir.AST.ElementAccess)
  id: VisitElementAccessExpression(Heir.AST.ElementAccess)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitElementAccessExpression(ElementAccess)
  nameWithType: Binder.VisitElementAccessExpression(ElementAccess)
  fullName: Heir.Binder.VisitElementAccessExpression(Heir.AST.ElementAccess)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitElementAccessExpression
    path: Heir/Binder.cs
    startLine: 172
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundExpression VisitElementAccessExpression(ElementAccess elementAccess)
    parameters:
    - id: elementAccess
      type: Heir.AST.ElementAccess
    return:
      type: Heir.BoundAST.BoundExpression
    content.vb: Public Function VisitElementAccessExpression(elementAccess As ElementAccess) As BoundExpression
  overload: Heir.Binder.VisitElementAccessExpression*
  implements:
  - Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitElementAccessExpression(Heir.AST.ElementAccess)
- uid: Heir.Binder.VisitInvocationExpression(Heir.AST.Invocation)
  commentId: M:Heir.Binder.VisitInvocationExpression(Heir.AST.Invocation)
  id: VisitInvocationExpression(Heir.AST.Invocation)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitInvocationExpression(Invocation)
  nameWithType: Binder.VisitInvocationExpression(Invocation)
  fullName: Heir.Binder.VisitInvocationExpression(Heir.AST.Invocation)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitInvocationExpression
    path: Heir/Binder.cs
    startLine: 179
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundExpression VisitInvocationExpression(Invocation invocation)
    parameters:
    - id: invocation
      type: Heir.AST.Invocation
    return:
      type: Heir.BoundAST.BoundExpression
    content.vb: Public Function VisitInvocationExpression(invocation As Invocation) As BoundExpression
  overload: Heir.Binder.VisitInvocationExpression*
  implements:
  - Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitInvocationExpression(Heir.AST.Invocation)
- uid: Heir.Binder.VisitAssignmentOpExpression(Heir.AST.AssignmentOp)
  commentId: M:Heir.Binder.VisitAssignmentOpExpression(Heir.AST.AssignmentOp)
  id: VisitAssignmentOpExpression(Heir.AST.AssignmentOp)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitAssignmentOpExpression(AssignmentOp)
  nameWithType: Binder.VisitAssignmentOpExpression(AssignmentOp)
  fullName: Heir.Binder.VisitAssignmentOpExpression(Heir.AST.AssignmentOp)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitAssignmentOpExpression
    path: Heir/Binder.cs
    startLine: 186
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundExpression VisitAssignmentOpExpression(AssignmentOp assignmentOp)
    parameters:
    - id: assignmentOp
      type: Heir.AST.AssignmentOp
    return:
      type: Heir.BoundAST.BoundExpression
    content.vb: Public Function VisitAssignmentOpExpression(assignmentOp As AssignmentOp) As BoundExpression
  overload: Heir.Binder.VisitAssignmentOpExpression*
  implements:
  - Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitAssignmentOpExpression(Heir.AST.AssignmentOp)
- uid: Heir.Binder.VisitBinaryOpExpression(Heir.AST.BinaryOp)
  commentId: M:Heir.Binder.VisitBinaryOpExpression(Heir.AST.BinaryOp)
  id: VisitBinaryOpExpression(Heir.AST.BinaryOp)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitBinaryOpExpression(BinaryOp)
  nameWithType: Binder.VisitBinaryOpExpression(BinaryOp)
  fullName: Heir.Binder.VisitBinaryOpExpression(Heir.AST.BinaryOp)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitBinaryOpExpression
    path: Heir/Binder.cs
    startLine: 198
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundExpression VisitBinaryOpExpression(BinaryOp binaryOp)
    parameters:
    - id: binaryOp
      type: Heir.AST.BinaryOp
    return:
      type: Heir.BoundAST.BoundExpression
    content.vb: Public Function VisitBinaryOpExpression(binaryOp As BinaryOp) As BoundExpression
  overload: Heir.Binder.VisitBinaryOpExpression*
  implements:
  - Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitBinaryOpExpression(Heir.AST.BinaryOp)
- uid: Heir.Binder.VisitUnaryOpExpression(Heir.AST.UnaryOp)
  commentId: M:Heir.Binder.VisitUnaryOpExpression(Heir.AST.UnaryOp)
  id: VisitUnaryOpExpression(Heir.AST.UnaryOp)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitUnaryOpExpression(UnaryOp)
  nameWithType: Binder.VisitUnaryOpExpression(UnaryOp)
  fullName: Heir.Binder.VisitUnaryOpExpression(Heir.AST.UnaryOp)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitUnaryOpExpression
    path: Heir/Binder.cs
    startLine: 212
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundExpression VisitUnaryOpExpression(UnaryOp unaryOp)
    parameters:
    - id: unaryOp
      type: Heir.AST.UnaryOp
    return:
      type: Heir.BoundAST.BoundExpression
    content.vb: Public Function VisitUnaryOpExpression(unaryOp As UnaryOp) As BoundExpression
  overload: Heir.Binder.VisitUnaryOpExpression*
  implements:
  - Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitUnaryOpExpression(Heir.AST.UnaryOp)
- uid: Heir.Binder.VisitIdentifierNameExpression(Heir.AST.IdentifierName)
  commentId: M:Heir.Binder.VisitIdentifierNameExpression(Heir.AST.IdentifierName)
  id: VisitIdentifierNameExpression(Heir.AST.IdentifierName)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitIdentifierNameExpression(IdentifierName)
  nameWithType: Binder.VisitIdentifierNameExpression(IdentifierName)
  fullName: Heir.Binder.VisitIdentifierNameExpression(Heir.AST.IdentifierName)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitIdentifierNameExpression
    path: Heir/Binder.cs
    startLine: 225
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundExpression VisitIdentifierNameExpression(IdentifierName identifierName)
    parameters:
    - id: identifierName
      type: Heir.AST.IdentifierName
    return:
      type: Heir.BoundAST.BoundExpression
    content.vb: Public Function VisitIdentifierNameExpression(identifierName As IdentifierName) As BoundExpression
  overload: Heir.Binder.VisitIdentifierNameExpression*
  implements:
  - Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitIdentifierNameExpression(Heir.AST.IdentifierName)
- uid: Heir.Binder.VisitLiteralExpression(Heir.AST.Literal)
  commentId: M:Heir.Binder.VisitLiteralExpression(Heir.AST.Literal)
  id: VisitLiteralExpression(Heir.AST.Literal)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitLiteralExpression(Literal)
  nameWithType: Binder.VisitLiteralExpression(Literal)
  fullName: Heir.Binder.VisitLiteralExpression(Heir.AST.Literal)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitLiteralExpression
    path: Heir/Binder.cs
    startLine: 233
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundExpression VisitLiteralExpression(Literal literal)
    parameters:
    - id: literal
      type: Heir.AST.Literal
    return:
      type: Heir.BoundAST.BoundExpression
    content.vb: Public Function VisitLiteralExpression(literal As Literal) As BoundExpression
  overload: Heir.Binder.VisitLiteralExpression*
  implements:
  - Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitLiteralExpression(Heir.AST.Literal)
- uid: Heir.Binder.VisitObjectLiteralExpression(Heir.AST.ObjectLiteral)
  commentId: M:Heir.Binder.VisitObjectLiteralExpression(Heir.AST.ObjectLiteral)
  id: VisitObjectLiteralExpression(Heir.AST.ObjectLiteral)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitObjectLiteralExpression(ObjectLiteral)
  nameWithType: Binder.VisitObjectLiteralExpression(ObjectLiteral)
  fullName: Heir.Binder.VisitObjectLiteralExpression(Heir.AST.ObjectLiteral)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitObjectLiteralExpression
    path: Heir/Binder.cs
    startLine: 234
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundExpression VisitObjectLiteralExpression(ObjectLiteral objectLiteral)
    parameters:
    - id: objectLiteral
      type: Heir.AST.ObjectLiteral
    return:
      type: Heir.BoundAST.BoundExpression
    content.vb: Public Function VisitObjectLiteralExpression(objectLiteral As ObjectLiteral) As BoundExpression
  overload: Heir.Binder.VisitObjectLiteralExpression*
  implements:
  - Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitObjectLiteralExpression(Heir.AST.ObjectLiteral)
- uid: Heir.Binder.VisitNoOp(Heir.AST.NoOpStatement)
  commentId: M:Heir.Binder.VisitNoOp(Heir.AST.NoOpStatement)
  id: VisitNoOp(Heir.AST.NoOpStatement)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitNoOp(NoOpStatement)
  nameWithType: Binder.VisitNoOp(NoOpStatement)
  fullName: Heir.Binder.VisitNoOp(Heir.AST.NoOpStatement)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitNoOp
    path: Heir/Binder.cs
    startLine: 270
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundStatement VisitNoOp(NoOpStatement noOp)
    parameters:
    - id: noOp
      type: Heir.AST.NoOpStatement
    return:
      type: Heir.BoundAST.BoundStatement
    content.vb: Public Function VisitNoOp(noOp As NoOpStatement) As BoundStatement
  overload: Heir.Binder.VisitNoOp*
  implements:
  - Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitNoOp(Heir.AST.NoOpStatement)
- uid: Heir.Binder.VisitNoOp(Heir.AST.NoOpType)
  commentId: M:Heir.Binder.VisitNoOp(Heir.AST.NoOpType)
  id: VisitNoOp(Heir.AST.NoOpType)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitNoOp(NoOpType)
  nameWithType: Binder.VisitNoOp(NoOpType)
  fullName: Heir.Binder.VisitNoOp(Heir.AST.NoOpType)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitNoOp
    path: Heir/Binder.cs
    startLine: 271
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundExpression VisitNoOp(NoOpType noOp)
    parameters:
    - id: noOp
      type: Heir.AST.NoOpType
    return:
      type: Heir.BoundAST.BoundExpression
    content.vb: Public Function VisitNoOp(noOp As NoOpType) As BoundExpression
  overload: Heir.Binder.VisitNoOp*
  implements:
  - Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitNoOp(Heir.AST.NoOpType)
- uid: Heir.Binder.VisitNoOp(Heir.AST.NoOp)
  commentId: M:Heir.Binder.VisitNoOp(Heir.AST.NoOp)
  id: VisitNoOp(Heir.AST.NoOp)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitNoOp(NoOp)
  nameWithType: Binder.VisitNoOp(NoOp)
  fullName: Heir.Binder.VisitNoOp(Heir.AST.NoOp)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitNoOp
    path: Heir/Binder.cs
    startLine: 272
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundExpression VisitNoOp(NoOp noOp)
    parameters:
    - id: noOp
      type: Heir.AST.NoOp
    return:
      type: Heir.BoundAST.BoundExpression
    content.vb: Public Function VisitNoOp(noOp As NoOp) As BoundExpression
  overload: Heir.Binder.VisitNoOp*
  implements:
  - Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitNoOp(Heir.AST.NoOp)
- uid: Heir.Binder.VisitSingularTypeRef(Heir.AST.SingularType)
  commentId: M:Heir.Binder.VisitSingularTypeRef(Heir.AST.SingularType)
  id: VisitSingularTypeRef(Heir.AST.SingularType)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitSingularTypeRef(SingularType)
  nameWithType: Binder.VisitSingularTypeRef(SingularType)
  fullName: Heir.Binder.VisitSingularTypeRef(Heir.AST.SingularType)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitSingularTypeRef
    path: Heir/Binder.cs
    startLine: 273
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundExpression VisitSingularTypeRef(SingularType singularType)
    parameters:
    - id: singularType
      type: Heir.AST.SingularType
    return:
      type: Heir.BoundAST.BoundExpression
    content.vb: Public Function VisitSingularTypeRef(singularType As SingularType) As BoundExpression
  overload: Heir.Binder.VisitSingularTypeRef*
  implements:
  - Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitSingularTypeRef(Heir.AST.SingularType)
- uid: Heir.Binder.VisitParenthesizedTypeRef(Heir.AST.ParenthesizedType)
  commentId: M:Heir.Binder.VisitParenthesizedTypeRef(Heir.AST.ParenthesizedType)
  id: VisitParenthesizedTypeRef(Heir.AST.ParenthesizedType)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitParenthesizedTypeRef(ParenthesizedType)
  nameWithType: Binder.VisitParenthesizedTypeRef(ParenthesizedType)
  fullName: Heir.Binder.VisitParenthesizedTypeRef(Heir.AST.ParenthesizedType)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitParenthesizedTypeRef
    path: Heir/Binder.cs
    startLine: 274
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundExpression VisitParenthesizedTypeRef(ParenthesizedType singularType)
    parameters:
    - id: singularType
      type: Heir.AST.ParenthesizedType
    return:
      type: Heir.BoundAST.BoundExpression
    content.vb: Public Function VisitParenthesizedTypeRef(singularType As ParenthesizedType) As BoundExpression
  overload: Heir.Binder.VisitParenthesizedTypeRef*
  implements:
  - Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitParenthesizedTypeRef(Heir.AST.ParenthesizedType)
- uid: Heir.Binder.VisitUnionTypeRef(Heir.AST.UnionType)
  commentId: M:Heir.Binder.VisitUnionTypeRef(Heir.AST.UnionType)
  id: VisitUnionTypeRef(Heir.AST.UnionType)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitUnionTypeRef(UnionType)
  nameWithType: Binder.VisitUnionTypeRef(UnionType)
  fullName: Heir.Binder.VisitUnionTypeRef(Heir.AST.UnionType)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitUnionTypeRef
    path: Heir/Binder.cs
    startLine: 275
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundExpression VisitUnionTypeRef(UnionType unionType)
    parameters:
    - id: unionType
      type: Heir.AST.UnionType
    return:
      type: Heir.BoundAST.BoundExpression
    content.vb: Public Function VisitUnionTypeRef(unionType As UnionType) As BoundExpression
  overload: Heir.Binder.VisitUnionTypeRef*
  implements:
  - Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitUnionTypeRef(Heir.AST.UnionType)
- uid: Heir.Binder.VisitIntersectionTypeRef(Heir.AST.IntersectionType)
  commentId: M:Heir.Binder.VisitIntersectionTypeRef(Heir.AST.IntersectionType)
  id: VisitIntersectionTypeRef(Heir.AST.IntersectionType)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitIntersectionTypeRef(IntersectionType)
  nameWithType: Binder.VisitIntersectionTypeRef(IntersectionType)
  fullName: Heir.Binder.VisitIntersectionTypeRef(Heir.AST.IntersectionType)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitIntersectionTypeRef
    path: Heir/Binder.cs
    startLine: 276
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundExpression VisitIntersectionTypeRef(IntersectionType intersectionType)
    parameters:
    - id: intersectionType
      type: Heir.AST.IntersectionType
    return:
      type: Heir.BoundAST.BoundExpression
    content.vb: Public Function VisitIntersectionTypeRef(intersectionType As IntersectionType) As BoundExpression
  overload: Heir.Binder.VisitIntersectionTypeRef*
  implements:
  - Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitIntersectionTypeRef(Heir.AST.IntersectionType)
- uid: Heir.Binder.VisitParenthesizedExpression(Heir.AST.Parenthesized)
  commentId: M:Heir.Binder.VisitParenthesizedExpression(Heir.AST.Parenthesized)
  id: VisitParenthesizedExpression(Heir.AST.Parenthesized)
  parent: Heir.Binder
  langs:
  - csharp
  - vb
  name: VisitParenthesizedExpression(Parenthesized)
  nameWithType: Binder.VisitParenthesizedExpression(Parenthesized)
  fullName: Heir.Binder.VisitParenthesizedExpression(Heir.AST.Parenthesized)
  type: Method
  source:
    remote:
      path: Heir/Binder.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VisitParenthesizedExpression
    path: Heir/Binder.cs
    startLine: 278
  assemblies:
  - Heir
  namespace: Heir
  example: []
  syntax:
    content: public BoundExpression VisitParenthesizedExpression(Parenthesized parenthesized)
    parameters:
    - id: parenthesized
      type: Heir.AST.Parenthesized
    return:
      type: Heir.BoundAST.BoundExpression
    content.vb: Public Function VisitParenthesizedExpression(parenthesized As Parenthesized) As BoundExpression
  overload: Heir.Binder.VisitParenthesizedExpression*
  implements:
  - Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitParenthesizedExpression(Heir.AST.Parenthesized)
references:
- uid: Heir
  commentId: N:Heir
  href: Heir.html
  name: Heir
  nameWithType: Heir
  fullName: Heir
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}
  commentId: T:Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}
  parent: Heir.AST.Abstract
  definition: Heir.AST.Abstract.Statement.Visitor`1
  href: Heir.AST.Abstract.Statement.html
  name: Statement.Visitor<BoundStatement>
  nameWithType: Statement.Visitor<BoundStatement>
  fullName: Heir.AST.Abstract.Statement.Visitor<Heir.BoundAST.BoundStatement>
  nameWithType.vb: Statement.Visitor(Of BoundStatement)
  fullName.vb: Heir.AST.Abstract.Statement.Visitor(Of Heir.BoundAST.BoundStatement)
  name.vb: Statement.Visitor(Of BoundStatement)
  spec.csharp:
  - uid: Heir.AST.Abstract.Statement
    name: Statement
    href: Heir.AST.Abstract.Statement.html
  - name: .
  - uid: Heir.AST.Abstract.Statement.Visitor`1
    name: Visitor
    href: Heir.AST.Abstract.Statement.Visitor-1.html
  - name: <
  - uid: Heir.BoundAST.BoundStatement
    name: BoundStatement
    href: Heir.BoundAST.BoundStatement.html
  - name: '>'
  spec.vb:
  - uid: Heir.AST.Abstract.Statement
    name: Statement
    href: Heir.AST.Abstract.Statement.html
  - name: .
  - uid: Heir.AST.Abstract.Statement.Visitor`1
    name: Visitor
    href: Heir.AST.Abstract.Statement.Visitor-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Heir.BoundAST.BoundStatement
    name: BoundStatement
    href: Heir.BoundAST.BoundStatement.html
  - name: )
- uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}
  commentId: T:Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}
  parent: Heir.AST.Abstract
  definition: Heir.AST.Abstract.Expression.Visitor`1
  href: Heir.AST.Abstract.Expression.html
  name: Expression.Visitor<BoundExpression>
  nameWithType: Expression.Visitor<BoundExpression>
  fullName: Heir.AST.Abstract.Expression.Visitor<Heir.BoundAST.BoundExpression>
  nameWithType.vb: Expression.Visitor(Of BoundExpression)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of Heir.BoundAST.BoundExpression)
  name.vb: Expression.Visitor(Of BoundExpression)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression
    name: Expression
    href: Heir.AST.Abstract.Expression.html
  - name: .
  - uid: Heir.AST.Abstract.Expression.Visitor`1
    name: Visitor
    href: Heir.AST.Abstract.Expression.Visitor-1.html
  - name: <
  - uid: Heir.BoundAST.BoundExpression
    name: BoundExpression
    href: Heir.BoundAST.BoundExpression.html
  - name: '>'
  spec.vb:
  - uid: Heir.AST.Abstract.Expression
    name: Expression
    href: Heir.AST.Abstract.Expression.html
  - name: .
  - uid: Heir.AST.Abstract.Expression.Visitor`1
    name: Visitor
    href: Heir.AST.Abstract.Expression.Visitor-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Heir.BoundAST.BoundExpression
    name: BoundExpression
    href: Heir.BoundAST.BoundExpression.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Heir.AST.Abstract.Statement.Visitor`1
  commentId: T:Heir.AST.Abstract.Statement.Visitor`1
  href: Heir.AST.Abstract.Statement.html
  name: Statement.Visitor<R>
  nameWithType: Statement.Visitor<R>
  fullName: Heir.AST.Abstract.Statement.Visitor<R>
  nameWithType.vb: Statement.Visitor(Of R)
  fullName.vb: Heir.AST.Abstract.Statement.Visitor(Of R)
  name.vb: Statement.Visitor(Of R)
  spec.csharp:
  - uid: Heir.AST.Abstract.Statement
    name: Statement
    href: Heir.AST.Abstract.Statement.html
  - name: .
  - uid: Heir.AST.Abstract.Statement.Visitor`1
    name: Visitor
    href: Heir.AST.Abstract.Statement.Visitor-1.html
  - name: <
  - name: R
  - name: '>'
  spec.vb:
  - uid: Heir.AST.Abstract.Statement
    name: Statement
    href: Heir.AST.Abstract.Statement.html
  - name: .
  - uid: Heir.AST.Abstract.Statement.Visitor`1
    name: Visitor
    href: Heir.AST.Abstract.Statement.Visitor-1.html
  - name: (
  - name: Of
  - name: " "
  - name: R
  - name: )
- uid: Heir.AST.Abstract
  commentId: N:Heir.AST.Abstract
  href: Heir.html
  name: Heir.AST.Abstract
  nameWithType: Heir.AST.Abstract
  fullName: Heir.AST.Abstract
  spec.csharp:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.AST
    name: AST
    href: Heir.AST.html
  - name: .
  - uid: Heir.AST.Abstract
    name: Abstract
    href: Heir.AST.Abstract.html
  spec.vb:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.AST
    name: AST
    href: Heir.AST.html
  - name: .
  - uid: Heir.AST.Abstract
    name: Abstract
    href: Heir.AST.Abstract.html
- uid: Heir.AST.Abstract.Expression.Visitor`1
  commentId: T:Heir.AST.Abstract.Expression.Visitor`1
  href: Heir.AST.Abstract.Expression.html
  name: Expression.Visitor<R>
  nameWithType: Expression.Visitor<R>
  fullName: Heir.AST.Abstract.Expression.Visitor<R>
  nameWithType.vb: Expression.Visitor(Of R)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of R)
  name.vb: Expression.Visitor(Of R)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression
    name: Expression
    href: Heir.AST.Abstract.Expression.html
  - name: .
  - uid: Heir.AST.Abstract.Expression.Visitor`1
    name: Visitor
    href: Heir.AST.Abstract.Expression.Visitor-1.html
  - name: <
  - name: R
  - name: '>'
  spec.vb:
  - uid: Heir.AST.Abstract.Expression
    name: Expression
    href: Heir.AST.Abstract.Expression.html
  - name: .
  - uid: Heir.AST.Abstract.Expression.Visitor`1
    name: Visitor
    href: Heir.AST.Abstract.Expression.Visitor-1.html
  - name: (
  - name: Of
  - name: " "
  - name: R
  - name: )
- uid: Heir.Binder.#ctor*
  commentId: Overload:Heir.Binder.#ctor
  href: Heir.Binder.html#Heir_Binder__ctor_Heir_DiagnosticBag_Heir_AST_SyntaxTree_
  name: Binder
  nameWithType: Binder.Binder
  fullName: Heir.Binder.Binder
  nameWithType.vb: Binder.New
  fullName.vb: Heir.Binder.New
  name.vb: New
- uid: Heir.DiagnosticBag
  commentId: T:Heir.DiagnosticBag
  parent: Heir
  href: Heir.DiagnosticBag.html
  name: DiagnosticBag
  nameWithType: DiagnosticBag
  fullName: Heir.DiagnosticBag
- uid: Heir.AST.SyntaxTree
  commentId: T:Heir.AST.SyntaxTree
  parent: Heir.AST
  href: Heir.AST.SyntaxTree.html
  name: SyntaxTree
  nameWithType: SyntaxTree
  fullName: Heir.AST.SyntaxTree
- uid: Heir.AST
  commentId: N:Heir.AST
  href: Heir.html
  name: Heir.AST
  nameWithType: Heir.AST
  fullName: Heir.AST
  spec.csharp:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.AST
    name: AST
    href: Heir.AST.html
  spec.vb:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.AST
    name: AST
    href: Heir.AST.html
- uid: Heir.Binder.SyntaxTree*
  commentId: Overload:Heir.Binder.SyntaxTree
  href: Heir.Binder.html#Heir_Binder_SyntaxTree
  name: SyntaxTree
  nameWithType: Binder.SyntaxTree
  fullName: Heir.Binder.SyntaxTree
- uid: Heir.Binder.Bind*
  commentId: Overload:Heir.Binder.Bind
  href: Heir.Binder.html#Heir_Binder_Bind
  name: Bind
  nameWithType: Binder.Bind
  fullName: Heir.Binder.Bind
- uid: Heir.BoundAST.BoundSyntaxTree
  commentId: T:Heir.BoundAST.BoundSyntaxTree
  parent: Heir.BoundAST
  href: Heir.BoundAST.BoundSyntaxTree.html
  name: BoundSyntaxTree
  nameWithType: BoundSyntaxTree
  fullName: Heir.BoundAST.BoundSyntaxTree
- uid: Heir.BoundAST
  commentId: N:Heir.BoundAST
  href: Heir.html
  name: Heir.BoundAST
  nameWithType: Heir.BoundAST
  fullName: Heir.BoundAST
  spec.csharp:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.BoundAST
    name: BoundAST
    href: Heir.BoundAST.html
  spec.vb:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.BoundAST
    name: BoundAST
    href: Heir.BoundAST.html
- uid: Heir.Binder.GetBoundSyntaxTree*
  commentId: Overload:Heir.Binder.GetBoundSyntaxTree
  href: Heir.Binder.html#Heir_Binder_GetBoundSyntaxTree
  name: GetBoundSyntaxTree
  nameWithType: Binder.GetBoundSyntaxTree
  fullName: Heir.Binder.GetBoundSyntaxTree
- uid: Heir.Binder.GetBoundNode*
  commentId: Overload:Heir.Binder.GetBoundNode
  href: Heir.Binder.html#Heir_Binder_GetBoundNode_Heir_AST_Abstract_Statement_
  name: GetBoundNode
  nameWithType: Binder.GetBoundNode
  fullName: Heir.Binder.GetBoundNode
- uid: Heir.AST.Abstract.Statement
  commentId: T:Heir.AST.Abstract.Statement
  parent: Heir.AST.Abstract
  href: Heir.AST.Abstract.Statement.html
  name: Statement
  nameWithType: Statement
  fullName: Heir.AST.Abstract.Statement
- uid: Heir.BoundAST.BoundStatement
  commentId: T:Heir.BoundAST.BoundStatement
  parent: Heir.BoundAST
  href: Heir.BoundAST.BoundStatement.html
  name: BoundStatement
  nameWithType: BoundStatement
  fullName: Heir.BoundAST.BoundStatement
- uid: Heir.AST.Abstract.Expression
  commentId: T:Heir.AST.Abstract.Expression
  parent: Heir.AST.Abstract
  href: Heir.AST.Abstract.Expression.html
  name: Expression
  nameWithType: Expression
  fullName: Heir.AST.Abstract.Expression
- uid: Heir.BoundAST.BoundExpression
  commentId: T:Heir.BoundAST.BoundExpression
  parent: Heir.BoundAST
  href: Heir.BoundAST.BoundExpression.html
  name: BoundExpression
  nameWithType: BoundExpression
  fullName: Heir.BoundAST.BoundExpression
- uid: Heir.AST.Abstract.SyntaxNode
  commentId: T:Heir.AST.Abstract.SyntaxNode
  parent: Heir.AST.Abstract
  href: Heir.AST.Abstract.SyntaxNode.html
  name: SyntaxNode
  nameWithType: SyntaxNode
  fullName: Heir.AST.Abstract.SyntaxNode
- uid: Heir.BoundAST.BoundSyntaxNode
  commentId: T:Heir.BoundAST.BoundSyntaxNode
  parent: Heir.BoundAST
  href: Heir.BoundAST.BoundSyntaxNode.html
  name: BoundSyntaxNode
  nameWithType: BoundSyntaxNode
  fullName: Heir.BoundAST.BoundSyntaxNode
- uid: Heir.Binder.DefineSymbol*
  commentId: Overload:Heir.Binder.DefineSymbol
  href: Heir.Binder.html#Heir_Binder_DefineSymbol_Heir_Syntax_Token_Heir_Types_BaseType_System_Boolean_
  name: DefineSymbol
  nameWithType: Binder.DefineSymbol
  fullName: Heir.Binder.DefineSymbol
- uid: Heir.Syntax.Token
  commentId: T:Heir.Syntax.Token
  parent: Heir.Syntax
  href: Heir.Syntax.Token.html
  name: Token
  nameWithType: Token
  fullName: Heir.Syntax.Token
- uid: Heir.Types.BaseType
  commentId: T:Heir.Types.BaseType
  parent: Heir.Types
  href: Heir.Types.BaseType.html
  name: BaseType
  nameWithType: BaseType
  fullName: Heir.Types.BaseType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Heir.Binding.VariableSymbol{Heir.Types.BaseType}
  commentId: T:Heir.Binding.VariableSymbol{Heir.Types.BaseType}
  parent: Heir.Binding
  definition: Heir.Binding.VariableSymbol`1
  href: Heir.Binding.VariableSymbol-1.html
  name: VariableSymbol<BaseType>
  nameWithType: VariableSymbol<BaseType>
  fullName: Heir.Binding.VariableSymbol<Heir.Types.BaseType>
  nameWithType.vb: VariableSymbol(Of BaseType)
  fullName.vb: Heir.Binding.VariableSymbol(Of Heir.Types.BaseType)
  name.vb: VariableSymbol(Of BaseType)
  spec.csharp:
  - uid: Heir.Binding.VariableSymbol`1
    name: VariableSymbol
    href: Heir.Binding.VariableSymbol-1.html
  - name: <
  - uid: Heir.Types.BaseType
    name: BaseType
    href: Heir.Types.BaseType.html
  - name: '>'
  spec.vb:
  - uid: Heir.Binding.VariableSymbol`1
    name: VariableSymbol
    href: Heir.Binding.VariableSymbol-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Heir.Types.BaseType
    name: BaseType
    href: Heir.Types.BaseType.html
  - name: )
- uid: Heir.Syntax
  commentId: N:Heir.Syntax
  href: Heir.html
  name: Heir.Syntax
  nameWithType: Heir.Syntax
  fullName: Heir.Syntax
  spec.csharp:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.Syntax
    name: Syntax
    href: Heir.Syntax.html
  spec.vb:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.Syntax
    name: Syntax
    href: Heir.Syntax.html
- uid: Heir.Types
  commentId: N:Heir.Types
  href: Heir.html
  name: Heir.Types
  nameWithType: Heir.Types
  fullName: Heir.Types
  spec.csharp:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.Types
    name: Types
    href: Heir.Types.html
  spec.vb:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.Types
    name: Types
    href: Heir.Types.html
- uid: Heir.Binding.VariableSymbol`1
  commentId: T:Heir.Binding.VariableSymbol`1
  href: Heir.Binding.VariableSymbol-1.html
  name: VariableSymbol<T>
  nameWithType: VariableSymbol<T>
  fullName: Heir.Binding.VariableSymbol<T>
  nameWithType.vb: VariableSymbol(Of T)
  fullName.vb: Heir.Binding.VariableSymbol(Of T)
  name.vb: VariableSymbol(Of T)
  spec.csharp:
  - uid: Heir.Binding.VariableSymbol`1
    name: VariableSymbol
    href: Heir.Binding.VariableSymbol-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Heir.Binding.VariableSymbol`1
    name: VariableSymbol
    href: Heir.Binding.VariableSymbol-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Heir.Binding
  commentId: N:Heir.Binding
  href: Heir.html
  name: Heir.Binding
  nameWithType: Heir.Binding
  fullName: Heir.Binding
  spec.csharp:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.Binding
    name: Binding
    href: Heir.Binding.html
  spec.vb:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.Binding
    name: Binding
    href: Heir.Binding.html
- uid: '{TType}'
  commentId: '!:TType'
  definition: TType
  name: TType
  nameWithType: TType
  fullName: TType
- uid: Heir.Binding.VariableSymbol{{TType}}
  commentId: T:Heir.Binding.VariableSymbol{``0}
  parent: Heir.Binding
  definition: Heir.Binding.VariableSymbol`1
  href: Heir.Binding.VariableSymbol-1.html
  name: VariableSymbol<TType>
  nameWithType: VariableSymbol<TType>
  fullName: Heir.Binding.VariableSymbol<TType>
  nameWithType.vb: VariableSymbol(Of TType)
  fullName.vb: Heir.Binding.VariableSymbol(Of TType)
  name.vb: VariableSymbol(Of TType)
  spec.csharp:
  - uid: Heir.Binding.VariableSymbol`1
    name: VariableSymbol
    href: Heir.Binding.VariableSymbol-1.html
  - name: <
  - name: TType
  - name: '>'
  spec.vb:
  - uid: Heir.Binding.VariableSymbol`1
    name: VariableSymbol
    href: Heir.Binding.VariableSymbol-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TType
  - name: )
- uid: TType
  commentId: '!:TType'
  name: TType
  nameWithType: TType
  fullName: TType
- uid: Heir.Binder.FindSymbol*
  commentId: Overload:Heir.Binder.FindSymbol
  href: Heir.Binder.html#Heir_Binder_FindSymbol_Heir_Syntax_Token_System_Boolean_
  name: FindSymbol
  nameWithType: Binder.FindSymbol
  fullName: Heir.Binder.FindSymbol
- uid: Heir.Binder.VisitSyntaxTree*
  commentId: Overload:Heir.Binder.VisitSyntaxTree
  href: Heir.Binder.html#Heir_Binder_VisitSyntaxTree_Heir_AST_SyntaxTree_
  name: VisitSyntaxTree
  nameWithType: Binder.VisitSyntaxTree
  fullName: Heir.Binder.VisitSyntaxTree
- uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitSyntaxTree(Heir.AST.SyntaxTree)
  commentId: M:Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitSyntaxTree(Heir.AST.SyntaxTree)
  parent: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}
  definition: Heir.AST.Abstract.Statement.Visitor`1.VisitSyntaxTree(Heir.AST.SyntaxTree)
  href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitSyntaxTree_Heir_AST_SyntaxTree_
  name: VisitSyntaxTree(SyntaxTree)
  nameWithType: Statement.Visitor<BoundStatement>.VisitSyntaxTree(SyntaxTree)
  fullName: Heir.AST.Abstract.Statement.Visitor<Heir.BoundAST.BoundStatement>.VisitSyntaxTree(Heir.AST.SyntaxTree)
  nameWithType.vb: Statement.Visitor(Of BoundStatement).VisitSyntaxTree(SyntaxTree)
  fullName.vb: Heir.AST.Abstract.Statement.Visitor(Of Heir.BoundAST.BoundStatement).VisitSyntaxTree(Heir.AST.SyntaxTree)
  spec.csharp:
  - uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitSyntaxTree(Heir.AST.SyntaxTree)
    name: VisitSyntaxTree
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitSyntaxTree_Heir_AST_SyntaxTree_
  - name: (
  - uid: Heir.AST.SyntaxTree
    name: SyntaxTree
    href: Heir.AST.SyntaxTree.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitSyntaxTree(Heir.AST.SyntaxTree)
    name: VisitSyntaxTree
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitSyntaxTree_Heir_AST_SyntaxTree_
  - name: (
  - uid: Heir.AST.SyntaxTree
    name: SyntaxTree
    href: Heir.AST.SyntaxTree.html
  - name: )
- uid: Heir.AST.Abstract.Statement.Visitor`1.VisitSyntaxTree(Heir.AST.SyntaxTree)
  commentId: M:Heir.AST.Abstract.Statement.Visitor`1.VisitSyntaxTree(Heir.AST.SyntaxTree)
  href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitSyntaxTree_Heir_AST_SyntaxTree_
  name: VisitSyntaxTree(SyntaxTree)
  nameWithType: Statement.Visitor<R>.VisitSyntaxTree(SyntaxTree)
  fullName: Heir.AST.Abstract.Statement.Visitor<R>.VisitSyntaxTree(Heir.AST.SyntaxTree)
  nameWithType.vb: Statement.Visitor(Of R).VisitSyntaxTree(SyntaxTree)
  fullName.vb: Heir.AST.Abstract.Statement.Visitor(Of R).VisitSyntaxTree(Heir.AST.SyntaxTree)
  spec.csharp:
  - uid: Heir.AST.Abstract.Statement.Visitor`1.VisitSyntaxTree(Heir.AST.SyntaxTree)
    name: VisitSyntaxTree
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitSyntaxTree_Heir_AST_SyntaxTree_
  - name: (
  - uid: Heir.AST.SyntaxTree
    name: SyntaxTree
    href: Heir.AST.SyntaxTree.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Statement.Visitor`1.VisitSyntaxTree(Heir.AST.SyntaxTree)
    name: VisitSyntaxTree
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitSyntaxTree_Heir_AST_SyntaxTree_
  - name: (
  - uid: Heir.AST.SyntaxTree
    name: SyntaxTree
    href: Heir.AST.SyntaxTree.html
  - name: )
- uid: Heir.Binder.VisitBlock*
  commentId: Overload:Heir.Binder.VisitBlock
  href: Heir.Binder.html#Heir_Binder_VisitBlock_Heir_AST_Block_
  name: VisitBlock
  nameWithType: Binder.VisitBlock
  fullName: Heir.Binder.VisitBlock
- uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitBlock(Heir.AST.Block)
  commentId: M:Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitBlock(Heir.AST.Block)
  parent: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}
  definition: Heir.AST.Abstract.Statement.Visitor`1.VisitBlock(Heir.AST.Block)
  href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitBlock_Heir_AST_Block_
  name: VisitBlock(Block)
  nameWithType: Statement.Visitor<BoundStatement>.VisitBlock(Block)
  fullName: Heir.AST.Abstract.Statement.Visitor<Heir.BoundAST.BoundStatement>.VisitBlock(Heir.AST.Block)
  nameWithType.vb: Statement.Visitor(Of BoundStatement).VisitBlock(Block)
  fullName.vb: Heir.AST.Abstract.Statement.Visitor(Of Heir.BoundAST.BoundStatement).VisitBlock(Heir.AST.Block)
  spec.csharp:
  - uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitBlock(Heir.AST.Block)
    name: VisitBlock
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitBlock_Heir_AST_Block_
  - name: (
  - uid: Heir.AST.Block
    name: Block
    href: Heir.AST.Block.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitBlock(Heir.AST.Block)
    name: VisitBlock
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitBlock_Heir_AST_Block_
  - name: (
  - uid: Heir.AST.Block
    name: Block
    href: Heir.AST.Block.html
  - name: )
- uid: Heir.AST.Block
  commentId: T:Heir.AST.Block
  parent: Heir.AST
  href: Heir.AST.Block.html
  name: Block
  nameWithType: Block
  fullName: Heir.AST.Block
- uid: Heir.AST.Abstract.Statement.Visitor`1.VisitBlock(Heir.AST.Block)
  commentId: M:Heir.AST.Abstract.Statement.Visitor`1.VisitBlock(Heir.AST.Block)
  href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitBlock_Heir_AST_Block_
  name: VisitBlock(Block)
  nameWithType: Statement.Visitor<R>.VisitBlock(Block)
  fullName: Heir.AST.Abstract.Statement.Visitor<R>.VisitBlock(Heir.AST.Block)
  nameWithType.vb: Statement.Visitor(Of R).VisitBlock(Block)
  fullName.vb: Heir.AST.Abstract.Statement.Visitor(Of R).VisitBlock(Heir.AST.Block)
  spec.csharp:
  - uid: Heir.AST.Abstract.Statement.Visitor`1.VisitBlock(Heir.AST.Block)
    name: VisitBlock
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitBlock_Heir_AST_Block_
  - name: (
  - uid: Heir.AST.Block
    name: Block
    href: Heir.AST.Block.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Statement.Visitor`1.VisitBlock(Heir.AST.Block)
    name: VisitBlock
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitBlock_Heir_AST_Block_
  - name: (
  - uid: Heir.AST.Block
    name: Block
    href: Heir.AST.Block.html
  - name: )
- uid: Heir.Binder.VisitVariableDeclaration*
  commentId: Overload:Heir.Binder.VisitVariableDeclaration
  href: Heir.Binder.html#Heir_Binder_VisitVariableDeclaration_Heir_AST_VariableDeclaration_
  name: VisitVariableDeclaration
  nameWithType: Binder.VisitVariableDeclaration
  fullName: Heir.Binder.VisitVariableDeclaration
- uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitVariableDeclaration(Heir.AST.VariableDeclaration)
  commentId: M:Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitVariableDeclaration(Heir.AST.VariableDeclaration)
  parent: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}
  definition: Heir.AST.Abstract.Statement.Visitor`1.VisitVariableDeclaration(Heir.AST.VariableDeclaration)
  href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitVariableDeclaration_Heir_AST_VariableDeclaration_
  name: VisitVariableDeclaration(VariableDeclaration)
  nameWithType: Statement.Visitor<BoundStatement>.VisitVariableDeclaration(VariableDeclaration)
  fullName: Heir.AST.Abstract.Statement.Visitor<Heir.BoundAST.BoundStatement>.VisitVariableDeclaration(Heir.AST.VariableDeclaration)
  nameWithType.vb: Statement.Visitor(Of BoundStatement).VisitVariableDeclaration(VariableDeclaration)
  fullName.vb: Heir.AST.Abstract.Statement.Visitor(Of Heir.BoundAST.BoundStatement).VisitVariableDeclaration(Heir.AST.VariableDeclaration)
  spec.csharp:
  - uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitVariableDeclaration(Heir.AST.VariableDeclaration)
    name: VisitVariableDeclaration
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitVariableDeclaration_Heir_AST_VariableDeclaration_
  - name: (
  - uid: Heir.AST.VariableDeclaration
    name: VariableDeclaration
    href: Heir.AST.VariableDeclaration.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitVariableDeclaration(Heir.AST.VariableDeclaration)
    name: VisitVariableDeclaration
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitVariableDeclaration_Heir_AST_VariableDeclaration_
  - name: (
  - uid: Heir.AST.VariableDeclaration
    name: VariableDeclaration
    href: Heir.AST.VariableDeclaration.html
  - name: )
- uid: Heir.AST.VariableDeclaration
  commentId: T:Heir.AST.VariableDeclaration
  parent: Heir.AST
  href: Heir.AST.VariableDeclaration.html
  name: VariableDeclaration
  nameWithType: VariableDeclaration
  fullName: Heir.AST.VariableDeclaration
- uid: Heir.AST.Abstract.Statement.Visitor`1.VisitVariableDeclaration(Heir.AST.VariableDeclaration)
  commentId: M:Heir.AST.Abstract.Statement.Visitor`1.VisitVariableDeclaration(Heir.AST.VariableDeclaration)
  href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitVariableDeclaration_Heir_AST_VariableDeclaration_
  name: VisitVariableDeclaration(VariableDeclaration)
  nameWithType: Statement.Visitor<R>.VisitVariableDeclaration(VariableDeclaration)
  fullName: Heir.AST.Abstract.Statement.Visitor<R>.VisitVariableDeclaration(Heir.AST.VariableDeclaration)
  nameWithType.vb: Statement.Visitor(Of R).VisitVariableDeclaration(VariableDeclaration)
  fullName.vb: Heir.AST.Abstract.Statement.Visitor(Of R).VisitVariableDeclaration(Heir.AST.VariableDeclaration)
  spec.csharp:
  - uid: Heir.AST.Abstract.Statement.Visitor`1.VisitVariableDeclaration(Heir.AST.VariableDeclaration)
    name: VisitVariableDeclaration
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitVariableDeclaration_Heir_AST_VariableDeclaration_
  - name: (
  - uid: Heir.AST.VariableDeclaration
    name: VariableDeclaration
    href: Heir.AST.VariableDeclaration.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Statement.Visitor`1.VisitVariableDeclaration(Heir.AST.VariableDeclaration)
    name: VisitVariableDeclaration
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitVariableDeclaration_Heir_AST_VariableDeclaration_
  - name: (
  - uid: Heir.AST.VariableDeclaration
    name: VariableDeclaration
    href: Heir.AST.VariableDeclaration.html
  - name: )
- uid: Heir.Binder.VisitFunctionDeclaration*
  commentId: Overload:Heir.Binder.VisitFunctionDeclaration
  href: Heir.Binder.html#Heir_Binder_VisitFunctionDeclaration_Heir_AST_FunctionDeclaration_
  name: VisitFunctionDeclaration
  nameWithType: Binder.VisitFunctionDeclaration
  fullName: Heir.Binder.VisitFunctionDeclaration
- uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitFunctionDeclaration(Heir.AST.FunctionDeclaration)
  commentId: M:Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitFunctionDeclaration(Heir.AST.FunctionDeclaration)
  parent: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}
  definition: Heir.AST.Abstract.Statement.Visitor`1.VisitFunctionDeclaration(Heir.AST.FunctionDeclaration)
  href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitFunctionDeclaration_Heir_AST_FunctionDeclaration_
  name: VisitFunctionDeclaration(FunctionDeclaration)
  nameWithType: Statement.Visitor<BoundStatement>.VisitFunctionDeclaration(FunctionDeclaration)
  fullName: Heir.AST.Abstract.Statement.Visitor<Heir.BoundAST.BoundStatement>.VisitFunctionDeclaration(Heir.AST.FunctionDeclaration)
  nameWithType.vb: Statement.Visitor(Of BoundStatement).VisitFunctionDeclaration(FunctionDeclaration)
  fullName.vb: Heir.AST.Abstract.Statement.Visitor(Of Heir.BoundAST.BoundStatement).VisitFunctionDeclaration(Heir.AST.FunctionDeclaration)
  spec.csharp:
  - uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitFunctionDeclaration(Heir.AST.FunctionDeclaration)
    name: VisitFunctionDeclaration
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitFunctionDeclaration_Heir_AST_FunctionDeclaration_
  - name: (
  - uid: Heir.AST.FunctionDeclaration
    name: FunctionDeclaration
    href: Heir.AST.FunctionDeclaration.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitFunctionDeclaration(Heir.AST.FunctionDeclaration)
    name: VisitFunctionDeclaration
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitFunctionDeclaration_Heir_AST_FunctionDeclaration_
  - name: (
  - uid: Heir.AST.FunctionDeclaration
    name: FunctionDeclaration
    href: Heir.AST.FunctionDeclaration.html
  - name: )
- uid: Heir.AST.FunctionDeclaration
  commentId: T:Heir.AST.FunctionDeclaration
  parent: Heir.AST
  href: Heir.AST.FunctionDeclaration.html
  name: FunctionDeclaration
  nameWithType: FunctionDeclaration
  fullName: Heir.AST.FunctionDeclaration
- uid: Heir.AST.Abstract.Statement.Visitor`1.VisitFunctionDeclaration(Heir.AST.FunctionDeclaration)
  commentId: M:Heir.AST.Abstract.Statement.Visitor`1.VisitFunctionDeclaration(Heir.AST.FunctionDeclaration)
  href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitFunctionDeclaration_Heir_AST_FunctionDeclaration_
  name: VisitFunctionDeclaration(FunctionDeclaration)
  nameWithType: Statement.Visitor<R>.VisitFunctionDeclaration(FunctionDeclaration)
  fullName: Heir.AST.Abstract.Statement.Visitor<R>.VisitFunctionDeclaration(Heir.AST.FunctionDeclaration)
  nameWithType.vb: Statement.Visitor(Of R).VisitFunctionDeclaration(FunctionDeclaration)
  fullName.vb: Heir.AST.Abstract.Statement.Visitor(Of R).VisitFunctionDeclaration(Heir.AST.FunctionDeclaration)
  spec.csharp:
  - uid: Heir.AST.Abstract.Statement.Visitor`1.VisitFunctionDeclaration(Heir.AST.FunctionDeclaration)
    name: VisitFunctionDeclaration
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitFunctionDeclaration_Heir_AST_FunctionDeclaration_
  - name: (
  - uid: Heir.AST.FunctionDeclaration
    name: FunctionDeclaration
    href: Heir.AST.FunctionDeclaration.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Statement.Visitor`1.VisitFunctionDeclaration(Heir.AST.FunctionDeclaration)
    name: VisitFunctionDeclaration
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitFunctionDeclaration_Heir_AST_FunctionDeclaration_
  - name: (
  - uid: Heir.AST.FunctionDeclaration
    name: FunctionDeclaration
    href: Heir.AST.FunctionDeclaration.html
  - name: )
- uid: Heir.Binder.VisitReturnStatement*
  commentId: Overload:Heir.Binder.VisitReturnStatement
  href: Heir.Binder.html#Heir_Binder_VisitReturnStatement_Heir_AST_Return_
  name: VisitReturnStatement
  nameWithType: Binder.VisitReturnStatement
  fullName: Heir.Binder.VisitReturnStatement
- uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitReturnStatement(Heir.AST.Return)
  commentId: M:Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitReturnStatement(Heir.AST.Return)
  parent: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}
  definition: Heir.AST.Abstract.Statement.Visitor`1.VisitReturnStatement(Heir.AST.Return)
  href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitReturnStatement_Heir_AST_Return_
  name: VisitReturnStatement(Return)
  nameWithType: Statement.Visitor<BoundStatement>.VisitReturnStatement(Return)
  fullName: Heir.AST.Abstract.Statement.Visitor<Heir.BoundAST.BoundStatement>.VisitReturnStatement(Heir.AST.Return)
  nameWithType.vb: Statement.Visitor(Of BoundStatement).VisitReturnStatement(Return)
  fullName.vb: Heir.AST.Abstract.Statement.Visitor(Of Heir.BoundAST.BoundStatement).VisitReturnStatement(Heir.AST.Return)
  spec.csharp:
  - uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitReturnStatement(Heir.AST.Return)
    name: VisitReturnStatement
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitReturnStatement_Heir_AST_Return_
  - name: (
  - uid: Heir.AST.Return
    name: Return
    href: Heir.AST.Return.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitReturnStatement(Heir.AST.Return)
    name: VisitReturnStatement
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitReturnStatement_Heir_AST_Return_
  - name: (
  - uid: Heir.AST.Return
    name: Return
    href: Heir.AST.Return.html
  - name: )
- uid: Heir.AST.Return
  commentId: T:Heir.AST.Return
  parent: Heir.AST
  href: Heir.AST.Return.html
  name: Return
  nameWithType: Return
  fullName: Heir.AST.Return
- uid: Heir.AST.Abstract.Statement.Visitor`1.VisitReturnStatement(Heir.AST.Return)
  commentId: M:Heir.AST.Abstract.Statement.Visitor`1.VisitReturnStatement(Heir.AST.Return)
  href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitReturnStatement_Heir_AST_Return_
  name: VisitReturnStatement(Return)
  nameWithType: Statement.Visitor<R>.VisitReturnStatement(Return)
  fullName: Heir.AST.Abstract.Statement.Visitor<R>.VisitReturnStatement(Heir.AST.Return)
  nameWithType.vb: Statement.Visitor(Of R).VisitReturnStatement(Return)
  fullName.vb: Heir.AST.Abstract.Statement.Visitor(Of R).VisitReturnStatement(Heir.AST.Return)
  spec.csharp:
  - uid: Heir.AST.Abstract.Statement.Visitor`1.VisitReturnStatement(Heir.AST.Return)
    name: VisitReturnStatement
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitReturnStatement_Heir_AST_Return_
  - name: (
  - uid: Heir.AST.Return
    name: Return
    href: Heir.AST.Return.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Statement.Visitor`1.VisitReturnStatement(Heir.AST.Return)
    name: VisitReturnStatement
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitReturnStatement_Heir_AST_Return_
  - name: (
  - uid: Heir.AST.Return
    name: Return
    href: Heir.AST.Return.html
  - name: )
- uid: Heir.Binder.VisitIfStatement*
  commentId: Overload:Heir.Binder.VisitIfStatement
  href: Heir.Binder.html#Heir_Binder_VisitIfStatement_Heir_AST_If_
  name: VisitIfStatement
  nameWithType: Binder.VisitIfStatement
  fullName: Heir.Binder.VisitIfStatement
- uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitIfStatement(Heir.AST.If)
  commentId: M:Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitIfStatement(Heir.AST.If)
  parent: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}
  definition: Heir.AST.Abstract.Statement.Visitor`1.VisitIfStatement(Heir.AST.If)
  href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitIfStatement_Heir_AST_If_
  name: VisitIfStatement(If)
  nameWithType: Statement.Visitor<BoundStatement>.VisitIfStatement(If)
  fullName: Heir.AST.Abstract.Statement.Visitor<Heir.BoundAST.BoundStatement>.VisitIfStatement(Heir.AST.If)
  nameWithType.vb: Statement.Visitor(Of BoundStatement).VisitIfStatement(If)
  fullName.vb: Heir.AST.Abstract.Statement.Visitor(Of Heir.BoundAST.BoundStatement).VisitIfStatement(Heir.AST.If)
  spec.csharp:
  - uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitIfStatement(Heir.AST.If)
    name: VisitIfStatement
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitIfStatement_Heir_AST_If_
  - name: (
  - uid: Heir.AST.If
    name: If
    href: Heir.AST.If.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitIfStatement(Heir.AST.If)
    name: VisitIfStatement
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitIfStatement_Heir_AST_If_
  - name: (
  - uid: Heir.AST.If
    name: If
    href: Heir.AST.If.html
  - name: )
- uid: Heir.AST.If
  commentId: T:Heir.AST.If
  parent: Heir.AST
  href: Heir.AST.If.html
  name: If
  nameWithType: If
  fullName: Heir.AST.If
- uid: Heir.AST.Abstract.Statement.Visitor`1.VisitIfStatement(Heir.AST.If)
  commentId: M:Heir.AST.Abstract.Statement.Visitor`1.VisitIfStatement(Heir.AST.If)
  href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitIfStatement_Heir_AST_If_
  name: VisitIfStatement(If)
  nameWithType: Statement.Visitor<R>.VisitIfStatement(If)
  fullName: Heir.AST.Abstract.Statement.Visitor<R>.VisitIfStatement(Heir.AST.If)
  nameWithType.vb: Statement.Visitor(Of R).VisitIfStatement(If)
  fullName.vb: Heir.AST.Abstract.Statement.Visitor(Of R).VisitIfStatement(Heir.AST.If)
  spec.csharp:
  - uid: Heir.AST.Abstract.Statement.Visitor`1.VisitIfStatement(Heir.AST.If)
    name: VisitIfStatement
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitIfStatement_Heir_AST_If_
  - name: (
  - uid: Heir.AST.If
    name: If
    href: Heir.AST.If.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Statement.Visitor`1.VisitIfStatement(Heir.AST.If)
    name: VisitIfStatement
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitIfStatement_Heir_AST_If_
  - name: (
  - uid: Heir.AST.If
    name: If
    href: Heir.AST.If.html
  - name: )
- uid: Heir.Binder.VisitExpressionStatement*
  commentId: Overload:Heir.Binder.VisitExpressionStatement
  href: Heir.Binder.html#Heir_Binder_VisitExpressionStatement_Heir_AST_ExpressionStatement_
  name: VisitExpressionStatement
  nameWithType: Binder.VisitExpressionStatement
  fullName: Heir.Binder.VisitExpressionStatement
- uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitExpressionStatement(Heir.AST.ExpressionStatement)
  commentId: M:Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitExpressionStatement(Heir.AST.ExpressionStatement)
  parent: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}
  definition: Heir.AST.Abstract.Statement.Visitor`1.VisitExpressionStatement(Heir.AST.ExpressionStatement)
  href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitExpressionStatement_Heir_AST_ExpressionStatement_
  name: VisitExpressionStatement(ExpressionStatement)
  nameWithType: Statement.Visitor<BoundStatement>.VisitExpressionStatement(ExpressionStatement)
  fullName: Heir.AST.Abstract.Statement.Visitor<Heir.BoundAST.BoundStatement>.VisitExpressionStatement(Heir.AST.ExpressionStatement)
  nameWithType.vb: Statement.Visitor(Of BoundStatement).VisitExpressionStatement(ExpressionStatement)
  fullName.vb: Heir.AST.Abstract.Statement.Visitor(Of Heir.BoundAST.BoundStatement).VisitExpressionStatement(Heir.AST.ExpressionStatement)
  spec.csharp:
  - uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitExpressionStatement(Heir.AST.ExpressionStatement)
    name: VisitExpressionStatement
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitExpressionStatement_Heir_AST_ExpressionStatement_
  - name: (
  - uid: Heir.AST.ExpressionStatement
    name: ExpressionStatement
    href: Heir.AST.ExpressionStatement.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitExpressionStatement(Heir.AST.ExpressionStatement)
    name: VisitExpressionStatement
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitExpressionStatement_Heir_AST_ExpressionStatement_
  - name: (
  - uid: Heir.AST.ExpressionStatement
    name: ExpressionStatement
    href: Heir.AST.ExpressionStatement.html
  - name: )
- uid: Heir.AST.ExpressionStatement
  commentId: T:Heir.AST.ExpressionStatement
  parent: Heir.AST
  href: Heir.AST.ExpressionStatement.html
  name: ExpressionStatement
  nameWithType: ExpressionStatement
  fullName: Heir.AST.ExpressionStatement
- uid: Heir.AST.Abstract.Statement.Visitor`1.VisitExpressionStatement(Heir.AST.ExpressionStatement)
  commentId: M:Heir.AST.Abstract.Statement.Visitor`1.VisitExpressionStatement(Heir.AST.ExpressionStatement)
  href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitExpressionStatement_Heir_AST_ExpressionStatement_
  name: VisitExpressionStatement(ExpressionStatement)
  nameWithType: Statement.Visitor<R>.VisitExpressionStatement(ExpressionStatement)
  fullName: Heir.AST.Abstract.Statement.Visitor<R>.VisitExpressionStatement(Heir.AST.ExpressionStatement)
  nameWithType.vb: Statement.Visitor(Of R).VisitExpressionStatement(ExpressionStatement)
  fullName.vb: Heir.AST.Abstract.Statement.Visitor(Of R).VisitExpressionStatement(Heir.AST.ExpressionStatement)
  spec.csharp:
  - uid: Heir.AST.Abstract.Statement.Visitor`1.VisitExpressionStatement(Heir.AST.ExpressionStatement)
    name: VisitExpressionStatement
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitExpressionStatement_Heir_AST_ExpressionStatement_
  - name: (
  - uid: Heir.AST.ExpressionStatement
    name: ExpressionStatement
    href: Heir.AST.ExpressionStatement.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Statement.Visitor`1.VisitExpressionStatement(Heir.AST.ExpressionStatement)
    name: VisitExpressionStatement
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitExpressionStatement_Heir_AST_ExpressionStatement_
  - name: (
  - uid: Heir.AST.ExpressionStatement
    name: ExpressionStatement
    href: Heir.AST.ExpressionStatement.html
  - name: )
- uid: Heir.Binder.VisitParameter*
  commentId: Overload:Heir.Binder.VisitParameter
  href: Heir.Binder.html#Heir_Binder_VisitParameter_Heir_AST_Parameter_
  name: VisitParameter
  nameWithType: Binder.VisitParameter
  fullName: Heir.Binder.VisitParameter
- uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitParameter(Heir.AST.Parameter)
  commentId: M:Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitParameter(Heir.AST.Parameter)
  parent: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}
  definition: Heir.AST.Abstract.Expression.Visitor`1.VisitParameter(Heir.AST.Parameter)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitParameter_Heir_AST_Parameter_
  name: VisitParameter(Parameter)
  nameWithType: Expression.Visitor<BoundExpression>.VisitParameter(Parameter)
  fullName: Heir.AST.Abstract.Expression.Visitor<Heir.BoundAST.BoundExpression>.VisitParameter(Heir.AST.Parameter)
  nameWithType.vb: Expression.Visitor(Of BoundExpression).VisitParameter(Parameter)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of Heir.BoundAST.BoundExpression).VisitParameter(Heir.AST.Parameter)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitParameter(Heir.AST.Parameter)
    name: VisitParameter
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitParameter_Heir_AST_Parameter_
  - name: (
  - uid: Heir.AST.Parameter
    name: Parameter
    href: Heir.AST.Parameter.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitParameter(Heir.AST.Parameter)
    name: VisitParameter
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitParameter_Heir_AST_Parameter_
  - name: (
  - uid: Heir.AST.Parameter
    name: Parameter
    href: Heir.AST.Parameter.html
  - name: )
- uid: Heir.AST.Parameter
  commentId: T:Heir.AST.Parameter
  parent: Heir.AST
  href: Heir.AST.Parameter.html
  name: Parameter
  nameWithType: Parameter
  fullName: Heir.AST.Parameter
- uid: Heir.AST.Abstract.Expression.Visitor`1.VisitParameter(Heir.AST.Parameter)
  commentId: M:Heir.AST.Abstract.Expression.Visitor`1.VisitParameter(Heir.AST.Parameter)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitParameter_Heir_AST_Parameter_
  name: VisitParameter(Parameter)
  nameWithType: Expression.Visitor<R>.VisitParameter(Parameter)
  fullName: Heir.AST.Abstract.Expression.Visitor<R>.VisitParameter(Heir.AST.Parameter)
  nameWithType.vb: Expression.Visitor(Of R).VisitParameter(Parameter)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of R).VisitParameter(Heir.AST.Parameter)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitParameter(Heir.AST.Parameter)
    name: VisitParameter
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitParameter_Heir_AST_Parameter_
  - name: (
  - uid: Heir.AST.Parameter
    name: Parameter
    href: Heir.AST.Parameter.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitParameter(Heir.AST.Parameter)
    name: VisitParameter
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitParameter_Heir_AST_Parameter_
  - name: (
  - uid: Heir.AST.Parameter
    name: Parameter
    href: Heir.AST.Parameter.html
  - name: )
- uid: Heir.Binder.VisitMemberAccessExpression*
  commentId: Overload:Heir.Binder.VisitMemberAccessExpression
  href: Heir.Binder.html#Heir_Binder_VisitMemberAccessExpression_Heir_AST_MemberAccess_
  name: VisitMemberAccessExpression
  nameWithType: Binder.VisitMemberAccessExpression
  fullName: Heir.Binder.VisitMemberAccessExpression
- uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitMemberAccessExpression(Heir.AST.MemberAccess)
  commentId: M:Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitMemberAccessExpression(Heir.AST.MemberAccess)
  parent: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}
  definition: Heir.AST.Abstract.Expression.Visitor`1.VisitMemberAccessExpression(Heir.AST.MemberAccess)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitMemberAccessExpression_Heir_AST_MemberAccess_
  name: VisitMemberAccessExpression(MemberAccess)
  nameWithType: Expression.Visitor<BoundExpression>.VisitMemberAccessExpression(MemberAccess)
  fullName: Heir.AST.Abstract.Expression.Visitor<Heir.BoundAST.BoundExpression>.VisitMemberAccessExpression(Heir.AST.MemberAccess)
  nameWithType.vb: Expression.Visitor(Of BoundExpression).VisitMemberAccessExpression(MemberAccess)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of Heir.BoundAST.BoundExpression).VisitMemberAccessExpression(Heir.AST.MemberAccess)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitMemberAccessExpression(Heir.AST.MemberAccess)
    name: VisitMemberAccessExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitMemberAccessExpression_Heir_AST_MemberAccess_
  - name: (
  - uid: Heir.AST.MemberAccess
    name: MemberAccess
    href: Heir.AST.MemberAccess.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitMemberAccessExpression(Heir.AST.MemberAccess)
    name: VisitMemberAccessExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitMemberAccessExpression_Heir_AST_MemberAccess_
  - name: (
  - uid: Heir.AST.MemberAccess
    name: MemberAccess
    href: Heir.AST.MemberAccess.html
  - name: )
- uid: Heir.AST.MemberAccess
  commentId: T:Heir.AST.MemberAccess
  parent: Heir.AST
  href: Heir.AST.MemberAccess.html
  name: MemberAccess
  nameWithType: MemberAccess
  fullName: Heir.AST.MemberAccess
- uid: Heir.AST.Abstract.Expression.Visitor`1.VisitMemberAccessExpression(Heir.AST.MemberAccess)
  commentId: M:Heir.AST.Abstract.Expression.Visitor`1.VisitMemberAccessExpression(Heir.AST.MemberAccess)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitMemberAccessExpression_Heir_AST_MemberAccess_
  name: VisitMemberAccessExpression(MemberAccess)
  nameWithType: Expression.Visitor<R>.VisitMemberAccessExpression(MemberAccess)
  fullName: Heir.AST.Abstract.Expression.Visitor<R>.VisitMemberAccessExpression(Heir.AST.MemberAccess)
  nameWithType.vb: Expression.Visitor(Of R).VisitMemberAccessExpression(MemberAccess)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of R).VisitMemberAccessExpression(Heir.AST.MemberAccess)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitMemberAccessExpression(Heir.AST.MemberAccess)
    name: VisitMemberAccessExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitMemberAccessExpression_Heir_AST_MemberAccess_
  - name: (
  - uid: Heir.AST.MemberAccess
    name: MemberAccess
    href: Heir.AST.MemberAccess.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitMemberAccessExpression(Heir.AST.MemberAccess)
    name: VisitMemberAccessExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitMemberAccessExpression_Heir_AST_MemberAccess_
  - name: (
  - uid: Heir.AST.MemberAccess
    name: MemberAccess
    href: Heir.AST.MemberAccess.html
  - name: )
- uid: Heir.Binder.VisitElementAccessExpression*
  commentId: Overload:Heir.Binder.VisitElementAccessExpression
  href: Heir.Binder.html#Heir_Binder_VisitElementAccessExpression_Heir_AST_ElementAccess_
  name: VisitElementAccessExpression
  nameWithType: Binder.VisitElementAccessExpression
  fullName: Heir.Binder.VisitElementAccessExpression
- uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitElementAccessExpression(Heir.AST.ElementAccess)
  commentId: M:Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitElementAccessExpression(Heir.AST.ElementAccess)
  parent: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}
  definition: Heir.AST.Abstract.Expression.Visitor`1.VisitElementAccessExpression(Heir.AST.ElementAccess)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitElementAccessExpression_Heir_AST_ElementAccess_
  name: VisitElementAccessExpression(ElementAccess)
  nameWithType: Expression.Visitor<BoundExpression>.VisitElementAccessExpression(ElementAccess)
  fullName: Heir.AST.Abstract.Expression.Visitor<Heir.BoundAST.BoundExpression>.VisitElementAccessExpression(Heir.AST.ElementAccess)
  nameWithType.vb: Expression.Visitor(Of BoundExpression).VisitElementAccessExpression(ElementAccess)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of Heir.BoundAST.BoundExpression).VisitElementAccessExpression(Heir.AST.ElementAccess)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitElementAccessExpression(Heir.AST.ElementAccess)
    name: VisitElementAccessExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitElementAccessExpression_Heir_AST_ElementAccess_
  - name: (
  - uid: Heir.AST.ElementAccess
    name: ElementAccess
    href: Heir.AST.ElementAccess.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitElementAccessExpression(Heir.AST.ElementAccess)
    name: VisitElementAccessExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitElementAccessExpression_Heir_AST_ElementAccess_
  - name: (
  - uid: Heir.AST.ElementAccess
    name: ElementAccess
    href: Heir.AST.ElementAccess.html
  - name: )
- uid: Heir.AST.ElementAccess
  commentId: T:Heir.AST.ElementAccess
  parent: Heir.AST
  href: Heir.AST.ElementAccess.html
  name: ElementAccess
  nameWithType: ElementAccess
  fullName: Heir.AST.ElementAccess
- uid: Heir.AST.Abstract.Expression.Visitor`1.VisitElementAccessExpression(Heir.AST.ElementAccess)
  commentId: M:Heir.AST.Abstract.Expression.Visitor`1.VisitElementAccessExpression(Heir.AST.ElementAccess)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitElementAccessExpression_Heir_AST_ElementAccess_
  name: VisitElementAccessExpression(ElementAccess)
  nameWithType: Expression.Visitor<R>.VisitElementAccessExpression(ElementAccess)
  fullName: Heir.AST.Abstract.Expression.Visitor<R>.VisitElementAccessExpression(Heir.AST.ElementAccess)
  nameWithType.vb: Expression.Visitor(Of R).VisitElementAccessExpression(ElementAccess)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of R).VisitElementAccessExpression(Heir.AST.ElementAccess)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitElementAccessExpression(Heir.AST.ElementAccess)
    name: VisitElementAccessExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitElementAccessExpression_Heir_AST_ElementAccess_
  - name: (
  - uid: Heir.AST.ElementAccess
    name: ElementAccess
    href: Heir.AST.ElementAccess.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitElementAccessExpression(Heir.AST.ElementAccess)
    name: VisitElementAccessExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitElementAccessExpression_Heir_AST_ElementAccess_
  - name: (
  - uid: Heir.AST.ElementAccess
    name: ElementAccess
    href: Heir.AST.ElementAccess.html
  - name: )
- uid: Heir.Binder.VisitInvocationExpression*
  commentId: Overload:Heir.Binder.VisitInvocationExpression
  href: Heir.Binder.html#Heir_Binder_VisitInvocationExpression_Heir_AST_Invocation_
  name: VisitInvocationExpression
  nameWithType: Binder.VisitInvocationExpression
  fullName: Heir.Binder.VisitInvocationExpression
- uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitInvocationExpression(Heir.AST.Invocation)
  commentId: M:Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitInvocationExpression(Heir.AST.Invocation)
  parent: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}
  definition: Heir.AST.Abstract.Expression.Visitor`1.VisitInvocationExpression(Heir.AST.Invocation)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitInvocationExpression_Heir_AST_Invocation_
  name: VisitInvocationExpression(Invocation)
  nameWithType: Expression.Visitor<BoundExpression>.VisitInvocationExpression(Invocation)
  fullName: Heir.AST.Abstract.Expression.Visitor<Heir.BoundAST.BoundExpression>.VisitInvocationExpression(Heir.AST.Invocation)
  nameWithType.vb: Expression.Visitor(Of BoundExpression).VisitInvocationExpression(Invocation)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of Heir.BoundAST.BoundExpression).VisitInvocationExpression(Heir.AST.Invocation)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitInvocationExpression(Heir.AST.Invocation)
    name: VisitInvocationExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitInvocationExpression_Heir_AST_Invocation_
  - name: (
  - uid: Heir.AST.Invocation
    name: Invocation
    href: Heir.AST.Invocation.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitInvocationExpression(Heir.AST.Invocation)
    name: VisitInvocationExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitInvocationExpression_Heir_AST_Invocation_
  - name: (
  - uid: Heir.AST.Invocation
    name: Invocation
    href: Heir.AST.Invocation.html
  - name: )
- uid: Heir.AST.Invocation
  commentId: T:Heir.AST.Invocation
  parent: Heir.AST
  href: Heir.AST.Invocation.html
  name: Invocation
  nameWithType: Invocation
  fullName: Heir.AST.Invocation
- uid: Heir.AST.Abstract.Expression.Visitor`1.VisitInvocationExpression(Heir.AST.Invocation)
  commentId: M:Heir.AST.Abstract.Expression.Visitor`1.VisitInvocationExpression(Heir.AST.Invocation)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitInvocationExpression_Heir_AST_Invocation_
  name: VisitInvocationExpression(Invocation)
  nameWithType: Expression.Visitor<R>.VisitInvocationExpression(Invocation)
  fullName: Heir.AST.Abstract.Expression.Visitor<R>.VisitInvocationExpression(Heir.AST.Invocation)
  nameWithType.vb: Expression.Visitor(Of R).VisitInvocationExpression(Invocation)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of R).VisitInvocationExpression(Heir.AST.Invocation)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitInvocationExpression(Heir.AST.Invocation)
    name: VisitInvocationExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitInvocationExpression_Heir_AST_Invocation_
  - name: (
  - uid: Heir.AST.Invocation
    name: Invocation
    href: Heir.AST.Invocation.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitInvocationExpression(Heir.AST.Invocation)
    name: VisitInvocationExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitInvocationExpression_Heir_AST_Invocation_
  - name: (
  - uid: Heir.AST.Invocation
    name: Invocation
    href: Heir.AST.Invocation.html
  - name: )
- uid: Heir.Binder.VisitAssignmentOpExpression*
  commentId: Overload:Heir.Binder.VisitAssignmentOpExpression
  href: Heir.Binder.html#Heir_Binder_VisitAssignmentOpExpression_Heir_AST_AssignmentOp_
  name: VisitAssignmentOpExpression
  nameWithType: Binder.VisitAssignmentOpExpression
  fullName: Heir.Binder.VisitAssignmentOpExpression
- uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitAssignmentOpExpression(Heir.AST.AssignmentOp)
  commentId: M:Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitAssignmentOpExpression(Heir.AST.AssignmentOp)
  parent: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}
  definition: Heir.AST.Abstract.Expression.Visitor`1.VisitAssignmentOpExpression(Heir.AST.AssignmentOp)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitAssignmentOpExpression_Heir_AST_AssignmentOp_
  name: VisitAssignmentOpExpression(AssignmentOp)
  nameWithType: Expression.Visitor<BoundExpression>.VisitAssignmentOpExpression(AssignmentOp)
  fullName: Heir.AST.Abstract.Expression.Visitor<Heir.BoundAST.BoundExpression>.VisitAssignmentOpExpression(Heir.AST.AssignmentOp)
  nameWithType.vb: Expression.Visitor(Of BoundExpression).VisitAssignmentOpExpression(AssignmentOp)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of Heir.BoundAST.BoundExpression).VisitAssignmentOpExpression(Heir.AST.AssignmentOp)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitAssignmentOpExpression(Heir.AST.AssignmentOp)
    name: VisitAssignmentOpExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitAssignmentOpExpression_Heir_AST_AssignmentOp_
  - name: (
  - uid: Heir.AST.AssignmentOp
    name: AssignmentOp
    href: Heir.AST.AssignmentOp.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitAssignmentOpExpression(Heir.AST.AssignmentOp)
    name: VisitAssignmentOpExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitAssignmentOpExpression_Heir_AST_AssignmentOp_
  - name: (
  - uid: Heir.AST.AssignmentOp
    name: AssignmentOp
    href: Heir.AST.AssignmentOp.html
  - name: )
- uid: Heir.AST.AssignmentOp
  commentId: T:Heir.AST.AssignmentOp
  parent: Heir.AST
  href: Heir.AST.AssignmentOp.html
  name: AssignmentOp
  nameWithType: AssignmentOp
  fullName: Heir.AST.AssignmentOp
- uid: Heir.AST.Abstract.Expression.Visitor`1.VisitAssignmentOpExpression(Heir.AST.AssignmentOp)
  commentId: M:Heir.AST.Abstract.Expression.Visitor`1.VisitAssignmentOpExpression(Heir.AST.AssignmentOp)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitAssignmentOpExpression_Heir_AST_AssignmentOp_
  name: VisitAssignmentOpExpression(AssignmentOp)
  nameWithType: Expression.Visitor<R>.VisitAssignmentOpExpression(AssignmentOp)
  fullName: Heir.AST.Abstract.Expression.Visitor<R>.VisitAssignmentOpExpression(Heir.AST.AssignmentOp)
  nameWithType.vb: Expression.Visitor(Of R).VisitAssignmentOpExpression(AssignmentOp)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of R).VisitAssignmentOpExpression(Heir.AST.AssignmentOp)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitAssignmentOpExpression(Heir.AST.AssignmentOp)
    name: VisitAssignmentOpExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitAssignmentOpExpression_Heir_AST_AssignmentOp_
  - name: (
  - uid: Heir.AST.AssignmentOp
    name: AssignmentOp
    href: Heir.AST.AssignmentOp.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitAssignmentOpExpression(Heir.AST.AssignmentOp)
    name: VisitAssignmentOpExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitAssignmentOpExpression_Heir_AST_AssignmentOp_
  - name: (
  - uid: Heir.AST.AssignmentOp
    name: AssignmentOp
    href: Heir.AST.AssignmentOp.html
  - name: )
- uid: Heir.Binder.VisitBinaryOpExpression*
  commentId: Overload:Heir.Binder.VisitBinaryOpExpression
  href: Heir.Binder.html#Heir_Binder_VisitBinaryOpExpression_Heir_AST_BinaryOp_
  name: VisitBinaryOpExpression
  nameWithType: Binder.VisitBinaryOpExpression
  fullName: Heir.Binder.VisitBinaryOpExpression
- uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitBinaryOpExpression(Heir.AST.BinaryOp)
  commentId: M:Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitBinaryOpExpression(Heir.AST.BinaryOp)
  parent: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}
  definition: Heir.AST.Abstract.Expression.Visitor`1.VisitBinaryOpExpression(Heir.AST.BinaryOp)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitBinaryOpExpression_Heir_AST_BinaryOp_
  name: VisitBinaryOpExpression(BinaryOp)
  nameWithType: Expression.Visitor<BoundExpression>.VisitBinaryOpExpression(BinaryOp)
  fullName: Heir.AST.Abstract.Expression.Visitor<Heir.BoundAST.BoundExpression>.VisitBinaryOpExpression(Heir.AST.BinaryOp)
  nameWithType.vb: Expression.Visitor(Of BoundExpression).VisitBinaryOpExpression(BinaryOp)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of Heir.BoundAST.BoundExpression).VisitBinaryOpExpression(Heir.AST.BinaryOp)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitBinaryOpExpression(Heir.AST.BinaryOp)
    name: VisitBinaryOpExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitBinaryOpExpression_Heir_AST_BinaryOp_
  - name: (
  - uid: Heir.AST.BinaryOp
    name: BinaryOp
    href: Heir.AST.BinaryOp.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitBinaryOpExpression(Heir.AST.BinaryOp)
    name: VisitBinaryOpExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitBinaryOpExpression_Heir_AST_BinaryOp_
  - name: (
  - uid: Heir.AST.BinaryOp
    name: BinaryOp
    href: Heir.AST.BinaryOp.html
  - name: )
- uid: Heir.AST.BinaryOp
  commentId: T:Heir.AST.BinaryOp
  parent: Heir.AST
  href: Heir.AST.BinaryOp.html
  name: BinaryOp
  nameWithType: BinaryOp
  fullName: Heir.AST.BinaryOp
- uid: Heir.AST.Abstract.Expression.Visitor`1.VisitBinaryOpExpression(Heir.AST.BinaryOp)
  commentId: M:Heir.AST.Abstract.Expression.Visitor`1.VisitBinaryOpExpression(Heir.AST.BinaryOp)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitBinaryOpExpression_Heir_AST_BinaryOp_
  name: VisitBinaryOpExpression(BinaryOp)
  nameWithType: Expression.Visitor<R>.VisitBinaryOpExpression(BinaryOp)
  fullName: Heir.AST.Abstract.Expression.Visitor<R>.VisitBinaryOpExpression(Heir.AST.BinaryOp)
  nameWithType.vb: Expression.Visitor(Of R).VisitBinaryOpExpression(BinaryOp)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of R).VisitBinaryOpExpression(Heir.AST.BinaryOp)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitBinaryOpExpression(Heir.AST.BinaryOp)
    name: VisitBinaryOpExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitBinaryOpExpression_Heir_AST_BinaryOp_
  - name: (
  - uid: Heir.AST.BinaryOp
    name: BinaryOp
    href: Heir.AST.BinaryOp.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitBinaryOpExpression(Heir.AST.BinaryOp)
    name: VisitBinaryOpExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitBinaryOpExpression_Heir_AST_BinaryOp_
  - name: (
  - uid: Heir.AST.BinaryOp
    name: BinaryOp
    href: Heir.AST.BinaryOp.html
  - name: )
- uid: Heir.Binder.VisitUnaryOpExpression*
  commentId: Overload:Heir.Binder.VisitUnaryOpExpression
  href: Heir.Binder.html#Heir_Binder_VisitUnaryOpExpression_Heir_AST_UnaryOp_
  name: VisitUnaryOpExpression
  nameWithType: Binder.VisitUnaryOpExpression
  fullName: Heir.Binder.VisitUnaryOpExpression
- uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitUnaryOpExpression(Heir.AST.UnaryOp)
  commentId: M:Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitUnaryOpExpression(Heir.AST.UnaryOp)
  parent: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}
  definition: Heir.AST.Abstract.Expression.Visitor`1.VisitUnaryOpExpression(Heir.AST.UnaryOp)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitUnaryOpExpression_Heir_AST_UnaryOp_
  name: VisitUnaryOpExpression(UnaryOp)
  nameWithType: Expression.Visitor<BoundExpression>.VisitUnaryOpExpression(UnaryOp)
  fullName: Heir.AST.Abstract.Expression.Visitor<Heir.BoundAST.BoundExpression>.VisitUnaryOpExpression(Heir.AST.UnaryOp)
  nameWithType.vb: Expression.Visitor(Of BoundExpression).VisitUnaryOpExpression(UnaryOp)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of Heir.BoundAST.BoundExpression).VisitUnaryOpExpression(Heir.AST.UnaryOp)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitUnaryOpExpression(Heir.AST.UnaryOp)
    name: VisitUnaryOpExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitUnaryOpExpression_Heir_AST_UnaryOp_
  - name: (
  - uid: Heir.AST.UnaryOp
    name: UnaryOp
    href: Heir.AST.UnaryOp.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitUnaryOpExpression(Heir.AST.UnaryOp)
    name: VisitUnaryOpExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitUnaryOpExpression_Heir_AST_UnaryOp_
  - name: (
  - uid: Heir.AST.UnaryOp
    name: UnaryOp
    href: Heir.AST.UnaryOp.html
  - name: )
- uid: Heir.AST.UnaryOp
  commentId: T:Heir.AST.UnaryOp
  parent: Heir.AST
  href: Heir.AST.UnaryOp.html
  name: UnaryOp
  nameWithType: UnaryOp
  fullName: Heir.AST.UnaryOp
- uid: Heir.AST.Abstract.Expression.Visitor`1.VisitUnaryOpExpression(Heir.AST.UnaryOp)
  commentId: M:Heir.AST.Abstract.Expression.Visitor`1.VisitUnaryOpExpression(Heir.AST.UnaryOp)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitUnaryOpExpression_Heir_AST_UnaryOp_
  name: VisitUnaryOpExpression(UnaryOp)
  nameWithType: Expression.Visitor<R>.VisitUnaryOpExpression(UnaryOp)
  fullName: Heir.AST.Abstract.Expression.Visitor<R>.VisitUnaryOpExpression(Heir.AST.UnaryOp)
  nameWithType.vb: Expression.Visitor(Of R).VisitUnaryOpExpression(UnaryOp)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of R).VisitUnaryOpExpression(Heir.AST.UnaryOp)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitUnaryOpExpression(Heir.AST.UnaryOp)
    name: VisitUnaryOpExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitUnaryOpExpression_Heir_AST_UnaryOp_
  - name: (
  - uid: Heir.AST.UnaryOp
    name: UnaryOp
    href: Heir.AST.UnaryOp.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitUnaryOpExpression(Heir.AST.UnaryOp)
    name: VisitUnaryOpExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitUnaryOpExpression_Heir_AST_UnaryOp_
  - name: (
  - uid: Heir.AST.UnaryOp
    name: UnaryOp
    href: Heir.AST.UnaryOp.html
  - name: )
- uid: Heir.Binder.VisitIdentifierNameExpression*
  commentId: Overload:Heir.Binder.VisitIdentifierNameExpression
  href: Heir.Binder.html#Heir_Binder_VisitIdentifierNameExpression_Heir_AST_IdentifierName_
  name: VisitIdentifierNameExpression
  nameWithType: Binder.VisitIdentifierNameExpression
  fullName: Heir.Binder.VisitIdentifierNameExpression
- uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitIdentifierNameExpression(Heir.AST.IdentifierName)
  commentId: M:Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitIdentifierNameExpression(Heir.AST.IdentifierName)
  parent: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}
  definition: Heir.AST.Abstract.Expression.Visitor`1.VisitIdentifierNameExpression(Heir.AST.IdentifierName)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitIdentifierNameExpression_Heir_AST_IdentifierName_
  name: VisitIdentifierNameExpression(IdentifierName)
  nameWithType: Expression.Visitor<BoundExpression>.VisitIdentifierNameExpression(IdentifierName)
  fullName: Heir.AST.Abstract.Expression.Visitor<Heir.BoundAST.BoundExpression>.VisitIdentifierNameExpression(Heir.AST.IdentifierName)
  nameWithType.vb: Expression.Visitor(Of BoundExpression).VisitIdentifierNameExpression(IdentifierName)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of Heir.BoundAST.BoundExpression).VisitIdentifierNameExpression(Heir.AST.IdentifierName)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitIdentifierNameExpression(Heir.AST.IdentifierName)
    name: VisitIdentifierNameExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitIdentifierNameExpression_Heir_AST_IdentifierName_
  - name: (
  - uid: Heir.AST.IdentifierName
    name: IdentifierName
    href: Heir.AST.IdentifierName.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitIdentifierNameExpression(Heir.AST.IdentifierName)
    name: VisitIdentifierNameExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitIdentifierNameExpression_Heir_AST_IdentifierName_
  - name: (
  - uid: Heir.AST.IdentifierName
    name: IdentifierName
    href: Heir.AST.IdentifierName.html
  - name: )
- uid: Heir.AST.IdentifierName
  commentId: T:Heir.AST.IdentifierName
  parent: Heir.AST
  href: Heir.AST.IdentifierName.html
  name: IdentifierName
  nameWithType: IdentifierName
  fullName: Heir.AST.IdentifierName
- uid: Heir.AST.Abstract.Expression.Visitor`1.VisitIdentifierNameExpression(Heir.AST.IdentifierName)
  commentId: M:Heir.AST.Abstract.Expression.Visitor`1.VisitIdentifierNameExpression(Heir.AST.IdentifierName)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitIdentifierNameExpression_Heir_AST_IdentifierName_
  name: VisitIdentifierNameExpression(IdentifierName)
  nameWithType: Expression.Visitor<R>.VisitIdentifierNameExpression(IdentifierName)
  fullName: Heir.AST.Abstract.Expression.Visitor<R>.VisitIdentifierNameExpression(Heir.AST.IdentifierName)
  nameWithType.vb: Expression.Visitor(Of R).VisitIdentifierNameExpression(IdentifierName)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of R).VisitIdentifierNameExpression(Heir.AST.IdentifierName)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitIdentifierNameExpression(Heir.AST.IdentifierName)
    name: VisitIdentifierNameExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitIdentifierNameExpression_Heir_AST_IdentifierName_
  - name: (
  - uid: Heir.AST.IdentifierName
    name: IdentifierName
    href: Heir.AST.IdentifierName.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitIdentifierNameExpression(Heir.AST.IdentifierName)
    name: VisitIdentifierNameExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitIdentifierNameExpression_Heir_AST_IdentifierName_
  - name: (
  - uid: Heir.AST.IdentifierName
    name: IdentifierName
    href: Heir.AST.IdentifierName.html
  - name: )
- uid: Heir.Binder.VisitLiteralExpression*
  commentId: Overload:Heir.Binder.VisitLiteralExpression
  href: Heir.Binder.html#Heir_Binder_VisitLiteralExpression_Heir_AST_Literal_
  name: VisitLiteralExpression
  nameWithType: Binder.VisitLiteralExpression
  fullName: Heir.Binder.VisitLiteralExpression
- uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitLiteralExpression(Heir.AST.Literal)
  commentId: M:Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitLiteralExpression(Heir.AST.Literal)
  parent: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}
  definition: Heir.AST.Abstract.Expression.Visitor`1.VisitLiteralExpression(Heir.AST.Literal)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitLiteralExpression_Heir_AST_Literal_
  name: VisitLiteralExpression(Literal)
  nameWithType: Expression.Visitor<BoundExpression>.VisitLiteralExpression(Literal)
  fullName: Heir.AST.Abstract.Expression.Visitor<Heir.BoundAST.BoundExpression>.VisitLiteralExpression(Heir.AST.Literal)
  nameWithType.vb: Expression.Visitor(Of BoundExpression).VisitLiteralExpression(Literal)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of Heir.BoundAST.BoundExpression).VisitLiteralExpression(Heir.AST.Literal)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitLiteralExpression(Heir.AST.Literal)
    name: VisitLiteralExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitLiteralExpression_Heir_AST_Literal_
  - name: (
  - uid: Heir.AST.Literal
    name: Literal
    href: Heir.AST.Literal.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitLiteralExpression(Heir.AST.Literal)
    name: VisitLiteralExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitLiteralExpression_Heir_AST_Literal_
  - name: (
  - uid: Heir.AST.Literal
    name: Literal
    href: Heir.AST.Literal.html
  - name: )
- uid: Heir.AST.Literal
  commentId: T:Heir.AST.Literal
  parent: Heir.AST
  href: Heir.AST.Literal.html
  name: Literal
  nameWithType: Literal
  fullName: Heir.AST.Literal
- uid: Heir.AST.Abstract.Expression.Visitor`1.VisitLiteralExpression(Heir.AST.Literal)
  commentId: M:Heir.AST.Abstract.Expression.Visitor`1.VisitLiteralExpression(Heir.AST.Literal)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitLiteralExpression_Heir_AST_Literal_
  name: VisitLiteralExpression(Literal)
  nameWithType: Expression.Visitor<R>.VisitLiteralExpression(Literal)
  fullName: Heir.AST.Abstract.Expression.Visitor<R>.VisitLiteralExpression(Heir.AST.Literal)
  nameWithType.vb: Expression.Visitor(Of R).VisitLiteralExpression(Literal)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of R).VisitLiteralExpression(Heir.AST.Literal)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitLiteralExpression(Heir.AST.Literal)
    name: VisitLiteralExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitLiteralExpression_Heir_AST_Literal_
  - name: (
  - uid: Heir.AST.Literal
    name: Literal
    href: Heir.AST.Literal.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitLiteralExpression(Heir.AST.Literal)
    name: VisitLiteralExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitLiteralExpression_Heir_AST_Literal_
  - name: (
  - uid: Heir.AST.Literal
    name: Literal
    href: Heir.AST.Literal.html
  - name: )
- uid: Heir.Binder.VisitObjectLiteralExpression*
  commentId: Overload:Heir.Binder.VisitObjectLiteralExpression
  href: Heir.Binder.html#Heir_Binder_VisitObjectLiteralExpression_Heir_AST_ObjectLiteral_
  name: VisitObjectLiteralExpression
  nameWithType: Binder.VisitObjectLiteralExpression
  fullName: Heir.Binder.VisitObjectLiteralExpression
- uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitObjectLiteralExpression(Heir.AST.ObjectLiteral)
  commentId: M:Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitObjectLiteralExpression(Heir.AST.ObjectLiteral)
  parent: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}
  definition: Heir.AST.Abstract.Expression.Visitor`1.VisitObjectLiteralExpression(Heir.AST.ObjectLiteral)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitObjectLiteralExpression_Heir_AST_ObjectLiteral_
  name: VisitObjectLiteralExpression(ObjectLiteral)
  nameWithType: Expression.Visitor<BoundExpression>.VisitObjectLiteralExpression(ObjectLiteral)
  fullName: Heir.AST.Abstract.Expression.Visitor<Heir.BoundAST.BoundExpression>.VisitObjectLiteralExpression(Heir.AST.ObjectLiteral)
  nameWithType.vb: Expression.Visitor(Of BoundExpression).VisitObjectLiteralExpression(ObjectLiteral)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of Heir.BoundAST.BoundExpression).VisitObjectLiteralExpression(Heir.AST.ObjectLiteral)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitObjectLiteralExpression(Heir.AST.ObjectLiteral)
    name: VisitObjectLiteralExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitObjectLiteralExpression_Heir_AST_ObjectLiteral_
  - name: (
  - uid: Heir.AST.ObjectLiteral
    name: ObjectLiteral
    href: Heir.AST.ObjectLiteral.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitObjectLiteralExpression(Heir.AST.ObjectLiteral)
    name: VisitObjectLiteralExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitObjectLiteralExpression_Heir_AST_ObjectLiteral_
  - name: (
  - uid: Heir.AST.ObjectLiteral
    name: ObjectLiteral
    href: Heir.AST.ObjectLiteral.html
  - name: )
- uid: Heir.AST.ObjectLiteral
  commentId: T:Heir.AST.ObjectLiteral
  parent: Heir.AST
  href: Heir.AST.ObjectLiteral.html
  name: ObjectLiteral
  nameWithType: ObjectLiteral
  fullName: Heir.AST.ObjectLiteral
- uid: Heir.AST.Abstract.Expression.Visitor`1.VisitObjectLiteralExpression(Heir.AST.ObjectLiteral)
  commentId: M:Heir.AST.Abstract.Expression.Visitor`1.VisitObjectLiteralExpression(Heir.AST.ObjectLiteral)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitObjectLiteralExpression_Heir_AST_ObjectLiteral_
  name: VisitObjectLiteralExpression(ObjectLiteral)
  nameWithType: Expression.Visitor<R>.VisitObjectLiteralExpression(ObjectLiteral)
  fullName: Heir.AST.Abstract.Expression.Visitor<R>.VisitObjectLiteralExpression(Heir.AST.ObjectLiteral)
  nameWithType.vb: Expression.Visitor(Of R).VisitObjectLiteralExpression(ObjectLiteral)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of R).VisitObjectLiteralExpression(Heir.AST.ObjectLiteral)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitObjectLiteralExpression(Heir.AST.ObjectLiteral)
    name: VisitObjectLiteralExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitObjectLiteralExpression_Heir_AST_ObjectLiteral_
  - name: (
  - uid: Heir.AST.ObjectLiteral
    name: ObjectLiteral
    href: Heir.AST.ObjectLiteral.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitObjectLiteralExpression(Heir.AST.ObjectLiteral)
    name: VisitObjectLiteralExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitObjectLiteralExpression_Heir_AST_ObjectLiteral_
  - name: (
  - uid: Heir.AST.ObjectLiteral
    name: ObjectLiteral
    href: Heir.AST.ObjectLiteral.html
  - name: )
- uid: Heir.Binder.VisitNoOp*
  commentId: Overload:Heir.Binder.VisitNoOp
  href: Heir.Binder.html#Heir_Binder_VisitNoOp_Heir_AST_NoOpStatement_
  name: VisitNoOp
  nameWithType: Binder.VisitNoOp
  fullName: Heir.Binder.VisitNoOp
- uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitNoOp(Heir.AST.NoOpStatement)
  commentId: M:Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitNoOp(Heir.AST.NoOpStatement)
  parent: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}
  definition: Heir.AST.Abstract.Statement.Visitor`1.VisitNoOp(Heir.AST.NoOpStatement)
  href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitNoOp_Heir_AST_NoOpStatement_
  name: VisitNoOp(NoOpStatement)
  nameWithType: Statement.Visitor<BoundStatement>.VisitNoOp(NoOpStatement)
  fullName: Heir.AST.Abstract.Statement.Visitor<Heir.BoundAST.BoundStatement>.VisitNoOp(Heir.AST.NoOpStatement)
  nameWithType.vb: Statement.Visitor(Of BoundStatement).VisitNoOp(NoOpStatement)
  fullName.vb: Heir.AST.Abstract.Statement.Visitor(Of Heir.BoundAST.BoundStatement).VisitNoOp(Heir.AST.NoOpStatement)
  spec.csharp:
  - uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitNoOp(Heir.AST.NoOpStatement)
    name: VisitNoOp
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitNoOp_Heir_AST_NoOpStatement_
  - name: (
  - uid: Heir.AST.NoOpStatement
    name: NoOpStatement
    href: Heir.AST.NoOpStatement.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Statement.Visitor{Heir.BoundAST.BoundStatement}.VisitNoOp(Heir.AST.NoOpStatement)
    name: VisitNoOp
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitNoOp_Heir_AST_NoOpStatement_
  - name: (
  - uid: Heir.AST.NoOpStatement
    name: NoOpStatement
    href: Heir.AST.NoOpStatement.html
  - name: )
- uid: Heir.AST.NoOpStatement
  commentId: T:Heir.AST.NoOpStatement
  parent: Heir.AST
  href: Heir.AST.NoOpStatement.html
  name: NoOpStatement
  nameWithType: NoOpStatement
  fullName: Heir.AST.NoOpStatement
- uid: Heir.AST.Abstract.Statement.Visitor`1.VisitNoOp(Heir.AST.NoOpStatement)
  commentId: M:Heir.AST.Abstract.Statement.Visitor`1.VisitNoOp(Heir.AST.NoOpStatement)
  href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitNoOp_Heir_AST_NoOpStatement_
  name: VisitNoOp(NoOpStatement)
  nameWithType: Statement.Visitor<R>.VisitNoOp(NoOpStatement)
  fullName: Heir.AST.Abstract.Statement.Visitor<R>.VisitNoOp(Heir.AST.NoOpStatement)
  nameWithType.vb: Statement.Visitor(Of R).VisitNoOp(NoOpStatement)
  fullName.vb: Heir.AST.Abstract.Statement.Visitor(Of R).VisitNoOp(Heir.AST.NoOpStatement)
  spec.csharp:
  - uid: Heir.AST.Abstract.Statement.Visitor`1.VisitNoOp(Heir.AST.NoOpStatement)
    name: VisitNoOp
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitNoOp_Heir_AST_NoOpStatement_
  - name: (
  - uid: Heir.AST.NoOpStatement
    name: NoOpStatement
    href: Heir.AST.NoOpStatement.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Statement.Visitor`1.VisitNoOp(Heir.AST.NoOpStatement)
    name: VisitNoOp
    href: Heir.AST.Abstract.Statement.Visitor-1.html#Heir_AST_Abstract_Statement_Visitor_1_VisitNoOp_Heir_AST_NoOpStatement_
  - name: (
  - uid: Heir.AST.NoOpStatement
    name: NoOpStatement
    href: Heir.AST.NoOpStatement.html
  - name: )
- uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitNoOp(Heir.AST.NoOpType)
  commentId: M:Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitNoOp(Heir.AST.NoOpType)
  parent: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}
  definition: Heir.AST.Abstract.Expression.Visitor`1.VisitNoOp(Heir.AST.NoOpType)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitNoOp_Heir_AST_NoOpType_
  name: VisitNoOp(NoOpType)
  nameWithType: Expression.Visitor<BoundExpression>.VisitNoOp(NoOpType)
  fullName: Heir.AST.Abstract.Expression.Visitor<Heir.BoundAST.BoundExpression>.VisitNoOp(Heir.AST.NoOpType)
  nameWithType.vb: Expression.Visitor(Of BoundExpression).VisitNoOp(NoOpType)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of Heir.BoundAST.BoundExpression).VisitNoOp(Heir.AST.NoOpType)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitNoOp(Heir.AST.NoOpType)
    name: VisitNoOp
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitNoOp_Heir_AST_NoOpType_
  - name: (
  - uid: Heir.AST.NoOpType
    name: NoOpType
    href: Heir.AST.NoOpType.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitNoOp(Heir.AST.NoOpType)
    name: VisitNoOp
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitNoOp_Heir_AST_NoOpType_
  - name: (
  - uid: Heir.AST.NoOpType
    name: NoOpType
    href: Heir.AST.NoOpType.html
  - name: )
- uid: Heir.AST.NoOpType
  commentId: T:Heir.AST.NoOpType
  parent: Heir.AST
  href: Heir.AST.NoOpType.html
  name: NoOpType
  nameWithType: NoOpType
  fullName: Heir.AST.NoOpType
- uid: Heir.AST.Abstract.Expression.Visitor`1.VisitNoOp(Heir.AST.NoOpType)
  commentId: M:Heir.AST.Abstract.Expression.Visitor`1.VisitNoOp(Heir.AST.NoOpType)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitNoOp_Heir_AST_NoOpType_
  name: VisitNoOp(NoOpType)
  nameWithType: Expression.Visitor<R>.VisitNoOp(NoOpType)
  fullName: Heir.AST.Abstract.Expression.Visitor<R>.VisitNoOp(Heir.AST.NoOpType)
  nameWithType.vb: Expression.Visitor(Of R).VisitNoOp(NoOpType)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of R).VisitNoOp(Heir.AST.NoOpType)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitNoOp(Heir.AST.NoOpType)
    name: VisitNoOp
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitNoOp_Heir_AST_NoOpType_
  - name: (
  - uid: Heir.AST.NoOpType
    name: NoOpType
    href: Heir.AST.NoOpType.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitNoOp(Heir.AST.NoOpType)
    name: VisitNoOp
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitNoOp_Heir_AST_NoOpType_
  - name: (
  - uid: Heir.AST.NoOpType
    name: NoOpType
    href: Heir.AST.NoOpType.html
  - name: )
- uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitNoOp(Heir.AST.NoOp)
  commentId: M:Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitNoOp(Heir.AST.NoOp)
  parent: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}
  definition: Heir.AST.Abstract.Expression.Visitor`1.VisitNoOp(Heir.AST.NoOp)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitNoOp_Heir_AST_NoOp_
  name: VisitNoOp(NoOp)
  nameWithType: Expression.Visitor<BoundExpression>.VisitNoOp(NoOp)
  fullName: Heir.AST.Abstract.Expression.Visitor<Heir.BoundAST.BoundExpression>.VisitNoOp(Heir.AST.NoOp)
  nameWithType.vb: Expression.Visitor(Of BoundExpression).VisitNoOp(NoOp)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of Heir.BoundAST.BoundExpression).VisitNoOp(Heir.AST.NoOp)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitNoOp(Heir.AST.NoOp)
    name: VisitNoOp
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitNoOp_Heir_AST_NoOp_
  - name: (
  - uid: Heir.AST.NoOp
    name: NoOp
    href: Heir.AST.NoOp.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitNoOp(Heir.AST.NoOp)
    name: VisitNoOp
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitNoOp_Heir_AST_NoOp_
  - name: (
  - uid: Heir.AST.NoOp
    name: NoOp
    href: Heir.AST.NoOp.html
  - name: )
- uid: Heir.AST.NoOp
  commentId: T:Heir.AST.NoOp
  parent: Heir.AST
  href: Heir.AST.NoOp.html
  name: NoOp
  nameWithType: NoOp
  fullName: Heir.AST.NoOp
- uid: Heir.AST.Abstract.Expression.Visitor`1.VisitNoOp(Heir.AST.NoOp)
  commentId: M:Heir.AST.Abstract.Expression.Visitor`1.VisitNoOp(Heir.AST.NoOp)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitNoOp_Heir_AST_NoOp_
  name: VisitNoOp(NoOp)
  nameWithType: Expression.Visitor<R>.VisitNoOp(NoOp)
  fullName: Heir.AST.Abstract.Expression.Visitor<R>.VisitNoOp(Heir.AST.NoOp)
  nameWithType.vb: Expression.Visitor(Of R).VisitNoOp(NoOp)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of R).VisitNoOp(Heir.AST.NoOp)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitNoOp(Heir.AST.NoOp)
    name: VisitNoOp
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitNoOp_Heir_AST_NoOp_
  - name: (
  - uid: Heir.AST.NoOp
    name: NoOp
    href: Heir.AST.NoOp.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitNoOp(Heir.AST.NoOp)
    name: VisitNoOp
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitNoOp_Heir_AST_NoOp_
  - name: (
  - uid: Heir.AST.NoOp
    name: NoOp
    href: Heir.AST.NoOp.html
  - name: )
- uid: Heir.Binder.VisitSingularTypeRef*
  commentId: Overload:Heir.Binder.VisitSingularTypeRef
  href: Heir.Binder.html#Heir_Binder_VisitSingularTypeRef_Heir_AST_SingularType_
  name: VisitSingularTypeRef
  nameWithType: Binder.VisitSingularTypeRef
  fullName: Heir.Binder.VisitSingularTypeRef
- uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitSingularTypeRef(Heir.AST.SingularType)
  commentId: M:Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitSingularTypeRef(Heir.AST.SingularType)
  parent: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}
  definition: Heir.AST.Abstract.Expression.Visitor`1.VisitSingularTypeRef(Heir.AST.SingularType)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitSingularTypeRef_Heir_AST_SingularType_
  name: VisitSingularTypeRef(SingularType)
  nameWithType: Expression.Visitor<BoundExpression>.VisitSingularTypeRef(SingularType)
  fullName: Heir.AST.Abstract.Expression.Visitor<Heir.BoundAST.BoundExpression>.VisitSingularTypeRef(Heir.AST.SingularType)
  nameWithType.vb: Expression.Visitor(Of BoundExpression).VisitSingularTypeRef(SingularType)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of Heir.BoundAST.BoundExpression).VisitSingularTypeRef(Heir.AST.SingularType)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitSingularTypeRef(Heir.AST.SingularType)
    name: VisitSingularTypeRef
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitSingularTypeRef_Heir_AST_SingularType_
  - name: (
  - uid: Heir.AST.SingularType
    name: SingularType
    href: Heir.AST.SingularType.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitSingularTypeRef(Heir.AST.SingularType)
    name: VisitSingularTypeRef
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitSingularTypeRef_Heir_AST_SingularType_
  - name: (
  - uid: Heir.AST.SingularType
    name: SingularType
    href: Heir.AST.SingularType.html
  - name: )
- uid: Heir.AST.SingularType
  commentId: T:Heir.AST.SingularType
  parent: Heir.AST
  href: Heir.AST.SingularType.html
  name: SingularType
  nameWithType: SingularType
  fullName: Heir.AST.SingularType
- uid: Heir.AST.Abstract.Expression.Visitor`1.VisitSingularTypeRef(Heir.AST.SingularType)
  commentId: M:Heir.AST.Abstract.Expression.Visitor`1.VisitSingularTypeRef(Heir.AST.SingularType)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitSingularTypeRef_Heir_AST_SingularType_
  name: VisitSingularTypeRef(SingularType)
  nameWithType: Expression.Visitor<R>.VisitSingularTypeRef(SingularType)
  fullName: Heir.AST.Abstract.Expression.Visitor<R>.VisitSingularTypeRef(Heir.AST.SingularType)
  nameWithType.vb: Expression.Visitor(Of R).VisitSingularTypeRef(SingularType)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of R).VisitSingularTypeRef(Heir.AST.SingularType)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitSingularTypeRef(Heir.AST.SingularType)
    name: VisitSingularTypeRef
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitSingularTypeRef_Heir_AST_SingularType_
  - name: (
  - uid: Heir.AST.SingularType
    name: SingularType
    href: Heir.AST.SingularType.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitSingularTypeRef(Heir.AST.SingularType)
    name: VisitSingularTypeRef
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitSingularTypeRef_Heir_AST_SingularType_
  - name: (
  - uid: Heir.AST.SingularType
    name: SingularType
    href: Heir.AST.SingularType.html
  - name: )
- uid: Heir.Binder.VisitParenthesizedTypeRef*
  commentId: Overload:Heir.Binder.VisitParenthesizedTypeRef
  href: Heir.Binder.html#Heir_Binder_VisitParenthesizedTypeRef_Heir_AST_ParenthesizedType_
  name: VisitParenthesizedTypeRef
  nameWithType: Binder.VisitParenthesizedTypeRef
  fullName: Heir.Binder.VisitParenthesizedTypeRef
- uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitParenthesizedTypeRef(Heir.AST.ParenthesizedType)
  commentId: M:Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitParenthesizedTypeRef(Heir.AST.ParenthesizedType)
  parent: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}
  definition: Heir.AST.Abstract.Expression.Visitor`1.VisitParenthesizedTypeRef(Heir.AST.ParenthesizedType)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitParenthesizedTypeRef_Heir_AST_ParenthesizedType_
  name: VisitParenthesizedTypeRef(ParenthesizedType)
  nameWithType: Expression.Visitor<BoundExpression>.VisitParenthesizedTypeRef(ParenthesizedType)
  fullName: Heir.AST.Abstract.Expression.Visitor<Heir.BoundAST.BoundExpression>.VisitParenthesizedTypeRef(Heir.AST.ParenthesizedType)
  nameWithType.vb: Expression.Visitor(Of BoundExpression).VisitParenthesizedTypeRef(ParenthesizedType)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of Heir.BoundAST.BoundExpression).VisitParenthesizedTypeRef(Heir.AST.ParenthesizedType)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitParenthesizedTypeRef(Heir.AST.ParenthesizedType)
    name: VisitParenthesizedTypeRef
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitParenthesizedTypeRef_Heir_AST_ParenthesizedType_
  - name: (
  - uid: Heir.AST.ParenthesizedType
    name: ParenthesizedType
    href: Heir.AST.ParenthesizedType.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitParenthesizedTypeRef(Heir.AST.ParenthesizedType)
    name: VisitParenthesizedTypeRef
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitParenthesizedTypeRef_Heir_AST_ParenthesizedType_
  - name: (
  - uid: Heir.AST.ParenthesizedType
    name: ParenthesizedType
    href: Heir.AST.ParenthesizedType.html
  - name: )
- uid: Heir.AST.ParenthesizedType
  commentId: T:Heir.AST.ParenthesizedType
  parent: Heir.AST
  href: Heir.AST.ParenthesizedType.html
  name: ParenthesizedType
  nameWithType: ParenthesizedType
  fullName: Heir.AST.ParenthesizedType
- uid: Heir.AST.Abstract.Expression.Visitor`1.VisitParenthesizedTypeRef(Heir.AST.ParenthesizedType)
  commentId: M:Heir.AST.Abstract.Expression.Visitor`1.VisitParenthesizedTypeRef(Heir.AST.ParenthesizedType)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitParenthesizedTypeRef_Heir_AST_ParenthesizedType_
  name: VisitParenthesizedTypeRef(ParenthesizedType)
  nameWithType: Expression.Visitor<R>.VisitParenthesizedTypeRef(ParenthesizedType)
  fullName: Heir.AST.Abstract.Expression.Visitor<R>.VisitParenthesizedTypeRef(Heir.AST.ParenthesizedType)
  nameWithType.vb: Expression.Visitor(Of R).VisitParenthesizedTypeRef(ParenthesizedType)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of R).VisitParenthesizedTypeRef(Heir.AST.ParenthesizedType)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitParenthesizedTypeRef(Heir.AST.ParenthesizedType)
    name: VisitParenthesizedTypeRef
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitParenthesizedTypeRef_Heir_AST_ParenthesizedType_
  - name: (
  - uid: Heir.AST.ParenthesizedType
    name: ParenthesizedType
    href: Heir.AST.ParenthesizedType.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitParenthesizedTypeRef(Heir.AST.ParenthesizedType)
    name: VisitParenthesizedTypeRef
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitParenthesizedTypeRef_Heir_AST_ParenthesizedType_
  - name: (
  - uid: Heir.AST.ParenthesizedType
    name: ParenthesizedType
    href: Heir.AST.ParenthesizedType.html
  - name: )
- uid: Heir.Binder.VisitUnionTypeRef*
  commentId: Overload:Heir.Binder.VisitUnionTypeRef
  href: Heir.Binder.html#Heir_Binder_VisitUnionTypeRef_Heir_AST_UnionType_
  name: VisitUnionTypeRef
  nameWithType: Binder.VisitUnionTypeRef
  fullName: Heir.Binder.VisitUnionTypeRef
- uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitUnionTypeRef(Heir.AST.UnionType)
  commentId: M:Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitUnionTypeRef(Heir.AST.UnionType)
  parent: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}
  definition: Heir.AST.Abstract.Expression.Visitor`1.VisitUnionTypeRef(Heir.AST.UnionType)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitUnionTypeRef_Heir_AST_UnionType_
  name: VisitUnionTypeRef(UnionType)
  nameWithType: Expression.Visitor<BoundExpression>.VisitUnionTypeRef(UnionType)
  fullName: Heir.AST.Abstract.Expression.Visitor<Heir.BoundAST.BoundExpression>.VisitUnionTypeRef(Heir.AST.UnionType)
  nameWithType.vb: Expression.Visitor(Of BoundExpression).VisitUnionTypeRef(UnionType)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of Heir.BoundAST.BoundExpression).VisitUnionTypeRef(Heir.AST.UnionType)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitUnionTypeRef(Heir.AST.UnionType)
    name: VisitUnionTypeRef
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitUnionTypeRef_Heir_AST_UnionType_
  - name: (
  - uid: Heir.AST.UnionType
    name: UnionType
    href: Heir.AST.UnionType.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitUnionTypeRef(Heir.AST.UnionType)
    name: VisitUnionTypeRef
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitUnionTypeRef_Heir_AST_UnionType_
  - name: (
  - uid: Heir.AST.UnionType
    name: UnionType
    href: Heir.AST.UnionType.html
  - name: )
- uid: Heir.AST.UnionType
  commentId: T:Heir.AST.UnionType
  parent: Heir.AST
  href: Heir.AST.UnionType.html
  name: UnionType
  nameWithType: UnionType
  fullName: Heir.AST.UnionType
- uid: Heir.AST.Abstract.Expression.Visitor`1.VisitUnionTypeRef(Heir.AST.UnionType)
  commentId: M:Heir.AST.Abstract.Expression.Visitor`1.VisitUnionTypeRef(Heir.AST.UnionType)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitUnionTypeRef_Heir_AST_UnionType_
  name: VisitUnionTypeRef(UnionType)
  nameWithType: Expression.Visitor<R>.VisitUnionTypeRef(UnionType)
  fullName: Heir.AST.Abstract.Expression.Visitor<R>.VisitUnionTypeRef(Heir.AST.UnionType)
  nameWithType.vb: Expression.Visitor(Of R).VisitUnionTypeRef(UnionType)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of R).VisitUnionTypeRef(Heir.AST.UnionType)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitUnionTypeRef(Heir.AST.UnionType)
    name: VisitUnionTypeRef
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitUnionTypeRef_Heir_AST_UnionType_
  - name: (
  - uid: Heir.AST.UnionType
    name: UnionType
    href: Heir.AST.UnionType.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitUnionTypeRef(Heir.AST.UnionType)
    name: VisitUnionTypeRef
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitUnionTypeRef_Heir_AST_UnionType_
  - name: (
  - uid: Heir.AST.UnionType
    name: UnionType
    href: Heir.AST.UnionType.html
  - name: )
- uid: Heir.Binder.VisitIntersectionTypeRef*
  commentId: Overload:Heir.Binder.VisitIntersectionTypeRef
  href: Heir.Binder.html#Heir_Binder_VisitIntersectionTypeRef_Heir_AST_IntersectionType_
  name: VisitIntersectionTypeRef
  nameWithType: Binder.VisitIntersectionTypeRef
  fullName: Heir.Binder.VisitIntersectionTypeRef
- uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitIntersectionTypeRef(Heir.AST.IntersectionType)
  commentId: M:Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitIntersectionTypeRef(Heir.AST.IntersectionType)
  parent: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}
  definition: Heir.AST.Abstract.Expression.Visitor`1.VisitIntersectionTypeRef(Heir.AST.IntersectionType)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitIntersectionTypeRef_Heir_AST_IntersectionType_
  name: VisitIntersectionTypeRef(IntersectionType)
  nameWithType: Expression.Visitor<BoundExpression>.VisitIntersectionTypeRef(IntersectionType)
  fullName: Heir.AST.Abstract.Expression.Visitor<Heir.BoundAST.BoundExpression>.VisitIntersectionTypeRef(Heir.AST.IntersectionType)
  nameWithType.vb: Expression.Visitor(Of BoundExpression).VisitIntersectionTypeRef(IntersectionType)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of Heir.BoundAST.BoundExpression).VisitIntersectionTypeRef(Heir.AST.IntersectionType)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitIntersectionTypeRef(Heir.AST.IntersectionType)
    name: VisitIntersectionTypeRef
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitIntersectionTypeRef_Heir_AST_IntersectionType_
  - name: (
  - uid: Heir.AST.IntersectionType
    name: IntersectionType
    href: Heir.AST.IntersectionType.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitIntersectionTypeRef(Heir.AST.IntersectionType)
    name: VisitIntersectionTypeRef
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitIntersectionTypeRef_Heir_AST_IntersectionType_
  - name: (
  - uid: Heir.AST.IntersectionType
    name: IntersectionType
    href: Heir.AST.IntersectionType.html
  - name: )
- uid: Heir.AST.IntersectionType
  commentId: T:Heir.AST.IntersectionType
  parent: Heir.AST
  href: Heir.AST.IntersectionType.html
  name: IntersectionType
  nameWithType: IntersectionType
  fullName: Heir.AST.IntersectionType
- uid: Heir.AST.Abstract.Expression.Visitor`1.VisitIntersectionTypeRef(Heir.AST.IntersectionType)
  commentId: M:Heir.AST.Abstract.Expression.Visitor`1.VisitIntersectionTypeRef(Heir.AST.IntersectionType)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitIntersectionTypeRef_Heir_AST_IntersectionType_
  name: VisitIntersectionTypeRef(IntersectionType)
  nameWithType: Expression.Visitor<R>.VisitIntersectionTypeRef(IntersectionType)
  fullName: Heir.AST.Abstract.Expression.Visitor<R>.VisitIntersectionTypeRef(Heir.AST.IntersectionType)
  nameWithType.vb: Expression.Visitor(Of R).VisitIntersectionTypeRef(IntersectionType)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of R).VisitIntersectionTypeRef(Heir.AST.IntersectionType)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitIntersectionTypeRef(Heir.AST.IntersectionType)
    name: VisitIntersectionTypeRef
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitIntersectionTypeRef_Heir_AST_IntersectionType_
  - name: (
  - uid: Heir.AST.IntersectionType
    name: IntersectionType
    href: Heir.AST.IntersectionType.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitIntersectionTypeRef(Heir.AST.IntersectionType)
    name: VisitIntersectionTypeRef
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitIntersectionTypeRef_Heir_AST_IntersectionType_
  - name: (
  - uid: Heir.AST.IntersectionType
    name: IntersectionType
    href: Heir.AST.IntersectionType.html
  - name: )
- uid: Heir.Binder.VisitParenthesizedExpression*
  commentId: Overload:Heir.Binder.VisitParenthesizedExpression
  href: Heir.Binder.html#Heir_Binder_VisitParenthesizedExpression_Heir_AST_Parenthesized_
  name: VisitParenthesizedExpression
  nameWithType: Binder.VisitParenthesizedExpression
  fullName: Heir.Binder.VisitParenthesizedExpression
- uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitParenthesizedExpression(Heir.AST.Parenthesized)
  commentId: M:Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitParenthesizedExpression(Heir.AST.Parenthesized)
  parent: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}
  definition: Heir.AST.Abstract.Expression.Visitor`1.VisitParenthesizedExpression(Heir.AST.Parenthesized)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitParenthesizedExpression_Heir_AST_Parenthesized_
  name: VisitParenthesizedExpression(Parenthesized)
  nameWithType: Expression.Visitor<BoundExpression>.VisitParenthesizedExpression(Parenthesized)
  fullName: Heir.AST.Abstract.Expression.Visitor<Heir.BoundAST.BoundExpression>.VisitParenthesizedExpression(Heir.AST.Parenthesized)
  nameWithType.vb: Expression.Visitor(Of BoundExpression).VisitParenthesizedExpression(Parenthesized)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of Heir.BoundAST.BoundExpression).VisitParenthesizedExpression(Heir.AST.Parenthesized)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitParenthesizedExpression(Heir.AST.Parenthesized)
    name: VisitParenthesizedExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitParenthesizedExpression_Heir_AST_Parenthesized_
  - name: (
  - uid: Heir.AST.Parenthesized
    name: Parenthesized
    href: Heir.AST.Parenthesized.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor{Heir.BoundAST.BoundExpression}.VisitParenthesizedExpression(Heir.AST.Parenthesized)
    name: VisitParenthesizedExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitParenthesizedExpression_Heir_AST_Parenthesized_
  - name: (
  - uid: Heir.AST.Parenthesized
    name: Parenthesized
    href: Heir.AST.Parenthesized.html
  - name: )
- uid: Heir.AST.Parenthesized
  commentId: T:Heir.AST.Parenthesized
  parent: Heir.AST
  href: Heir.AST.Parenthesized.html
  name: Parenthesized
  nameWithType: Parenthesized
  fullName: Heir.AST.Parenthesized
- uid: Heir.AST.Abstract.Expression.Visitor`1.VisitParenthesizedExpression(Heir.AST.Parenthesized)
  commentId: M:Heir.AST.Abstract.Expression.Visitor`1.VisitParenthesizedExpression(Heir.AST.Parenthesized)
  href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitParenthesizedExpression_Heir_AST_Parenthesized_
  name: VisitParenthesizedExpression(Parenthesized)
  nameWithType: Expression.Visitor<R>.VisitParenthesizedExpression(Parenthesized)
  fullName: Heir.AST.Abstract.Expression.Visitor<R>.VisitParenthesizedExpression(Heir.AST.Parenthesized)
  nameWithType.vb: Expression.Visitor(Of R).VisitParenthesizedExpression(Parenthesized)
  fullName.vb: Heir.AST.Abstract.Expression.Visitor(Of R).VisitParenthesizedExpression(Heir.AST.Parenthesized)
  spec.csharp:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitParenthesizedExpression(Heir.AST.Parenthesized)
    name: VisitParenthesizedExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitParenthesizedExpression_Heir_AST_Parenthesized_
  - name: (
  - uid: Heir.AST.Parenthesized
    name: Parenthesized
    href: Heir.AST.Parenthesized.html
  - name: )
  spec.vb:
  - uid: Heir.AST.Abstract.Expression.Visitor`1.VisitParenthesizedExpression(Heir.AST.Parenthesized)
    name: VisitParenthesizedExpression
    href: Heir.AST.Abstract.Expression.Visitor-1.html#Heir_AST_Abstract_Expression_Visitor_1_VisitParenthesizedExpression_Heir_AST_Parenthesized_
  - name: (
  - uid: Heir.AST.Parenthesized
    name: Parenthesized
    href: Heir.AST.Parenthesized.html
  - name: )
