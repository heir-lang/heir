### YamlMime:ManagedReference
items:
- uid: Heir.Tests.BytecodeGeneratorTest
  commentId: T:Heir.Tests.BytecodeGeneratorTest
  id: BytecodeGeneratorTest
  parent: Heir.Tests
  children:
  - Heir.Tests.BytecodeGeneratorTest.GeneratesPushObject_ForObjectLiterals
  - Heir.Tests.BytecodeGeneratorTest.GeneratesPush_ForLiterals
  - Heir.Tests.BytecodeGeneratorTest.Generates_Assignment
  - Heir.Tests.BytecodeGeneratorTest.Generates_BinaryCompoundAssignment(System.String,System.Object,Heir.CodeGeneration.OpCode)
  - Heir.Tests.BytecodeGeneratorTest.Generates_BinaryOperations(System.String,System.Object)
  - Heir.Tests.BytecodeGeneratorTest.Generates_Exit
  - Heir.Tests.BytecodeGeneratorTest.Generates_FunctionDeclarations(System.String)
  - Heir.Tests.BytecodeGeneratorTest.Generates_IfStatement
  - Heir.Tests.BytecodeGeneratorTest.Generates_Index(System.String)
  - Heir.Tests.BytecodeGeneratorTest.Generates_Invocation
  - Heir.Tests.BytecodeGeneratorTest.Generates_Return
  - Heir.Tests.BytecodeGeneratorTest.Generates_UnaryCompoundAssignment(System.String,Heir.CodeGeneration.OpCode)
  - Heir.Tests.BytecodeGeneratorTest.Generates_UnaryOperations(System.String,System.Object)
  - Heir.Tests.BytecodeGeneratorTest.Generates_VariableDeclarations(System.String,System.String,System.Object,Heir.CodeGeneration.OpCode)
  langs:
  - csharp
  - vb
  name: BytecodeGeneratorTest
  nameWithType: BytecodeGeneratorTest
  fullName: Heir.Tests.BytecodeGeneratorTest
  type: Class
  source:
    remote:
      path: Heir.Tests/BytecodeGeneratorTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: BytecodeGeneratorTest
    path: Heir.Tests/BytecodeGeneratorTest.cs
    startLine: 7
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: public class BytecodeGeneratorTest
    content.vb: Public Class BytecodeGeneratorTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_Exit
  commentId: M:Heir.Tests.BytecodeGeneratorTest.Generates_Exit
  id: Generates_Exit
  parent: Heir.Tests.BytecodeGeneratorTest
  langs:
  - csharp
  - vb
  name: Generates_Exit()
  nameWithType: BytecodeGeneratorTest.Generates_Exit()
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_Exit()
  type: Method
  source:
    remote:
      path: Heir.Tests/BytecodeGeneratorTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Generates_Exit
    path: Heir.Tests/BytecodeGeneratorTest.cs
    startLine: 9
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Fact]

      public void Generates_Exit()
    content.vb: >-
      <Fact>

      Public Sub Generates_Exit()
  overload: Heir.Tests.BytecodeGeneratorTest.Generates_Exit*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_Index(System.String)
  commentId: M:Heir.Tests.BytecodeGeneratorTest.Generates_Index(System.String)
  id: Generates_Index(System.String)
  parent: Heir.Tests.BytecodeGeneratorTest
  langs:
  - csharp
  - vb
  name: Generates_Index(string)
  nameWithType: BytecodeGeneratorTest.Generates_Index(string)
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_Index(string)
  type: Method
  source:
    remote:
      path: Heir.Tests/BytecodeGeneratorTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Generates_Index
    path: Heir.Tests/BytecodeGeneratorTest.cs
    startLine: 18
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "abc[\"buh\"]" })]

      [InlineData(new object[] { "abc.buh" })]

      public void Generates_Index(string indexExpression)
    parameters:
    - id: indexExpression
      type: System.String
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "abc[""buh""]" })>

      <InlineData(New Object() { "abc.buh" })>

      Public Sub Generates_Index(indexExpression As String)
  overload: Heir.Tests.BytecodeGeneratorTest.Generates_Index*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: BytecodeGeneratorTest.Generates_Index(String)
  fullName.vb: Heir.Tests.BytecodeGeneratorTest.Generates_Index(String)
  name.vb: Generates_Index(String)
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_IfStatement
  commentId: M:Heir.Tests.BytecodeGeneratorTest.Generates_IfStatement
  id: Generates_IfStatement
  parent: Heir.Tests.BytecodeGeneratorTest
  langs:
  - csharp
  - vb
  name: Generates_IfStatement()
  nameWithType: BytecodeGeneratorTest.Generates_IfStatement()
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_IfStatement()
  type: Method
  source:
    remote:
      path: Heir.Tests/BytecodeGeneratorTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Generates_IfStatement
    path: Heir.Tests/BytecodeGeneratorTest.cs
    startLine: 38
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Fact]

      public void Generates_IfStatement()
    content.vb: >-
      <Fact>

      Public Sub Generates_IfStatement()
  overload: Heir.Tests.BytecodeGeneratorTest.Generates_IfStatement*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_Return
  commentId: M:Heir.Tests.BytecodeGeneratorTest.Generates_Return
  id: Generates_Return
  parent: Heir.Tests.BytecodeGeneratorTest
  langs:
  - csharp
  - vb
  name: Generates_Return()
  nameWithType: BytecodeGeneratorTest.Generates_Return()
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_Return()
  type: Method
  source:
    remote:
      path: Heir.Tests/BytecodeGeneratorTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Generates_Return
    path: Heir.Tests/BytecodeGeneratorTest.cs
    startLine: 91
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Fact]

      public void Generates_Return()
    content.vb: >-
      <Fact>

      Public Sub Generates_Return()
  overload: Heir.Tests.BytecodeGeneratorTest.Generates_Return*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Heir.Tests.BytecodeGeneratorTest.GeneratesPushObject_ForObjectLiterals
  commentId: M:Heir.Tests.BytecodeGeneratorTest.GeneratesPushObject_ForObjectLiterals
  id: GeneratesPushObject_ForObjectLiterals
  parent: Heir.Tests.BytecodeGeneratorTest
  langs:
  - csharp
  - vb
  name: GeneratesPushObject_ForObjectLiterals()
  nameWithType: BytecodeGeneratorTest.GeneratesPushObject_ForObjectLiterals()
  fullName: Heir.Tests.BytecodeGeneratorTest.GeneratesPushObject_ForObjectLiterals()
  type: Method
  source:
    remote:
      path: Heir.Tests/BytecodeGeneratorTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: GeneratesPushObject_ForObjectLiterals
    path: Heir.Tests/BytecodeGeneratorTest.cs
    startLine: 100
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Fact]

      public void GeneratesPushObject_ForObjectLiterals()
    content.vb: >-
      <Fact>

      Public Sub GeneratesPushObject_ForObjectLiterals()
  overload: Heir.Tests.BytecodeGeneratorTest.GeneratesPushObject_ForObjectLiterals*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Heir.Tests.BytecodeGeneratorTest.GeneratesPush_ForLiterals
  commentId: M:Heir.Tests.BytecodeGeneratorTest.GeneratesPush_ForLiterals
  id: GeneratesPush_ForLiterals
  parent: Heir.Tests.BytecodeGeneratorTest
  langs:
  - csharp
  - vb
  name: GeneratesPush_ForLiterals()
  nameWithType: BytecodeGeneratorTest.GeneratesPush_ForLiterals()
  fullName: Heir.Tests.BytecodeGeneratorTest.GeneratesPush_ForLiterals()
  type: Method
  source:
    remote:
      path: Heir.Tests/BytecodeGeneratorTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: GeneratesPush_ForLiterals
    path: Heir.Tests/BytecodeGeneratorTest.cs
    startLine: 117
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Fact]

      public void GeneratesPush_ForLiterals()
    content.vb: >-
      <Fact>

      Public Sub GeneratesPush_ForLiterals()
  overload: Heir.Tests.BytecodeGeneratorTest.GeneratesPush_ForLiterals*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_BinaryOperations(System.String,System.Object)
  commentId: M:Heir.Tests.BytecodeGeneratorTest.Generates_BinaryOperations(System.String,System.Object)
  id: Generates_BinaryOperations(System.String,System.Object)
  parent: Heir.Tests.BytecodeGeneratorTest
  langs:
  - csharp
  - vb
  name: Generates_BinaryOperations(string, object?)
  nameWithType: BytecodeGeneratorTest.Generates_BinaryOperations(string, object?)
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_BinaryOperations(string, object?)
  type: Method
  source:
    remote:
      path: Heir.Tests/BytecodeGeneratorTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Generates_BinaryOperations
    path: Heir.Tests/BytecodeGeneratorTest.cs
    startLine: 140
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "1 + 2", 3 })]

      [InlineData(new object[] { "3 + 4 + 5", 12 })]

      [InlineData(new object[] { "7 // 3", 2 })]

      [InlineData(new object[] { "1 > 2", false })]

      [InlineData(new object[] { "1 >= 2", false })]

      [InlineData(new object[] { "1 < 2", true })]

      [InlineData(new object[] { "1 <= 2", true })]

      [InlineData(new object[] { "2 <= 2", true })]

      [InlineData(new object[] { "2 > 1", true })]

      [InlineData(new object[] { "2 >= 1", true })]

      [InlineData(new object[] { "'a' == 'b'", false })]

      [InlineData(new object[] { "'a' != 'b'", true })]

      [InlineData(new object[] { "'a' + 'b'", "ab" })]

      [InlineData(new object[] { "true && false", false })]

      [InlineData(new object[] { "14 << 1", 28 })]

      public void Generates_BinaryOperations(string input, object? resultValue)
    parameters:
    - id: input
      type: System.String
    - id: resultValue
      type: System.Object
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "1 + 2", 3 })>

      <InlineData(New Object() { "3 + 4 + 5", 12 })>

      <InlineData(New Object() { "7 // 3", 2 })>

      <InlineData(New Object() { "1 > 2", False })>

      <InlineData(New Object() { "1 >= 2", False })>

      <InlineData(New Object() { "1 < 2", True })>

      <InlineData(New Object() { "1 <= 2", True })>

      <InlineData(New Object() { "2 <= 2", True })>

      <InlineData(New Object() { "2 > 1", True })>

      <InlineData(New Object() { "2 >= 1", True })>

      <InlineData(New Object() { "'a' == 'b'", False })>

      <InlineData(New Object() { "'a' != 'b'", True })>

      <InlineData(New Object() { "'a' + 'b'", "ab" })>

      <InlineData(New Object() { "true && false", False })>

      <InlineData(New Object() { "14 << 1", 28 })>

      Public Sub Generates_BinaryOperations(input As String, resultValue As Object)
  overload: Heir.Tests.BytecodeGeneratorTest.Generates_BinaryOperations*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: BytecodeGeneratorTest.Generates_BinaryOperations(String, Object)
  fullName.vb: Heir.Tests.BytecodeGeneratorTest.Generates_BinaryOperations(String, Object)
  name.vb: Generates_BinaryOperations(String, Object)
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_Assignment
  commentId: M:Heir.Tests.BytecodeGeneratorTest.Generates_Assignment
  id: Generates_Assignment
  parent: Heir.Tests.BytecodeGeneratorTest
  langs:
  - csharp
  - vb
  name: Generates_Assignment()
  nameWithType: BytecodeGeneratorTest.Generates_Assignment()
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_Assignment()
  type: Method
  source:
    remote:
      path: Heir.Tests/BytecodeGeneratorTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Generates_Assignment
    path: Heir.Tests/BytecodeGeneratorTest.cs
    startLine: 164
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Fact]

      public void Generates_Assignment()
    content.vb: >-
      <Fact>

      Public Sub Generates_Assignment()
  overload: Heir.Tests.BytecodeGeneratorTest.Generates_Assignment*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_BinaryCompoundAssignment(System.String,System.Object,Heir.CodeGeneration.OpCode)
  commentId: M:Heir.Tests.BytecodeGeneratorTest.Generates_BinaryCompoundAssignment(System.String,System.Object,Heir.CodeGeneration.OpCode)
  id: Generates_BinaryCompoundAssignment(System.String,System.Object,Heir.CodeGeneration.OpCode)
  parent: Heir.Tests.BytecodeGeneratorTest
  langs:
  - csharp
  - vb
  name: Generates_BinaryCompoundAssignment(string, object?, OpCode)
  nameWithType: BytecodeGeneratorTest.Generates_BinaryCompoundAssignment(string, object?, OpCode)
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_BinaryCompoundAssignment(string, object?, Heir.CodeGeneration.OpCode)
  type: Method
  source:
    remote:
      path: Heir.Tests/BytecodeGeneratorTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Generates_BinaryCompoundAssignment
    path: Heir.Tests/BytecodeGeneratorTest.cs
    startLine: 179
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "let mut a = 1; a += 1", 1, OpCode.ADD })]

      [InlineData(new object[] { "let mut a = 1; a //= 2", 2, OpCode.IDIV })]

      public void Generates_BinaryCompoundAssignment(string input, object? right, OpCode opCode)
    parameters:
    - id: input
      type: System.String
    - id: right
      type: System.Object
    - id: opCode
      type: Heir.CodeGeneration.OpCode
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "let mut a = 1; a += 1", 1, OpCode.ADD })>

      <InlineData(New Object() { "let mut a = 1; a //= 2", 2, OpCode.IDIV })>

      Public Sub Generates_BinaryCompoundAssignment(input As String, right As Object, opCode As OpCode)
  overload: Heir.Tests.BytecodeGeneratorTest.Generates_BinaryCompoundAssignment*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: BytecodeGeneratorTest.Generates_BinaryCompoundAssignment(String, Object, OpCode)
  fullName.vb: Heir.Tests.BytecodeGeneratorTest.Generates_BinaryCompoundAssignment(String, Object, Heir.CodeGeneration.OpCode)
  name.vb: Generates_BinaryCompoundAssignment(String, Object, OpCode)
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_UnaryOperations(System.String,System.Object)
  commentId: M:Heir.Tests.BytecodeGeneratorTest.Generates_UnaryOperations(System.String,System.Object)
  id: Generates_UnaryOperations(System.String,System.Object)
  parent: Heir.Tests.BytecodeGeneratorTest
  langs:
  - csharp
  - vb
  name: Generates_UnaryOperations(string, object?)
  nameWithType: BytecodeGeneratorTest.Generates_UnaryOperations(string, object?)
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_UnaryOperations(string, object?)
  type: Method
  source:
    remote:
      path: Heir.Tests/BytecodeGeneratorTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Generates_UnaryOperations
    path: Heir.Tests/BytecodeGeneratorTest.cs
    startLine: 205
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "!false", true })]

      [InlineData(new object[] { "!true", false })]

      [InlineData(new object[] { "!!true", true })]

      [InlineData(new object[] { "!!!true", false })]

      [InlineData(new object[] { "!!!!true", true })]

      [InlineData(new object[] { "~3", -4 })]

      [InlineData(new object[] { "-6", -6 })]

      public void Generates_UnaryOperations(string input, object? resultValue)
    parameters:
    - id: input
      type: System.String
    - id: resultValue
      type: System.Object
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "!false", True })>

      <InlineData(New Object() { "!true", False })>

      <InlineData(New Object() { "!!true", True })>

      <InlineData(New Object() { "!!!true", False })>

      <InlineData(New Object() { "!!!!true", True })>

      <InlineData(New Object() { "~3", -4 })>

      <InlineData(New Object() { "-6", -6 })>

      Public Sub Generates_UnaryOperations(input As String, resultValue As Object)
  overload: Heir.Tests.BytecodeGeneratorTest.Generates_UnaryOperations*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: BytecodeGeneratorTest.Generates_UnaryOperations(String, Object)
  fullName.vb: Heir.Tests.BytecodeGeneratorTest.Generates_UnaryOperations(String, Object)
  name.vb: Generates_UnaryOperations(String, Object)
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_UnaryCompoundAssignment(System.String,Heir.CodeGeneration.OpCode)
  commentId: M:Heir.Tests.BytecodeGeneratorTest.Generates_UnaryCompoundAssignment(System.String,Heir.CodeGeneration.OpCode)
  id: Generates_UnaryCompoundAssignment(System.String,Heir.CodeGeneration.OpCode)
  parent: Heir.Tests.BytecodeGeneratorTest
  langs:
  - csharp
  - vb
  name: Generates_UnaryCompoundAssignment(string, OpCode)
  nameWithType: BytecodeGeneratorTest.Generates_UnaryCompoundAssignment(string, OpCode)
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_UnaryCompoundAssignment(string, Heir.CodeGeneration.OpCode)
  type: Method
  source:
    remote:
      path: Heir.Tests/BytecodeGeneratorTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Generates_UnaryCompoundAssignment
    path: Heir.Tests/BytecodeGeneratorTest.cs
    startLine: 221
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "let mut a = 1; ++a", OpCode.ADD })]

      [InlineData(new object[] { "let mut a = 1; --a", OpCode.SUB })]

      public void Generates_UnaryCompoundAssignment(string input, OpCode opCode)
    parameters:
    - id: input
      type: System.String
    - id: opCode
      type: Heir.CodeGeneration.OpCode
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "let mut a = 1; ++a", OpCode.ADD })>

      <InlineData(New Object() { "let mut a = 1; --a", OpCode.SUB })>

      Public Sub Generates_UnaryCompoundAssignment(input As String, opCode As OpCode)
  overload: Heir.Tests.BytecodeGeneratorTest.Generates_UnaryCompoundAssignment*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: BytecodeGeneratorTest.Generates_UnaryCompoundAssignment(String, OpCode)
  fullName.vb: Heir.Tests.BytecodeGeneratorTest.Generates_UnaryCompoundAssignment(String, Heir.CodeGeneration.OpCode)
  name.vb: Generates_UnaryCompoundAssignment(String, OpCode)
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_VariableDeclarations(System.String,System.String,System.Object,Heir.CodeGeneration.OpCode)
  commentId: M:Heir.Tests.BytecodeGeneratorTest.Generates_VariableDeclarations(System.String,System.String,System.Object,Heir.CodeGeneration.OpCode)
  id: Generates_VariableDeclarations(System.String,System.String,System.Object,Heir.CodeGeneration.OpCode)
  parent: Heir.Tests.BytecodeGeneratorTest
  langs:
  - csharp
  - vb
  name: Generates_VariableDeclarations(string, string, object?, OpCode)
  nameWithType: BytecodeGeneratorTest.Generates_VariableDeclarations(string, string, object?, OpCode)
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_VariableDeclarations(string, string, object?, Heir.CodeGeneration.OpCode)
  type: Method
  source:
    remote:
      path: Heir.Tests/BytecodeGeneratorTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Generates_VariableDeclarations
    path: Heir.Tests/BytecodeGeneratorTest.cs
    startLine: 247
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "let a = 1;", "a", 1, OpCode.STORE })]

      [InlineData(new object[] { "let mut b = 2;", "b", 2, OpCode.STORE })]

      public void Generates_VariableDeclarations(string input, string name, object? value, OpCode opCode)
    parameters:
    - id: input
      type: System.String
    - id: name
      type: System.String
    - id: value
      type: System.Object
    - id: opCode
      type: Heir.CodeGeneration.OpCode
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "let a = 1;", "a", 1, OpCode.STORE })>

      <InlineData(New Object() { "let mut b = 2;", "b", 2, OpCode.STORE })>

      Public Sub Generates_VariableDeclarations(input As String, name As String, value As Object, opCode As OpCode)
  overload: Heir.Tests.BytecodeGeneratorTest.Generates_VariableDeclarations*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: BytecodeGeneratorTest.Generates_VariableDeclarations(String, String, Object, OpCode)
  fullName.vb: Heir.Tests.BytecodeGeneratorTest.Generates_VariableDeclarations(String, String, Object, Heir.CodeGeneration.OpCode)
  name.vb: Generates_VariableDeclarations(String, String, Object, OpCode)
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_FunctionDeclarations(System.String)
  commentId: M:Heir.Tests.BytecodeGeneratorTest.Generates_FunctionDeclarations(System.String)
  id: Generates_FunctionDeclarations(System.String)
  parent: Heir.Tests.BytecodeGeneratorTest
  langs:
  - csharp
  - vb
  name: Generates_FunctionDeclarations(string)
  nameWithType: BytecodeGeneratorTest.Generates_FunctionDeclarations(string)
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_FunctionDeclarations(string)
  type: Method
  source:
    remote:
      path: Heir.Tests/BytecodeGeneratorTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Generates_FunctionDeclarations
    path: Heir.Tests/BytecodeGeneratorTest.cs
    startLine: 264
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "fn abc -> 420;" })]

      [InlineData(new object[] { "fn abc(x: int): int -> 123 + x;" })]

      public void Generates_FunctionDeclarations(string input)
    parameters:
    - id: input
      type: System.String
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "fn abc -> 420;" })>

      <InlineData(New Object() { "fn abc(x: int): int -> 123 + x;" })>

      Public Sub Generates_FunctionDeclarations(input As String)
  overload: Heir.Tests.BytecodeGeneratorTest.Generates_FunctionDeclarations*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: BytecodeGeneratorTest.Generates_FunctionDeclarations(String)
  fullName.vb: Heir.Tests.BytecodeGeneratorTest.Generates_FunctionDeclarations(String)
  name.vb: Generates_FunctionDeclarations(String)
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_Invocation
  commentId: M:Heir.Tests.BytecodeGeneratorTest.Generates_Invocation
  id: Generates_Invocation
  parent: Heir.Tests.BytecodeGeneratorTest
  langs:
  - csharp
  - vb
  name: Generates_Invocation()
  nameWithType: BytecodeGeneratorTest.Generates_Invocation()
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_Invocation()
  type: Method
  source:
    remote:
      path: Heir.Tests/BytecodeGeneratorTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Generates_Invocation
    path: Heir.Tests/BytecodeGeneratorTest.cs
    startLine: 282
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Fact]

      public void Generates_Invocation()
    content.vb: >-
      <Fact>

      Public Sub Generates_Invocation()
  overload: Heir.Tests.BytecodeGeneratorTest.Generates_Invocation*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
references:
- uid: Heir.Tests
  commentId: N:Heir.Tests
  href: Heir.html
  name: Heir.Tests
  nameWithType: Heir.Tests
  fullName: Heir.Tests
  spec.csharp:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.Tests
    name: Tests
    href: Heir.Tests.html
  spec.vb:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.Tests
    name: Tests
    href: Heir.Tests.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_Exit*
  commentId: Overload:Heir.Tests.BytecodeGeneratorTest.Generates_Exit
  href: Heir.Tests.BytecodeGeneratorTest.html#Heir_Tests_BytecodeGeneratorTest_Generates_Exit
  name: Generates_Exit
  nameWithType: BytecodeGeneratorTest.Generates_Exit
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_Exit
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_Index*
  commentId: Overload:Heir.Tests.BytecodeGeneratorTest.Generates_Index
  href: Heir.Tests.BytecodeGeneratorTest.html#Heir_Tests_BytecodeGeneratorTest_Generates_Index_System_String_
  name: Generates_Index
  nameWithType: BytecodeGeneratorTest.Generates_Index
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_Index
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_IfStatement*
  commentId: Overload:Heir.Tests.BytecodeGeneratorTest.Generates_IfStatement
  href: Heir.Tests.BytecodeGeneratorTest.html#Heir_Tests_BytecodeGeneratorTest_Generates_IfStatement
  name: Generates_IfStatement
  nameWithType: BytecodeGeneratorTest.Generates_IfStatement
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_IfStatement
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_Return*
  commentId: Overload:Heir.Tests.BytecodeGeneratorTest.Generates_Return
  href: Heir.Tests.BytecodeGeneratorTest.html#Heir_Tests_BytecodeGeneratorTest_Generates_Return
  name: Generates_Return
  nameWithType: BytecodeGeneratorTest.Generates_Return
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_Return
- uid: Heir.Tests.BytecodeGeneratorTest.GeneratesPushObject_ForObjectLiterals*
  commentId: Overload:Heir.Tests.BytecodeGeneratorTest.GeneratesPushObject_ForObjectLiterals
  href: Heir.Tests.BytecodeGeneratorTest.html#Heir_Tests_BytecodeGeneratorTest_GeneratesPushObject_ForObjectLiterals
  name: GeneratesPushObject_ForObjectLiterals
  nameWithType: BytecodeGeneratorTest.GeneratesPushObject_ForObjectLiterals
  fullName: Heir.Tests.BytecodeGeneratorTest.GeneratesPushObject_ForObjectLiterals
- uid: Heir.Tests.BytecodeGeneratorTest.GeneratesPush_ForLiterals*
  commentId: Overload:Heir.Tests.BytecodeGeneratorTest.GeneratesPush_ForLiterals
  href: Heir.Tests.BytecodeGeneratorTest.html#Heir_Tests_BytecodeGeneratorTest_GeneratesPush_ForLiterals
  name: GeneratesPush_ForLiterals
  nameWithType: BytecodeGeneratorTest.GeneratesPush_ForLiterals
  fullName: Heir.Tests.BytecodeGeneratorTest.GeneratesPush_ForLiterals
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_BinaryOperations*
  commentId: Overload:Heir.Tests.BytecodeGeneratorTest.Generates_BinaryOperations
  href: Heir.Tests.BytecodeGeneratorTest.html#Heir_Tests_BytecodeGeneratorTest_Generates_BinaryOperations_System_String_System_Object_
  name: Generates_BinaryOperations
  nameWithType: BytecodeGeneratorTest.Generates_BinaryOperations
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_BinaryOperations
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_Assignment*
  commentId: Overload:Heir.Tests.BytecodeGeneratorTest.Generates_Assignment
  href: Heir.Tests.BytecodeGeneratorTest.html#Heir_Tests_BytecodeGeneratorTest_Generates_Assignment
  name: Generates_Assignment
  nameWithType: BytecodeGeneratorTest.Generates_Assignment
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_Assignment
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_BinaryCompoundAssignment*
  commentId: Overload:Heir.Tests.BytecodeGeneratorTest.Generates_BinaryCompoundAssignment
  href: Heir.Tests.BytecodeGeneratorTest.html#Heir_Tests_BytecodeGeneratorTest_Generates_BinaryCompoundAssignment_System_String_System_Object_Heir_CodeGeneration_OpCode_
  name: Generates_BinaryCompoundAssignment
  nameWithType: BytecodeGeneratorTest.Generates_BinaryCompoundAssignment
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_BinaryCompoundAssignment
- uid: Heir.CodeGeneration.OpCode
  commentId: T:Heir.CodeGeneration.OpCode
  parent: Heir.CodeGeneration
  href: Heir.CodeGeneration.OpCode.html
  name: OpCode
  nameWithType: OpCode
  fullName: Heir.CodeGeneration.OpCode
- uid: Heir.CodeGeneration
  commentId: N:Heir.CodeGeneration
  href: Heir.html
  name: Heir.CodeGeneration
  nameWithType: Heir.CodeGeneration
  fullName: Heir.CodeGeneration
  spec.csharp:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.CodeGeneration
    name: CodeGeneration
    href: Heir.CodeGeneration.html
  spec.vb:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.CodeGeneration
    name: CodeGeneration
    href: Heir.CodeGeneration.html
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_UnaryOperations*
  commentId: Overload:Heir.Tests.BytecodeGeneratorTest.Generates_UnaryOperations
  href: Heir.Tests.BytecodeGeneratorTest.html#Heir_Tests_BytecodeGeneratorTest_Generates_UnaryOperations_System_String_System_Object_
  name: Generates_UnaryOperations
  nameWithType: BytecodeGeneratorTest.Generates_UnaryOperations
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_UnaryOperations
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_UnaryCompoundAssignment*
  commentId: Overload:Heir.Tests.BytecodeGeneratorTest.Generates_UnaryCompoundAssignment
  href: Heir.Tests.BytecodeGeneratorTest.html#Heir_Tests_BytecodeGeneratorTest_Generates_UnaryCompoundAssignment_System_String_Heir_CodeGeneration_OpCode_
  name: Generates_UnaryCompoundAssignment
  nameWithType: BytecodeGeneratorTest.Generates_UnaryCompoundAssignment
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_UnaryCompoundAssignment
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_VariableDeclarations*
  commentId: Overload:Heir.Tests.BytecodeGeneratorTest.Generates_VariableDeclarations
  href: Heir.Tests.BytecodeGeneratorTest.html#Heir_Tests_BytecodeGeneratorTest_Generates_VariableDeclarations_System_String_System_String_System_Object_Heir_CodeGeneration_OpCode_
  name: Generates_VariableDeclarations
  nameWithType: BytecodeGeneratorTest.Generates_VariableDeclarations
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_VariableDeclarations
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_FunctionDeclarations*
  commentId: Overload:Heir.Tests.BytecodeGeneratorTest.Generates_FunctionDeclarations
  href: Heir.Tests.BytecodeGeneratorTest.html#Heir_Tests_BytecodeGeneratorTest_Generates_FunctionDeclarations_System_String_
  name: Generates_FunctionDeclarations
  nameWithType: BytecodeGeneratorTest.Generates_FunctionDeclarations
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_FunctionDeclarations
- uid: Heir.Tests.BytecodeGeneratorTest.Generates_Invocation*
  commentId: Overload:Heir.Tests.BytecodeGeneratorTest.Generates_Invocation
  href: Heir.Tests.BytecodeGeneratorTest.html#Heir_Tests_BytecodeGeneratorTest_Generates_Invocation
  name: Generates_Invocation
  nameWithType: BytecodeGeneratorTest.Generates_Invocation
  fullName: Heir.Tests.BytecodeGeneratorTest.Generates_Invocation
