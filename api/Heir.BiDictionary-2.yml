### YamlMime:ManagedReference
items:
- uid: Heir.BiDictionary`2
  commentId: T:Heir.BiDictionary`2
  id: BiDictionary`2
  parent: Heir
  children:
  - Heir.BiDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})
  - Heir.BiDictionary`2.Contains(`0)
  - Heir.BiDictionary`2.Contains(`1)
  - Heir.BiDictionary`2.Count
  - Heir.BiDictionary`2.Forward
  - Heir.BiDictionary`2.GetKey(`1)
  - Heir.BiDictionary`2.GetValue(`0)
  - Heir.BiDictionary`2.Reverse
  - Heir.BiDictionary`2.TryGetKey(`1)
  - Heir.BiDictionary`2.TryGetValue(`0)
  langs:
  - csharp
  - vb
  name: BiDictionary<TKey, TValue>
  nameWithType: BiDictionary<TKey, TValue>
  fullName: Heir.BiDictionary<TKey, TValue>
  type: Class
  source:
    remote:
      path: Heir/BiDictionary.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: BiDictionary
    path: Heir/BiDictionary.cs
    startLine: 2
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: 'public sealed class BiDictionary<TKey, TValue> where TKey : notnull where TValue : notnull'
    typeParameters:
    - id: TKey
    - id: TValue
    content.vb: Public NotInheritable Class BiDictionary(Of TKey, TValue)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: BiDictionary(Of TKey, TValue)
  fullName.vb: Heir.BiDictionary(Of TKey, TValue)
  name.vb: BiDictionary(Of TKey, TValue)
- uid: Heir.BiDictionary`2.Forward
  commentId: F:Heir.BiDictionary`2.Forward
  id: Forward
  parent: Heir.BiDictionary`2
  langs:
  - csharp
  - vb
  name: Forward
  nameWithType: BiDictionary<TKey, TValue>.Forward
  fullName: Heir.BiDictionary<TKey, TValue>.Forward
  type: Field
  source:
    remote:
      path: Heir/BiDictionary.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Forward
    path: Heir/BiDictionary.cs
    startLine: 6
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public readonly Dictionary<TKey, TValue> Forward
    return:
      type: System.Collections.Generic.Dictionary{{TKey},{TValue}}
    content.vb: Public ReadOnly Forward As Dictionary(Of TKey, TValue)
  nameWithType.vb: BiDictionary(Of TKey, TValue).Forward
  fullName.vb: Heir.BiDictionary(Of TKey, TValue).Forward
- uid: Heir.BiDictionary`2.Reverse
  commentId: F:Heir.BiDictionary`2.Reverse
  id: Reverse
  parent: Heir.BiDictionary`2
  langs:
  - csharp
  - vb
  name: Reverse
  nameWithType: BiDictionary<TKey, TValue>.Reverse
  fullName: Heir.BiDictionary<TKey, TValue>.Reverse
  type: Field
  source:
    remote:
      path: Heir/BiDictionary.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Reverse
    path: Heir/BiDictionary.cs
    startLine: 7
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public readonly Dictionary<TValue, TKey> Reverse
    return:
      type: System.Collections.Generic.Dictionary{{TValue},{TKey}}
    content.vb: Public ReadOnly Reverse As Dictionary(Of TValue, TKey)
  nameWithType.vb: BiDictionary(Of TKey, TValue).Reverse
  fullName.vb: Heir.BiDictionary(Of TKey, TValue).Reverse
- uid: Heir.BiDictionary`2.Count
  commentId: P:Heir.BiDictionary`2.Count
  id: Count
  parent: Heir.BiDictionary`2
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: BiDictionary<TKey, TValue>.Count
  fullName: Heir.BiDictionary<TKey, TValue>.Count
  type: Property
  source:
    remote:
      path: Heir/BiDictionary.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Count
    path: Heir/BiDictionary.cs
    startLine: 8
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Heir.BiDictionary`2.Count*
  nameWithType.vb: BiDictionary(Of TKey, TValue).Count
  fullName.vb: Heir.BiDictionary(Of TKey, TValue).Count
- uid: Heir.BiDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})
  commentId: M:Heir.BiDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})
  id: '#ctor(System.Collections.Generic.IDictionary{`0,`1})'
  parent: Heir.BiDictionary`2
  langs:
  - csharp
  - vb
  name: BiDictionary(IDictionary<TKey, TValue>)
  nameWithType: BiDictionary<TKey, TValue>.BiDictionary(IDictionary<TKey, TValue>)
  fullName: Heir.BiDictionary<TKey, TValue>.BiDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)
  type: Constructor
  source:
    remote:
      path: Heir/BiDictionary.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: .ctor
    path: Heir/BiDictionary.cs
    startLine: 10
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public BiDictionary(IDictionary<TKey, TValue> initialItems)
    parameters:
    - id: initialItems
      type: System.Collections.Generic.IDictionary{{TKey},{TValue}}
    content.vb: Public Sub New(initialItems As IDictionary(Of TKey, TValue))
  overload: Heir.BiDictionary`2.#ctor*
  nameWithType.vb: BiDictionary(Of TKey, TValue).New(IDictionary(Of TKey, TValue))
  fullName.vb: Heir.BiDictionary(Of TKey, TValue).New(System.Collections.Generic.IDictionary(Of TKey, TValue))
  name.vb: New(IDictionary(Of TKey, TValue))
- uid: Heir.BiDictionary`2.TryGetValue(`0)
  commentId: M:Heir.BiDictionary`2.TryGetValue(`0)
  id: TryGetValue(`0)
  parent: Heir.BiDictionary`2
  langs:
  - csharp
  - vb
  name: TryGetValue(TKey)
  nameWithType: BiDictionary<TKey, TValue>.TryGetValue(TKey)
  fullName: Heir.BiDictionary<TKey, TValue>.TryGetValue(TKey)
  type: Method
  source:
    remote:
      path: Heir/BiDictionary.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: TryGetValue
    path: Heir/BiDictionary.cs
    startLine: 16
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public TValue? TryGetValue(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
    return:
      type: '{TValue}'
    content.vb: Public Function TryGetValue(key As TKey) As TValue
  overload: Heir.BiDictionary`2.TryGetValue*
  nameWithType.vb: BiDictionary(Of TKey, TValue).TryGetValue(TKey)
  fullName.vb: Heir.BiDictionary(Of TKey, TValue).TryGetValue(TKey)
- uid: Heir.BiDictionary`2.TryGetKey(`1)
  commentId: M:Heir.BiDictionary`2.TryGetKey(`1)
  id: TryGetKey(`1)
  parent: Heir.BiDictionary`2
  langs:
  - csharp
  - vb
  name: TryGetKey(TValue)
  nameWithType: BiDictionary<TKey, TValue>.TryGetKey(TValue)
  fullName: Heir.BiDictionary<TKey, TValue>.TryGetKey(TValue)
  type: Method
  source:
    remote:
      path: Heir/BiDictionary.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: TryGetKey
    path: Heir/BiDictionary.cs
    startLine: 21
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public TKey? TryGetKey(TValue value)
    parameters:
    - id: value
      type: '{TValue}'
    return:
      type: '{TKey}'
    content.vb: Public Function TryGetKey(value As TValue) As TKey
  overload: Heir.BiDictionary`2.TryGetKey*
  nameWithType.vb: BiDictionary(Of TKey, TValue).TryGetKey(TValue)
  fullName.vb: Heir.BiDictionary(Of TKey, TValue).TryGetKey(TValue)
- uid: Heir.BiDictionary`2.GetValue(`0)
  commentId: M:Heir.BiDictionary`2.GetValue(`0)
  id: GetValue(`0)
  parent: Heir.BiDictionary`2
  langs:
  - csharp
  - vb
  name: GetValue(TKey)
  nameWithType: BiDictionary<TKey, TValue>.GetValue(TKey)
  fullName: Heir.BiDictionary<TKey, TValue>.GetValue(TKey)
  type: Method
  source:
    remote:
      path: Heir/BiDictionary.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: GetValue
    path: Heir/BiDictionary.cs
    startLine: 26
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public TValue GetValue(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
    return:
      type: '{TValue}'
    content.vb: Public Function GetValue(key As TKey) As TValue
  overload: Heir.BiDictionary`2.GetValue*
  nameWithType.vb: BiDictionary(Of TKey, TValue).GetValue(TKey)
  fullName.vb: Heir.BiDictionary(Of TKey, TValue).GetValue(TKey)
- uid: Heir.BiDictionary`2.GetKey(`1)
  commentId: M:Heir.BiDictionary`2.GetKey(`1)
  id: GetKey(`1)
  parent: Heir.BiDictionary`2
  langs:
  - csharp
  - vb
  name: GetKey(TValue)
  nameWithType: BiDictionary<TKey, TValue>.GetKey(TValue)
  fullName: Heir.BiDictionary<TKey, TValue>.GetKey(TValue)
  type: Method
  source:
    remote:
      path: Heir/BiDictionary.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: GetKey
    path: Heir/BiDictionary.cs
    startLine: 27
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public TKey GetKey(TValue value)
    parameters:
    - id: value
      type: '{TValue}'
    return:
      type: '{TKey}'
    content.vb: Public Function GetKey(value As TValue) As TKey
  overload: Heir.BiDictionary`2.GetKey*
  nameWithType.vb: BiDictionary(Of TKey, TValue).GetKey(TValue)
  fullName.vb: Heir.BiDictionary(Of TKey, TValue).GetKey(TValue)
- uid: Heir.BiDictionary`2.Contains(`0)
  commentId: M:Heir.BiDictionary`2.Contains(`0)
  id: Contains(`0)
  parent: Heir.BiDictionary`2
  langs:
  - csharp
  - vb
  name: Contains(TKey)
  nameWithType: BiDictionary<TKey, TValue>.Contains(TKey)
  fullName: Heir.BiDictionary<TKey, TValue>.Contains(TKey)
  type: Method
  source:
    remote:
      path: Heir/BiDictionary.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Contains
    path: Heir/BiDictionary.cs
    startLine: 28
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public bool Contains(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
    return:
      type: System.Boolean
    content.vb: Public Function Contains(key As TKey) As Boolean
  overload: Heir.BiDictionary`2.Contains*
  nameWithType.vb: BiDictionary(Of TKey, TValue).Contains(TKey)
  fullName.vb: Heir.BiDictionary(Of TKey, TValue).Contains(TKey)
- uid: Heir.BiDictionary`2.Contains(`1)
  commentId: M:Heir.BiDictionary`2.Contains(`1)
  id: Contains(`1)
  parent: Heir.BiDictionary`2
  langs:
  - csharp
  - vb
  name: Contains(TValue)
  nameWithType: BiDictionary<TKey, TValue>.Contains(TValue)
  fullName: Heir.BiDictionary<TKey, TValue>.Contains(TValue)
  type: Method
  source:
    remote:
      path: Heir/BiDictionary.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Contains
    path: Heir/BiDictionary.cs
    startLine: 29
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public bool Contains(TValue value)
    parameters:
    - id: value
      type: '{TValue}'
    return:
      type: System.Boolean
    content.vb: Public Function Contains(value As TValue) As Boolean
  overload: Heir.BiDictionary`2.Contains*
  nameWithType.vb: BiDictionary(Of TKey, TValue).Contains(TValue)
  fullName.vb: Heir.BiDictionary(Of TKey, TValue).Contains(TValue)
references:
- uid: Heir
  commentId: N:Heir
  href: Heir.html
  name: Heir
  nameWithType: Heir
  fullName: Heir
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary{{TKey},{TValue}}
  commentId: T:System.Collections.Generic.Dictionary{`0,`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.Dictionary{{TValue},{TKey}}
  commentId: T:System.Collections.Generic.Dictionary{`1,`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TValue, TKey>
  nameWithType: Dictionary<TValue, TKey>
  fullName: System.Collections.Generic.Dictionary<TValue, TKey>
  nameWithType.vb: Dictionary(Of TValue, TKey)
  fullName.vb: System.Collections.Generic.Dictionary(Of TValue, TKey)
  name.vb: Dictionary(Of TValue, TKey)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TValue
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TKey
  - name: )
- uid: Heir.BiDictionary`2.Count*
  commentId: Overload:Heir.BiDictionary`2.Count
  href: Heir.BiDictionary-2.html#Heir_BiDictionary_2_Count
  name: Count
  nameWithType: BiDictionary<TKey, TValue>.Count
  fullName: Heir.BiDictionary<TKey, TValue>.Count
  nameWithType.vb: BiDictionary(Of TKey, TValue).Count
  fullName.vb: Heir.BiDictionary(Of TKey, TValue).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Heir.BiDictionary`2.#ctor*
  commentId: Overload:Heir.BiDictionary`2.#ctor
  href: Heir.BiDictionary-2.html#Heir_BiDictionary_2__ctor_System_Collections_Generic_IDictionary__0__1__
  name: BiDictionary
  nameWithType: BiDictionary<TKey, TValue>.BiDictionary
  fullName: Heir.BiDictionary<TKey, TValue>.BiDictionary
  nameWithType.vb: BiDictionary(Of TKey, TValue).New
  fullName.vb: Heir.BiDictionary(Of TKey, TValue).New
  name.vb: New
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  commentId: T:System.Collections.Generic.IDictionary{`0,`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Heir.BiDictionary`2.TryGetValue*
  commentId: Overload:Heir.BiDictionary`2.TryGetValue
  href: Heir.BiDictionary-2.html#Heir_BiDictionary_2_TryGetValue__0_
  name: TryGetValue
  nameWithType: BiDictionary<TKey, TValue>.TryGetValue
  fullName: Heir.BiDictionary<TKey, TValue>.TryGetValue
  nameWithType.vb: BiDictionary(Of TKey, TValue).TryGetValue
  fullName.vb: Heir.BiDictionary(Of TKey, TValue).TryGetValue
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Heir.BiDictionary`2.TryGetKey*
  commentId: Overload:Heir.BiDictionary`2.TryGetKey
  href: Heir.BiDictionary-2.html#Heir_BiDictionary_2_TryGetKey__1_
  name: TryGetKey
  nameWithType: BiDictionary<TKey, TValue>.TryGetKey
  fullName: Heir.BiDictionary<TKey, TValue>.TryGetKey
  nameWithType.vb: BiDictionary(Of TKey, TValue).TryGetKey
  fullName.vb: Heir.BiDictionary(Of TKey, TValue).TryGetKey
- uid: Heir.BiDictionary`2.GetValue*
  commentId: Overload:Heir.BiDictionary`2.GetValue
  href: Heir.BiDictionary-2.html#Heir_BiDictionary_2_GetValue__0_
  name: GetValue
  nameWithType: BiDictionary<TKey, TValue>.GetValue
  fullName: Heir.BiDictionary<TKey, TValue>.GetValue
  nameWithType.vb: BiDictionary(Of TKey, TValue).GetValue
  fullName.vb: Heir.BiDictionary(Of TKey, TValue).GetValue
- uid: Heir.BiDictionary`2.GetKey*
  commentId: Overload:Heir.BiDictionary`2.GetKey
  href: Heir.BiDictionary-2.html#Heir_BiDictionary_2_GetKey__1_
  name: GetKey
  nameWithType: BiDictionary<TKey, TValue>.GetKey
  fullName: Heir.BiDictionary<TKey, TValue>.GetKey
  nameWithType.vb: BiDictionary(Of TKey, TValue).GetKey
  fullName.vb: Heir.BiDictionary(Of TKey, TValue).GetKey
- uid: Heir.BiDictionary`2.Contains*
  commentId: Overload:Heir.BiDictionary`2.Contains
  href: Heir.BiDictionary-2.html#Heir_BiDictionary_2_Contains__0_
  name: Contains
  nameWithType: BiDictionary<TKey, TValue>.Contains
  fullName: Heir.BiDictionary<TKey, TValue>.Contains
  nameWithType.vb: BiDictionary(Of TKey, TValue).Contains
  fullName.vb: Heir.BiDictionary(Of TKey, TValue).Contains
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
