### YamlMime:ManagedReference
items:
- uid: Heir.Tests.VirtualMachineTest
  commentId: T:Heir.Tests.VirtualMachineTest
  id: VirtualMachineTest
  parent: Heir.Tests
  children:
  - Heir.Tests.VirtualMachineTest.Evaluates_Arithmetic(System.String,System.Object)
  - Heir.Tests.VirtualMachineTest.Evaluates_Assignment(System.String,System.Object)
  - Heir.Tests.VirtualMachineTest.Evaluates_Comparison(System.String,System.Object)
  - Heir.Tests.VirtualMachineTest.Evaluates_ElementAccess(System.String,System.Object)
  - Heir.Tests.VirtualMachineTest.Evaluates_EmptyObjectLiterals
  - Heir.Tests.VirtualMachineTest.Evaluates_FunctionDeclarations
  - Heir.Tests.VirtualMachineTest.Evaluates_GeneratorFunction
  - Heir.Tests.VirtualMachineTest.Evaluates_IfStatements(System.String,System.Double)
  - Heir.Tests.VirtualMachineTest.Evaluates_IncrementDecrement(System.String,System.Object)
  - Heir.Tests.VirtualMachineTest.Evaluates_Invocation(System.String,System.Object)
  - Heir.Tests.VirtualMachineTest.Evaluates_Literals(System.String,System.Object)
  - Heir.Tests.VirtualMachineTest.Evaluates_Logical(System.String,System.Object)
  - Heir.Tests.VirtualMachineTest.Evaluates_MemberAccess(System.String,System.Object)
  - Heir.Tests.VirtualMachineTest.Evaluates_NowIntrinsicFunction
  - Heir.Tests.VirtualMachineTest.Evaluates_ObjectLiterals(System.String,System.Object,System.Object)
  - Heir.Tests.VirtualMachineTest.Evaluates_VariableDeclarations(System.String,System.String,System.Object)
  - Heir.Tests.VirtualMachineTest.ThrowsWith(System.String,Heir.DiagnosticCode)
  langs:
  - csharp
  - vb
  name: VirtualMachineTest
  nameWithType: VirtualMachineTest
  fullName: Heir.Tests.VirtualMachineTest
  type: Class
  source:
    remote:
      path: Heir.Tests/VirtualMachineTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: VirtualMachineTest
    path: Heir.Tests/VirtualMachineTest.cs
    startLine: 5
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: public class VirtualMachineTest
    content.vb: Public Class VirtualMachineTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Heir.Tests.VirtualMachineTest.ThrowsWith(System.String,Heir.DiagnosticCode)
  commentId: M:Heir.Tests.VirtualMachineTest.ThrowsWith(System.String,Heir.DiagnosticCode)
  id: ThrowsWith(System.String,Heir.DiagnosticCode)
  parent: Heir.Tests.VirtualMachineTest
  langs:
  - csharp
  - vb
  name: ThrowsWith(string, DiagnosticCode)
  nameWithType: VirtualMachineTest.ThrowsWith(string, DiagnosticCode)
  fullName: Heir.Tests.VirtualMachineTest.ThrowsWith(string, Heir.DiagnosticCode)
  type: Method
  source:
    remote:
      path: Heir.Tests/VirtualMachineTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: ThrowsWith
    path: Heir.Tests/VirtualMachineTest.cs
    startLine: 7
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "fn abc -> abc(); abc();", DiagnosticCode.H017 })]

      public void ThrowsWith(string input, DiagnosticCode expectedDiagnosticCode)
    parameters:
    - id: input
      type: System.String
    - id: expectedDiagnosticCode
      type: Heir.DiagnosticCode
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "fn abc -> abc(); abc();", DiagnosticCode.H017 })>

      Public Sub ThrowsWith(input As String, expectedDiagnosticCode As DiagnosticCode)
  overload: Heir.Tests.VirtualMachineTest.ThrowsWith*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: VirtualMachineTest.ThrowsWith(String, DiagnosticCode)
  fullName.vb: Heir.Tests.VirtualMachineTest.ThrowsWith(String, Heir.DiagnosticCode)
  name.vb: ThrowsWith(String, DiagnosticCode)
- uid: Heir.Tests.VirtualMachineTest.Evaluates_NowIntrinsicFunction
  commentId: M:Heir.Tests.VirtualMachineTest.Evaluates_NowIntrinsicFunction
  id: Evaluates_NowIntrinsicFunction
  parent: Heir.Tests.VirtualMachineTest
  langs:
  - csharp
  - vb
  name: Evaluates_NowIntrinsicFunction()
  nameWithType: VirtualMachineTest.Evaluates_NowIntrinsicFunction()
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_NowIntrinsicFunction()
  type: Method
  source:
    remote:
      path: Heir.Tests/VirtualMachineTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Evaluates_NowIntrinsicFunction
    path: Heir.Tests/VirtualMachineTest.cs
    startLine: 16
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Fact]

      public void Evaluates_NowIntrinsicFunction()
    content.vb: >-
      <Fact>

      Public Sub Evaluates_NowIntrinsicFunction()
  overload: Heir.Tests.VirtualMachineTest.Evaluates_NowIntrinsicFunction*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Heir.Tests.VirtualMachineTest.Evaluates_IfStatements(System.String,System.Double)
  commentId: M:Heir.Tests.VirtualMachineTest.Evaluates_IfStatements(System.String,System.Double)
  id: Evaluates_IfStatements(System.String,System.Double)
  parent: Heir.Tests.VirtualMachineTest
  langs:
  - csharp
  - vb
  name: Evaluates_IfStatements(string, double)
  nameWithType: VirtualMachineTest.Evaluates_IfStatements(string, double)
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_IfStatements(string, double)
  type: Method
  source:
    remote:
      path: Heir.Tests/VirtualMachineTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Evaluates_IfStatements
    path: Heir.Tests/VirtualMachineTest.cs
    startLine: 23
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "1", 2 })]

      [InlineData(new object[] { "2", 4 })]

      [InlineData(new object[] { "3", 15 })]

      public void Evaluates_IfStatements(string xValue, double expectedValue)
    parameters:
    - id: xValue
      type: System.String
    - id: expectedValue
      type: System.Double
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "1", 2 })>

      <InlineData(New Object() { "2", 4 })>

      <InlineData(New Object() { "3", 15 })>

      Public Sub Evaluates_IfStatements(xValue As String, expectedValue As Double)
  overload: Heir.Tests.VirtualMachineTest.Evaluates_IfStatements*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: VirtualMachineTest.Evaluates_IfStatements(String, Double)
  fullName.vb: Heir.Tests.VirtualMachineTest.Evaluates_IfStatements(String, Double)
  name.vb: Evaluates_IfStatements(String, Double)
- uid: Heir.Tests.VirtualMachineTest.Evaluates_IncrementDecrement(System.String,System.Object)
  commentId: M:Heir.Tests.VirtualMachineTest.Evaluates_IncrementDecrement(System.String,System.Object)
  id: Evaluates_IncrementDecrement(System.String,System.Object)
  parent: Heir.Tests.VirtualMachineTest
  langs:
  - csharp
  - vb
  name: Evaluates_IncrementDecrement(string, object?)
  nameWithType: VirtualMachineTest.Evaluates_IncrementDecrement(string, object?)
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_IncrementDecrement(string, object?)
  type: Method
  source:
    remote:
      path: Heir.Tests/VirtualMachineTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Evaluates_IncrementDecrement
    path: Heir.Tests/VirtualMachineTest.cs
    startLine: 43
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "let mut x = 1; ++x;", 2 })]

      [InlineData(new object[] { "let mut y = 2; --y;", 1 })]

      [InlineData(new object[] { "let mut z = 1; ++z; z;", 2 })]

      public void Evaluates_IncrementDecrement(string input, object? expectedValue)
    parameters:
    - id: input
      type: System.String
    - id: expectedValue
      type: System.Object
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "let mut x = 1; ++x;", 2 })>

      <InlineData(New Object() { "let mut y = 2; --y;", 1 })>

      <InlineData(New Object() { "let mut z = 1; ++z; z;", 2 })>

      Public Sub Evaluates_IncrementDecrement(input As String, expectedValue As Object)
  overload: Heir.Tests.VirtualMachineTest.Evaluates_IncrementDecrement*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: VirtualMachineTest.Evaluates_IncrementDecrement(String, Object)
  fullName.vb: Heir.Tests.VirtualMachineTest.Evaluates_IncrementDecrement(String, Object)
  name.vb: Evaluates_IncrementDecrement(String, Object)
- uid: Heir.Tests.VirtualMachineTest.Evaluates_Assignment(System.String,System.Object)
  commentId: M:Heir.Tests.VirtualMachineTest.Evaluates_Assignment(System.String,System.Object)
  id: Evaluates_Assignment(System.String,System.Object)
  parent: Heir.Tests.VirtualMachineTest
  langs:
  - csharp
  - vb
  name: Evaluates_Assignment(string, object?)
  nameWithType: VirtualMachineTest.Evaluates_Assignment(string, object?)
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_Assignment(string, object?)
  type: Method
  source:
    remote:
      path: Heir.Tests/VirtualMachineTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Evaluates_Assignment
    path: Heir.Tests/VirtualMachineTest.cs
    startLine: 53
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "let mut x = 1; x = 2;", 2 })]

      [InlineData(new object[] { "let mut y = 5; y += 5;", 10 })]

      [InlineData(new object[] { "let mut z = 9; z //= 2;", 4 })]

      public void Evaluates_Assignment(string input, object? expectedValue)
    parameters:
    - id: input
      type: System.String
    - id: expectedValue
      type: System.Object
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "let mut x = 1; x = 2;", 2 })>

      <InlineData(New Object() { "let mut y = 5; y += 5;", 10 })>

      <InlineData(New Object() { "let mut z = 9; z //= 2;", 4 })>

      Public Sub Evaluates_Assignment(input As String, expectedValue As Object)
  overload: Heir.Tests.VirtualMachineTest.Evaluates_Assignment*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: VirtualMachineTest.Evaluates_Assignment(String, Object)
  fullName.vb: Heir.Tests.VirtualMachineTest.Evaluates_Assignment(String, Object)
  name.vb: Evaluates_Assignment(String, Object)
- uid: Heir.Tests.VirtualMachineTest.Evaluates_MemberAccess(System.String,System.Object)
  commentId: M:Heir.Tests.VirtualMachineTest.Evaluates_MemberAccess(System.String,System.Object)
  id: Evaluates_MemberAccess(System.String,System.Object)
  parent: Heir.Tests.VirtualMachineTest
  langs:
  - csharp
  - vb
  name: Evaluates_MemberAccess(string, object?)
  nameWithType: VirtualMachineTest.Evaluates_MemberAccess(string, object?)
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_MemberAccess(string, object?)
  type: Method
  source:
    remote:
      path: Heir.Tests/VirtualMachineTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Evaluates_MemberAccess
    path: Heir.Tests/VirtualMachineTest.cs
    startLine: 63
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "let foo = { bar: \"baz\" }; foo.bar;", "baz" })]

      [InlineData(new object[] { "let foo = { bar: \"baz\", boof: \"rah\" }; foo.boof;", "rah" })]

      [InlineData(new object[] { "({ abc: \"def\" }).abc;", "def" })]

      [InlineData(new object[] { "let a = { b: { c: 123 } }; a.b.c;", 123 })]

      [InlineData(new object[] { "fn brah -> { a: 123 }; let foo = { bar: brah }; foo.bar().a;", 123 })]

      public void Evaluates_MemberAccess(string input, object? expectedValue)
    parameters:
    - id: input
      type: System.String
    - id: expectedValue
      type: System.Object
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "let foo = { bar: ""baz"" }; foo.bar;", "baz" })>

      <InlineData(New Object() { "let foo = { bar: ""baz"", boof: ""rah"" }; foo.boof;", "rah" })>

      <InlineData(New Object() { "({ abc: ""def"" }).abc;", "def" })>

      <InlineData(New Object() { "let a = { b: { c: 123 } }; a.b.c;", 123 })>

      <InlineData(New Object() { "fn brah -> { a: 123 }; let foo = { bar: brah }; foo.bar().a;", 123 })>

      Public Sub Evaluates_MemberAccess(input As String, expectedValue As Object)
  overload: Heir.Tests.VirtualMachineTest.Evaluates_MemberAccess*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: VirtualMachineTest.Evaluates_MemberAccess(String, Object)
  fullName.vb: Heir.Tests.VirtualMachineTest.Evaluates_MemberAccess(String, Object)
  name.vb: Evaluates_MemberAccess(String, Object)
- uid: Heir.Tests.VirtualMachineTest.Evaluates_ElementAccess(System.String,System.Object)
  commentId: M:Heir.Tests.VirtualMachineTest.Evaluates_ElementAccess(System.String,System.Object)
  id: Evaluates_ElementAccess(System.String,System.Object)
  parent: Heir.Tests.VirtualMachineTest
  langs:
  - csharp
  - vb
  name: Evaluates_ElementAccess(string, object?)
  nameWithType: VirtualMachineTest.Evaluates_ElementAccess(string, object?)
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_ElementAccess(string, object?)
  type: Method
  source:
    remote:
      path: Heir.Tests/VirtualMachineTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Evaluates_ElementAccess
    path: Heir.Tests/VirtualMachineTest.cs
    startLine: 75
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "let foo = { bar: \"baz\" }; foo[\"bar\"];", "baz" })]

      [InlineData(new object[] { "let foo = { bar: \"baz\", boof: \"rah\" }; foo[\"boof\"];", "rah" })]

      [InlineData(new object[] { "({ abc: \"def\" })[\"abc\"];", "def" })]

      [InlineData(new object[] { "let a = { b: { c: 123 } }; a[\"b\"][\"c\"];", 123 })]

      [InlineData(new object[] { "fn brah -> { a: 123 }; let foo = { bar: brah }; foo[\"bar\"]()[\"a\"];", 123 })]

      public void Evaluates_ElementAccess(string input, object? expectedValue)
    parameters:
    - id: input
      type: System.String
    - id: expectedValue
      type: System.Object
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "let foo = { bar: ""baz"" }; foo[""bar""];", "baz" })>

      <InlineData(New Object() { "let foo = { bar: ""baz"", boof: ""rah"" }; foo[""boof""];", "rah" })>

      <InlineData(New Object() { "({ abc: ""def"" })[""abc""];", "def" })>

      <InlineData(New Object() { "let a = { b: { c: 123 } }; a[""b""][""c""];", 123 })>

      <InlineData(New Object() { "fn brah -> { a: 123 }; let foo = { bar: brah }; foo[""bar""]()[""a""];", 123 })>

      Public Sub Evaluates_ElementAccess(input As String, expectedValue As Object)
  overload: Heir.Tests.VirtualMachineTest.Evaluates_ElementAccess*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: VirtualMachineTest.Evaluates_ElementAccess(String, Object)
  fullName.vb: Heir.Tests.VirtualMachineTest.Evaluates_ElementAccess(String, Object)
  name.vb: Evaluates_ElementAccess(String, Object)
- uid: Heir.Tests.VirtualMachineTest.Evaluates_Invocation(System.String,System.Object)
  commentId: M:Heir.Tests.VirtualMachineTest.Evaluates_Invocation(System.String,System.Object)
  id: Evaluates_Invocation(System.String,System.Object)
  parent: Heir.Tests.VirtualMachineTest
  langs:
  - csharp
  - vb
  name: Evaluates_Invocation(string, object?)
  nameWithType: VirtualMachineTest.Evaluates_Invocation(string, object?)
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_Invocation(string, object?)
  type: Method
  source:
    remote:
      path: Heir.Tests/VirtualMachineTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Evaluates_Invocation
    path: Heir.Tests/VirtualMachineTest.cs
    startLine: 87
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "fn fib(n: int) { if n <= 1 return n; return fib(n - 1) + fib(n - 2); } fib(12);", 144 })]

      [InlineData(new object[] { "fn double(n: int) -> n * 2; double(10);", 20 })]

      [InlineData(new object[] { "fn increment(n: int, amount = 1) -> n + amount; increment(5);", 6 })]

      [InlineData(new object[] { "fn increment(n: int, amount = 1) -> n + amount; increment(5, 5);", 10 })]

      [InlineData(new object[] { "fn say_hello(name: string): string { return \"hello, \" + name + \"!\" } say_hello(\"johnny\");", "hello, johnny!" })]

      public void Evaluates_Invocation(string input, object? expectedValue)
    parameters:
    - id: input
      type: System.String
    - id: expectedValue
      type: System.Object
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "fn fib(n: int) { if n <= 1 return n; return fib(n - 1) + fib(n - 2); } fib(12);", 144 })>

      <InlineData(New Object() { "fn double(n: int) -> n * 2; double(10);", 20 })>

      <InlineData(New Object() { "fn increment(n: int, amount = 1) -> n + amount; increment(5);", 6 })>

      <InlineData(New Object() { "fn increment(n: int, amount = 1) -> n + amount; increment(5, 5);", 10 })>

      <InlineData(New Object() { "fn say_hello(name: string): string { return ""hello, "" + name + ""!"" } say_hello(""johnny"");", "hello, johnny!" })>

      Public Sub Evaluates_Invocation(input As String, expectedValue As Object)
  overload: Heir.Tests.VirtualMachineTest.Evaluates_Invocation*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: VirtualMachineTest.Evaluates_Invocation(String, Object)
  fullName.vb: Heir.Tests.VirtualMachineTest.Evaluates_Invocation(String, Object)
  name.vb: Evaluates_Invocation(String, Object)
- uid: Heir.Tests.VirtualMachineTest.Evaluates_GeneratorFunction
  commentId: M:Heir.Tests.VirtualMachineTest.Evaluates_GeneratorFunction
  id: Evaluates_GeneratorFunction
  parent: Heir.Tests.VirtualMachineTest
  langs:
  - csharp
  - vb
  name: Evaluates_GeneratorFunction()
  nameWithType: VirtualMachineTest.Evaluates_GeneratorFunction()
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_GeneratorFunction()
  type: Method
  source:
    remote:
      path: Heir.Tests/VirtualMachineTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Evaluates_GeneratorFunction
    path: Heir.Tests/VirtualMachineTest.cs
    startLine: 99
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Fact]

      public void Evaluates_GeneratorFunction()
    content.vb: >-
      <Fact>

      Public Sub Evaluates_GeneratorFunction()
  overload: Heir.Tests.VirtualMachineTest.Evaluates_GeneratorFunction*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Heir.Tests.VirtualMachineTest.Evaluates_FunctionDeclarations
  commentId: M:Heir.Tests.VirtualMachineTest.Evaluates_FunctionDeclarations
  id: Evaluates_FunctionDeclarations
  parent: Heir.Tests.VirtualMachineTest
  langs:
  - csharp
  - vb
  name: Evaluates_FunctionDeclarations()
  nameWithType: VirtualMachineTest.Evaluates_FunctionDeclarations()
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_FunctionDeclarations()
  type: Method
  source:
    remote:
      path: Heir.Tests/VirtualMachineTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Evaluates_FunctionDeclarations
    path: Heir.Tests/VirtualMachineTest.cs
    startLine: 118
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Fact]

      public void Evaluates_FunctionDeclarations()
    content.vb: >-
      <Fact>

      Public Sub Evaluates_FunctionDeclarations()
  overload: Heir.Tests.VirtualMachineTest.Evaluates_FunctionDeclarations*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Heir.Tests.VirtualMachineTest.Evaluates_VariableDeclarations(System.String,System.String,System.Object)
  commentId: M:Heir.Tests.VirtualMachineTest.Evaluates_VariableDeclarations(System.String,System.String,System.Object)
  id: Evaluates_VariableDeclarations(System.String,System.String,System.Object)
  parent: Heir.Tests.VirtualMachineTest
  langs:
  - csharp
  - vb
  name: Evaluates_VariableDeclarations(string, string, object?)
  nameWithType: VirtualMachineTest.Evaluates_VariableDeclarations(string, string, object?)
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_VariableDeclarations(string, string, object?)
  type: Method
  source:
    remote:
      path: Heir.Tests/VirtualMachineTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Evaluates_VariableDeclarations
    path: Heir.Tests/VirtualMachineTest.cs
    startLine: 131
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "let x = 1;", "x", 1 })]

      [InlineData(new object[] { "let mut y: int = 2;", "y", 2 })]

      public void Evaluates_VariableDeclarations(string input, string name, object? expectedValue)
    parameters:
    - id: input
      type: System.String
    - id: name
      type: System.String
    - id: expectedValue
      type: System.Object
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "let x = 1;", "x", 1 })>

      <InlineData(New Object() { "let mut y: int = 2;", "y", 2 })>

      Public Sub Evaluates_VariableDeclarations(input As String, name As String, expectedValue As Object)
  overload: Heir.Tests.VirtualMachineTest.Evaluates_VariableDeclarations*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: VirtualMachineTest.Evaluates_VariableDeclarations(String, String, Object)
  fullName.vb: Heir.Tests.VirtualMachineTest.Evaluates_VariableDeclarations(String, String, Object)
  name.vb: Evaluates_VariableDeclarations(String, String, Object)
- uid: Heir.Tests.VirtualMachineTest.Evaluates_ObjectLiterals(System.String,System.Object,System.Object)
  commentId: M:Heir.Tests.VirtualMachineTest.Evaluates_ObjectLiterals(System.String,System.Object,System.Object)
  id: Evaluates_ObjectLiterals(System.String,System.Object,System.Object)
  parent: Heir.Tests.VirtualMachineTest
  langs:
  - csharp
  - vb
  name: Evaluates_ObjectLiterals(string, object, object?)
  nameWithType: VirtualMachineTest.Evaluates_ObjectLiterals(string, object, object?)
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_ObjectLiterals(string, object, object?)
  type: Method
  source:
    remote:
      path: Heir.Tests/VirtualMachineTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Evaluates_ObjectLiterals
    path: Heir.Tests/VirtualMachineTest.cs
    startLine: 143
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "{ a: true }", "a", true })]

      [InlineData(new object[] { "{ [\"a\"]: 69 }", "a", 69 })]

      [InlineData(new object[] { "{ [1]: 420 }", 1, 420 })]

      public void Evaluates_ObjectLiterals(string input, object expectedKey, object? expectedValue)
    parameters:
    - id: input
      type: System.String
    - id: expectedKey
      type: System.Object
    - id: expectedValue
      type: System.Object
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "{ a: true }", "a", True })>

      <InlineData(New Object() { "{ [""a""]: 69 }", "a", 69 })>

      <InlineData(New Object() { "{ [1]: 420 }", 1, 420 })>

      Public Sub Evaluates_ObjectLiterals(input As String, expectedKey As Object, expectedValue As Object)
  overload: Heir.Tests.VirtualMachineTest.Evaluates_ObjectLiterals*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: VirtualMachineTest.Evaluates_ObjectLiterals(String, Object, Object)
  fullName.vb: Heir.Tests.VirtualMachineTest.Evaluates_ObjectLiterals(String, Object, Object)
  name.vb: Evaluates_ObjectLiterals(String, Object, Object)
- uid: Heir.Tests.VirtualMachineTest.Evaluates_EmptyObjectLiterals
  commentId: M:Heir.Tests.VirtualMachineTest.Evaluates_EmptyObjectLiterals
  id: Evaluates_EmptyObjectLiterals
  parent: Heir.Tests.VirtualMachineTest
  langs:
  - csharp
  - vb
  name: Evaluates_EmptyObjectLiterals()
  nameWithType: VirtualMachineTest.Evaluates_EmptyObjectLiterals()
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_EmptyObjectLiterals()
  type: Method
  source:
    remote:
      path: Heir.Tests/VirtualMachineTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Evaluates_EmptyObjectLiterals
    path: Heir.Tests/VirtualMachineTest.cs
    startLine: 159
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Fact]

      public void Evaluates_EmptyObjectLiterals()
    content.vb: >-
      <Fact>

      Public Sub Evaluates_EmptyObjectLiterals()
  overload: Heir.Tests.VirtualMachineTest.Evaluates_EmptyObjectLiterals*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: Heir.Tests.VirtualMachineTest.Evaluates_Literals(System.String,System.Object)
  commentId: M:Heir.Tests.VirtualMachineTest.Evaluates_Literals(System.String,System.Object)
  id: Evaluates_Literals(System.String,System.Object)
  parent: Heir.Tests.VirtualMachineTest
  langs:
  - csharp
  - vb
  name: Evaluates_Literals(string, object?)
  nameWithType: VirtualMachineTest.Evaluates_Literals(string, object?)
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_Literals(string, object?)
  type: Method
  source:
    remote:
      path: Heir.Tests/VirtualMachineTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Evaluates_Literals
    path: Heir.Tests/VirtualMachineTest.cs
    startLine: 169
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "69.420", 69.42 })]

      [InlineData(new object[] { "0x3E", 62 })]

      [InlineData(new object[] { "0o342", 226 })]

      [InlineData(new object[] { "0b11", 3 })]

      [InlineData(new object[] { "\"hello\"", "hello" })]

      [InlineData(new object[] { "'a'", 'a' })]

      [InlineData(new object[] { "true", true })]

      [InlineData(new object[] { "false", false })]

      [InlineData(new object[] { "none", null })]

      public void Evaluates_Literals(string input, object? expectedValue)
    parameters:
    - id: input
      type: System.String
    - id: expectedValue
      type: System.Object
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "69.420", 69.42 })>

      <InlineData(New Object() { "0x3E", 62 })>

      <InlineData(New Object() { "0o342", 226 })>

      <InlineData(New Object() { "0b11", 3 })>

      <InlineData(New Object() { """hello""", "hello" })>

      <InlineData(New Object() { "'a'", "a"c })>

      <InlineData(New Object() { "true", True })>

      <InlineData(New Object() { "false", False })>

      <InlineData(New Object() { "none", Nothing })>

      Public Sub Evaluates_Literals(input As String, expectedValue As Object)
  overload: Heir.Tests.VirtualMachineTest.Evaluates_Literals*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: VirtualMachineTest.Evaluates_Literals(String, Object)
  fullName.vb: Heir.Tests.VirtualMachineTest.Evaluates_Literals(String, Object)
  name.vb: Evaluates_Literals(String, Object)
- uid: Heir.Tests.VirtualMachineTest.Evaluates_Arithmetic(System.String,System.Object)
  commentId: M:Heir.Tests.VirtualMachineTest.Evaluates_Arithmetic(System.String,System.Object)
  id: Evaluates_Arithmetic(System.String,System.Object)
  parent: Heir.Tests.VirtualMachineTest
  langs:
  - csharp
  - vb
  name: Evaluates_Arithmetic(string, object?)
  nameWithType: VirtualMachineTest.Evaluates_Arithmetic(string, object?)
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_Arithmetic(string, object?)
  type: Method
  source:
    remote:
      path: Heir.Tests/VirtualMachineTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Evaluates_Arithmetic
    path: Heir.Tests/VirtualMachineTest.cs
    startLine: 185
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "3 + 2", 5 })]

      [InlineData(new object[] { "9 - 3", 6 })]

      [InlineData(new object[] { "3 * 3", 9 })]

      [InlineData(new object[] { "10 / 2", 5 })]

      [InlineData(new object[] { "9 // 2", 4 })]

      [InlineData(new object[] { "9 % 2", 1 })]

      [InlineData(new object[] { "14 << 1", 28 })]

      [InlineData(new object[] { "11 & 7", 3 })]

      [InlineData(new object[] { "4 | 9", 13 })]

      [InlineData(new object[] { "5 ~ 3", 6 })]

      [InlineData(new object[] { "~7", -8 })]

      [InlineData(new object[] { "-5", -5 })]

      [InlineData(new object[] { "3 * 2 + 1", 7 })]

      [InlineData(new object[] { "3 * (2 + 1)", 9 })]

      public void Evaluates_Arithmetic(string input, object? expectedValue)
    parameters:
    - id: input
      type: System.String
    - id: expectedValue
      type: System.Object
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "3 + 2", 5 })>

      <InlineData(New Object() { "9 - 3", 6 })>

      <InlineData(New Object() { "3 * 3", 9 })>

      <InlineData(New Object() { "10 / 2", 5 })>

      <InlineData(New Object() { "9 // 2", 4 })>

      <InlineData(New Object() { "9 % 2", 1 })>

      <InlineData(New Object() { "14 << 1", 28 })>

      <InlineData(New Object() { "11 & 7", 3 })>

      <InlineData(New Object() { "4 | 9", 13 })>

      <InlineData(New Object() { "5 ~ 3", 6 })>

      <InlineData(New Object() { "~7", -8 })>

      <InlineData(New Object() { "-5", -5 })>

      <InlineData(New Object() { "3 * 2 + 1", 7 })>

      <InlineData(New Object() { "3 * (2 + 1)", 9 })>

      Public Sub Evaluates_Arithmetic(input As String, expectedValue As Object)
  overload: Heir.Tests.VirtualMachineTest.Evaluates_Arithmetic*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: VirtualMachineTest.Evaluates_Arithmetic(String, Object)
  fullName.vb: Heir.Tests.VirtualMachineTest.Evaluates_Arithmetic(String, Object)
  name.vb: Evaluates_Arithmetic(String, Object)
- uid: Heir.Tests.VirtualMachineTest.Evaluates_Logical(System.String,System.Object)
  commentId: M:Heir.Tests.VirtualMachineTest.Evaluates_Logical(System.String,System.Object)
  id: Evaluates_Logical(System.String,System.Object)
  parent: Heir.Tests.VirtualMachineTest
  langs:
  - csharp
  - vb
  name: Evaluates_Logical(string, object?)
  nameWithType: VirtualMachineTest.Evaluates_Logical(string, object?)
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_Logical(string, object?)
  type: Method
  source:
    remote:
      path: Heir.Tests/VirtualMachineTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Evaluates_Logical
    path: Heir.Tests/VirtualMachineTest.cs
    startLine: 206
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "false || true", true })]

      [InlineData(new object[] { "true && false || true", true })]

      [InlineData(new object[] { "false && true || false", false })]

      [InlineData(new object[] { "!false", true })]

      [InlineData(new object[] { "!!false", false })]

      public void Evaluates_Logical(string input, object? expectedValue)
    parameters:
    - id: input
      type: System.String
    - id: expectedValue
      type: System.Object
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "false || true", True })>

      <InlineData(New Object() { "true && false || true", True })>

      <InlineData(New Object() { "false && true || false", False })>

      <InlineData(New Object() { "!false", True })>

      <InlineData(New Object() { "!!false", False })>

      Public Sub Evaluates_Logical(input As String, expectedValue As Object)
  overload: Heir.Tests.VirtualMachineTest.Evaluates_Logical*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: VirtualMachineTest.Evaluates_Logical(String, Object)
  fullName.vb: Heir.Tests.VirtualMachineTest.Evaluates_Logical(String, Object)
  name.vb: Evaluates_Logical(String, Object)
- uid: Heir.Tests.VirtualMachineTest.Evaluates_Comparison(System.String,System.Object)
  commentId: M:Heir.Tests.VirtualMachineTest.Evaluates_Comparison(System.String,System.Object)
  id: Evaluates_Comparison(System.String,System.Object)
  parent: Heir.Tests.VirtualMachineTest
  langs:
  - csharp
  - vb
  name: Evaluates_Comparison(string, object?)
  nameWithType: VirtualMachineTest.Evaluates_Comparison(string, object?)
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_Comparison(string, object?)
  type: Method
  source:
    remote:
      path: Heir.Tests/VirtualMachineTest.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Evaluates_Comparison
    path: Heir.Tests/VirtualMachineTest.cs
    startLine: 218
  assemblies:
  - Heir.Tests
  namespace: Heir.Tests
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[] { "3 == 2", false })]

      [InlineData(new object[] { "3 != 2", true })]

      [InlineData(new object[] { "3 == 3", true })]

      [InlineData(new object[] { "3 != 3", false })]

      [InlineData(new object[] { "3 <= 3", true })]

      [InlineData(new object[] { "3 >= 3", true })]

      [InlineData(new object[] { "3 < 3", false })]

      [InlineData(new object[] { "3 > 3", false })]

      [InlineData(new object[] { "4 > 3", true })]

      [InlineData(new object[] { "3 < 4", true })]

      [InlineData(new object[] { "3 <= 4", true })]

      [InlineData(new object[] { "4 >= 3", true })]

      [InlineData(new object[] { "3 <= 2", false })]

      [InlineData(new object[] { "2 >= 3", false })]

      public void Evaluates_Comparison(string input, object? expectedValue)
    parameters:
    - id: input
      type: System.String
    - id: expectedValue
      type: System.Object
    content.vb: >-
      <Theory>

      <InlineData(New Object() { "3 == 2", False })>

      <InlineData(New Object() { "3 != 2", True })>

      <InlineData(New Object() { "3 == 3", True })>

      <InlineData(New Object() { "3 != 3", False })>

      <InlineData(New Object() { "3 <= 3", True })>

      <InlineData(New Object() { "3 >= 3", True })>

      <InlineData(New Object() { "3 < 3", False })>

      <InlineData(New Object() { "3 > 3", False })>

      <InlineData(New Object() { "4 > 3", True })>

      <InlineData(New Object() { "3 < 4", True })>

      <InlineData(New Object() { "3 <= 4", True })>

      <InlineData(New Object() { "4 >= 3", True })>

      <InlineData(New Object() { "3 <= 2", False })>

      <InlineData(New Object() { "2 >= 3", False })>

      Public Sub Evaluates_Comparison(input As String, expectedValue As Object)
  overload: Heir.Tests.VirtualMachineTest.Evaluates_Comparison*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  nameWithType.vb: VirtualMachineTest.Evaluates_Comparison(String, Object)
  fullName.vb: Heir.Tests.VirtualMachineTest.Evaluates_Comparison(String, Object)
  name.vb: Evaluates_Comparison(String, Object)
references:
- uid: Heir.Tests
  commentId: N:Heir.Tests
  href: Heir.html
  name: Heir.Tests
  nameWithType: Heir.Tests
  fullName: Heir.Tests
  spec.csharp:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.Tests
    name: Tests
    href: Heir.Tests.html
  spec.vb:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.Tests
    name: Tests
    href: Heir.Tests.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Heir.Tests.VirtualMachineTest.ThrowsWith*
  commentId: Overload:Heir.Tests.VirtualMachineTest.ThrowsWith
  href: Heir.Tests.VirtualMachineTest.html#Heir_Tests_VirtualMachineTest_ThrowsWith_System_String_Heir_DiagnosticCode_
  name: ThrowsWith
  nameWithType: VirtualMachineTest.ThrowsWith
  fullName: Heir.Tests.VirtualMachineTest.ThrowsWith
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Heir.DiagnosticCode
  commentId: T:Heir.DiagnosticCode
  parent: Heir
  href: Heir.DiagnosticCode.html
  name: DiagnosticCode
  nameWithType: DiagnosticCode
  fullName: Heir.DiagnosticCode
- uid: Heir
  commentId: N:Heir
  href: Heir.html
  name: Heir
  nameWithType: Heir
  fullName: Heir
- uid: Heir.Tests.VirtualMachineTest.Evaluates_NowIntrinsicFunction*
  commentId: Overload:Heir.Tests.VirtualMachineTest.Evaluates_NowIntrinsicFunction
  href: Heir.Tests.VirtualMachineTest.html#Heir_Tests_VirtualMachineTest_Evaluates_NowIntrinsicFunction
  name: Evaluates_NowIntrinsicFunction
  nameWithType: VirtualMachineTest.Evaluates_NowIntrinsicFunction
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_NowIntrinsicFunction
- uid: Heir.Tests.VirtualMachineTest.Evaluates_IfStatements*
  commentId: Overload:Heir.Tests.VirtualMachineTest.Evaluates_IfStatements
  href: Heir.Tests.VirtualMachineTest.html#Heir_Tests_VirtualMachineTest_Evaluates_IfStatements_System_String_System_Double_
  name: Evaluates_IfStatements
  nameWithType: VirtualMachineTest.Evaluates_IfStatements
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_IfStatements
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Heir.Tests.VirtualMachineTest.Evaluates_IncrementDecrement*
  commentId: Overload:Heir.Tests.VirtualMachineTest.Evaluates_IncrementDecrement
  href: Heir.Tests.VirtualMachineTest.html#Heir_Tests_VirtualMachineTest_Evaluates_IncrementDecrement_System_String_System_Object_
  name: Evaluates_IncrementDecrement
  nameWithType: VirtualMachineTest.Evaluates_IncrementDecrement
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_IncrementDecrement
- uid: Heir.Tests.VirtualMachineTest.Evaluates_Assignment*
  commentId: Overload:Heir.Tests.VirtualMachineTest.Evaluates_Assignment
  href: Heir.Tests.VirtualMachineTest.html#Heir_Tests_VirtualMachineTest_Evaluates_Assignment_System_String_System_Object_
  name: Evaluates_Assignment
  nameWithType: VirtualMachineTest.Evaluates_Assignment
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_Assignment
- uid: Heir.Tests.VirtualMachineTest.Evaluates_MemberAccess*
  commentId: Overload:Heir.Tests.VirtualMachineTest.Evaluates_MemberAccess
  href: Heir.Tests.VirtualMachineTest.html#Heir_Tests_VirtualMachineTest_Evaluates_MemberAccess_System_String_System_Object_
  name: Evaluates_MemberAccess
  nameWithType: VirtualMachineTest.Evaluates_MemberAccess
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_MemberAccess
- uid: Heir.Tests.VirtualMachineTest.Evaluates_ElementAccess*
  commentId: Overload:Heir.Tests.VirtualMachineTest.Evaluates_ElementAccess
  href: Heir.Tests.VirtualMachineTest.html#Heir_Tests_VirtualMachineTest_Evaluates_ElementAccess_System_String_System_Object_
  name: Evaluates_ElementAccess
  nameWithType: VirtualMachineTest.Evaluates_ElementAccess
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_ElementAccess
- uid: Heir.Tests.VirtualMachineTest.Evaluates_Invocation*
  commentId: Overload:Heir.Tests.VirtualMachineTest.Evaluates_Invocation
  href: Heir.Tests.VirtualMachineTest.html#Heir_Tests_VirtualMachineTest_Evaluates_Invocation_System_String_System_Object_
  name: Evaluates_Invocation
  nameWithType: VirtualMachineTest.Evaluates_Invocation
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_Invocation
- uid: Heir.Tests.VirtualMachineTest.Evaluates_GeneratorFunction*
  commentId: Overload:Heir.Tests.VirtualMachineTest.Evaluates_GeneratorFunction
  href: Heir.Tests.VirtualMachineTest.html#Heir_Tests_VirtualMachineTest_Evaluates_GeneratorFunction
  name: Evaluates_GeneratorFunction
  nameWithType: VirtualMachineTest.Evaluates_GeneratorFunction
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_GeneratorFunction
- uid: Heir.Tests.VirtualMachineTest.Evaluates_FunctionDeclarations*
  commentId: Overload:Heir.Tests.VirtualMachineTest.Evaluates_FunctionDeclarations
  href: Heir.Tests.VirtualMachineTest.html#Heir_Tests_VirtualMachineTest_Evaluates_FunctionDeclarations
  name: Evaluates_FunctionDeclarations
  nameWithType: VirtualMachineTest.Evaluates_FunctionDeclarations
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_FunctionDeclarations
- uid: Heir.Tests.VirtualMachineTest.Evaluates_VariableDeclarations*
  commentId: Overload:Heir.Tests.VirtualMachineTest.Evaluates_VariableDeclarations
  href: Heir.Tests.VirtualMachineTest.html#Heir_Tests_VirtualMachineTest_Evaluates_VariableDeclarations_System_String_System_String_System_Object_
  name: Evaluates_VariableDeclarations
  nameWithType: VirtualMachineTest.Evaluates_VariableDeclarations
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_VariableDeclarations
- uid: Heir.Tests.VirtualMachineTest.Evaluates_ObjectLiterals*
  commentId: Overload:Heir.Tests.VirtualMachineTest.Evaluates_ObjectLiterals
  href: Heir.Tests.VirtualMachineTest.html#Heir_Tests_VirtualMachineTest_Evaluates_ObjectLiterals_System_String_System_Object_System_Object_
  name: Evaluates_ObjectLiterals
  nameWithType: VirtualMachineTest.Evaluates_ObjectLiterals
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_ObjectLiterals
- uid: Heir.Tests.VirtualMachineTest.Evaluates_EmptyObjectLiterals*
  commentId: Overload:Heir.Tests.VirtualMachineTest.Evaluates_EmptyObjectLiterals
  href: Heir.Tests.VirtualMachineTest.html#Heir_Tests_VirtualMachineTest_Evaluates_EmptyObjectLiterals
  name: Evaluates_EmptyObjectLiterals
  nameWithType: VirtualMachineTest.Evaluates_EmptyObjectLiterals
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_EmptyObjectLiterals
- uid: Heir.Tests.VirtualMachineTest.Evaluates_Literals*
  commentId: Overload:Heir.Tests.VirtualMachineTest.Evaluates_Literals
  href: Heir.Tests.VirtualMachineTest.html#Heir_Tests_VirtualMachineTest_Evaluates_Literals_System_String_System_Object_
  name: Evaluates_Literals
  nameWithType: VirtualMachineTest.Evaluates_Literals
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_Literals
- uid: Heir.Tests.VirtualMachineTest.Evaluates_Arithmetic*
  commentId: Overload:Heir.Tests.VirtualMachineTest.Evaluates_Arithmetic
  href: Heir.Tests.VirtualMachineTest.html#Heir_Tests_VirtualMachineTest_Evaluates_Arithmetic_System_String_System_Object_
  name: Evaluates_Arithmetic
  nameWithType: VirtualMachineTest.Evaluates_Arithmetic
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_Arithmetic
- uid: Heir.Tests.VirtualMachineTest.Evaluates_Logical*
  commentId: Overload:Heir.Tests.VirtualMachineTest.Evaluates_Logical
  href: Heir.Tests.VirtualMachineTest.html#Heir_Tests_VirtualMachineTest_Evaluates_Logical_System_String_System_Object_
  name: Evaluates_Logical
  nameWithType: VirtualMachineTest.Evaluates_Logical
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_Logical
- uid: Heir.Tests.VirtualMachineTest.Evaluates_Comparison*
  commentId: Overload:Heir.Tests.VirtualMachineTest.Evaluates_Comparison
  href: Heir.Tests.VirtualMachineTest.html#Heir_Tests_VirtualMachineTest_Evaluates_Comparison_System_String_System_Object_
  name: Evaluates_Comparison
  nameWithType: VirtualMachineTest.Evaluates_Comparison
  fullName: Heir.Tests.VirtualMachineTest.Evaluates_Comparison
