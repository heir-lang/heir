### YamlMime:ManagedReference
items:
- uid: Heir.Diagnostic
  commentId: T:Heir.Diagnostic
  id: Diagnostic
  parent: Heir
  children:
  - Heir.Diagnostic.#ctor(Heir.SourceFile,Heir.DiagnosticCode,System.String,Heir.Syntax.Location,Heir.Syntax.Location,Heir.DiagnosticLevel)
  - Heir.Diagnostic.Code
  - Heir.Diagnostic.EndLocation
  - Heir.Diagnostic.Level
  - Heir.Diagnostic.Message
  - Heir.Diagnostic.SourceFile
  - Heir.Diagnostic.StartLocation
  - Heir.Diagnostic.ToString(System.Boolean)
  langs:
  - csharp
  - vb
  name: Diagnostic
  nameWithType: Diagnostic
  fullName: Heir.Diagnostic
  type: Class
  source:
    remote:
      path: Heir/Diagnostic.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Diagnostic
    path: Heir/Diagnostic.cs
    startLine: 13
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public sealed class Diagnostic
    content.vb: Public NotInheritable Class Diagnostic
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Heir.Diagnostic.#ctor(Heir.SourceFile,Heir.DiagnosticCode,System.String,Heir.Syntax.Location,Heir.Syntax.Location,Heir.DiagnosticLevel)
  commentId: M:Heir.Diagnostic.#ctor(Heir.SourceFile,Heir.DiagnosticCode,System.String,Heir.Syntax.Location,Heir.Syntax.Location,Heir.DiagnosticLevel)
  id: '#ctor(Heir.SourceFile,Heir.DiagnosticCode,System.String,Heir.Syntax.Location,Heir.Syntax.Location,Heir.DiagnosticLevel)'
  parent: Heir.Diagnostic
  langs:
  - csharp
  - vb
  name: Diagnostic(SourceFile, DiagnosticCode, string, Location, Location, DiagnosticLevel)
  nameWithType: Diagnostic.Diagnostic(SourceFile, DiagnosticCode, string, Location, Location, DiagnosticLevel)
  fullName: Heir.Diagnostic.Diagnostic(Heir.SourceFile, Heir.DiagnosticCode, string, Heir.Syntax.Location, Heir.Syntax.Location, Heir.DiagnosticLevel)
  type: Constructor
  source:
    remote:
      path: Heir/Diagnostic.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: .ctor
    path: Heir/Diagnostic.cs
    startLine: 13
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public Diagnostic(SourceFile sourceFile, DiagnosticCode code, string message, Location startLocation, Location endLocation, DiagnosticLevel level)
    parameters:
    - id: sourceFile
      type: Heir.SourceFile
    - id: code
      type: Heir.DiagnosticCode
    - id: message
      type: System.String
    - id: startLocation
      type: Heir.Syntax.Location
    - id: endLocation
      type: Heir.Syntax.Location
    - id: level
      type: Heir.DiagnosticLevel
    content.vb: Public Sub New(sourceFile As SourceFile, code As DiagnosticCode, message As String, startLocation As Location, endLocation As Location, level As DiagnosticLevel)
  overload: Heir.Diagnostic.#ctor*
  nameWithType.vb: Diagnostic.New(SourceFile, DiagnosticCode, String, Location, Location, DiagnosticLevel)
  fullName.vb: Heir.Diagnostic.New(Heir.SourceFile, Heir.DiagnosticCode, String, Heir.Syntax.Location, Heir.Syntax.Location, Heir.DiagnosticLevel)
  name.vb: New(SourceFile, DiagnosticCode, String, Location, Location, DiagnosticLevel)
- uid: Heir.Diagnostic.SourceFile
  commentId: P:Heir.Diagnostic.SourceFile
  id: SourceFile
  parent: Heir.Diagnostic
  langs:
  - csharp
  - vb
  name: SourceFile
  nameWithType: Diagnostic.SourceFile
  fullName: Heir.Diagnostic.SourceFile
  type: Property
  source:
    remote:
      path: Heir/Diagnostic.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: SourceFile
    path: Heir/Diagnostic.cs
    startLine: 15
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public SourceFile SourceFile { get; }
    parameters: []
    return:
      type: Heir.SourceFile
    content.vb: Public ReadOnly Property SourceFile As SourceFile
  overload: Heir.Diagnostic.SourceFile*
- uid: Heir.Diagnostic.Code
  commentId: P:Heir.Diagnostic.Code
  id: Code
  parent: Heir.Diagnostic
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: Diagnostic.Code
  fullName: Heir.Diagnostic.Code
  type: Property
  source:
    remote:
      path: Heir/Diagnostic.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Code
    path: Heir/Diagnostic.cs
    startLine: 16
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public DiagnosticCode Code { get; }
    parameters: []
    return:
      type: Heir.DiagnosticCode
    content.vb: Public ReadOnly Property Code As DiagnosticCode
  overload: Heir.Diagnostic.Code*
- uid: Heir.Diagnostic.Message
  commentId: P:Heir.Diagnostic.Message
  id: Message
  parent: Heir.Diagnostic
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: Diagnostic.Message
  fullName: Heir.Diagnostic.Message
  type: Property
  source:
    remote:
      path: Heir/Diagnostic.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Message
    path: Heir/Diagnostic.cs
    startLine: 17
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public string Message { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Message As String
  overload: Heir.Diagnostic.Message*
- uid: Heir.Diagnostic.StartLocation
  commentId: P:Heir.Diagnostic.StartLocation
  id: StartLocation
  parent: Heir.Diagnostic
  langs:
  - csharp
  - vb
  name: StartLocation
  nameWithType: Diagnostic.StartLocation
  fullName: Heir.Diagnostic.StartLocation
  type: Property
  source:
    remote:
      path: Heir/Diagnostic.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: StartLocation
    path: Heir/Diagnostic.cs
    startLine: 18
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public Location StartLocation { get; }
    parameters: []
    return:
      type: Heir.Syntax.Location
    content.vb: Public ReadOnly Property StartLocation As Location
  overload: Heir.Diagnostic.StartLocation*
- uid: Heir.Diagnostic.EndLocation
  commentId: P:Heir.Diagnostic.EndLocation
  id: EndLocation
  parent: Heir.Diagnostic
  langs:
  - csharp
  - vb
  name: EndLocation
  nameWithType: Diagnostic.EndLocation
  fullName: Heir.Diagnostic.EndLocation
  type: Property
  source:
    remote:
      path: Heir/Diagnostic.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: EndLocation
    path: Heir/Diagnostic.cs
    startLine: 19
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public Location EndLocation { get; }
    parameters: []
    return:
      type: Heir.Syntax.Location
    content.vb: Public ReadOnly Property EndLocation As Location
  overload: Heir.Diagnostic.EndLocation*
- uid: Heir.Diagnostic.Level
  commentId: P:Heir.Diagnostic.Level
  id: Level
  parent: Heir.Diagnostic
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: Diagnostic.Level
  fullName: Heir.Diagnostic.Level
  type: Property
  source:
    remote:
      path: Heir/Diagnostic.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Level
    path: Heir/Diagnostic.cs
    startLine: 20
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public DiagnosticLevel Level { get; }
    parameters: []
    return:
      type: Heir.DiagnosticLevel
    content.vb: Public ReadOnly Property Level As DiagnosticLevel
  overload: Heir.Diagnostic.Level*
- uid: Heir.Diagnostic.ToString(System.Boolean)
  commentId: M:Heir.Diagnostic.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: Heir.Diagnostic
  langs:
  - csharp
  - vb
  name: ToString(bool)
  nameWithType: Diagnostic.ToString(bool)
  fullName: Heir.Diagnostic.ToString(bool)
  type: Method
  source:
    remote:
      path: Heir/Diagnostic.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: ToString
    path: Heir/Diagnostic.cs
    startLine: 22
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public string ToString(bool colors)
    parameters:
    - id: colors
      type: System.Boolean
    return:
      type: System.String
    content.vb: Public Function ToString(colors As Boolean) As String
  overload: Heir.Diagnostic.ToString*
  nameWithType.vb: Diagnostic.ToString(Boolean)
  fullName.vb: Heir.Diagnostic.ToString(Boolean)
  name.vb: ToString(Boolean)
references:
- uid: Heir
  commentId: N:Heir
  href: Heir.html
  name: Heir
  nameWithType: Heir
  fullName: Heir
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Heir.Diagnostic.#ctor*
  commentId: Overload:Heir.Diagnostic.#ctor
  href: Heir.Diagnostic.html#Heir_Diagnostic__ctor_Heir_SourceFile_Heir_DiagnosticCode_System_String_Heir_Syntax_Location_Heir_Syntax_Location_Heir_DiagnosticLevel_
  name: Diagnostic
  nameWithType: Diagnostic.Diagnostic
  fullName: Heir.Diagnostic.Diagnostic
  nameWithType.vb: Diagnostic.New
  fullName.vb: Heir.Diagnostic.New
  name.vb: New
- uid: Heir.SourceFile
  commentId: T:Heir.SourceFile
  parent: Heir
  href: Heir.SourceFile.html
  name: SourceFile
  nameWithType: SourceFile
  fullName: Heir.SourceFile
- uid: Heir.DiagnosticCode
  commentId: T:Heir.DiagnosticCode
  parent: Heir
  href: Heir.DiagnosticCode.html
  name: DiagnosticCode
  nameWithType: DiagnosticCode
  fullName: Heir.DiagnosticCode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Heir.Syntax.Location
  commentId: T:Heir.Syntax.Location
  parent: Heir.Syntax
  href: Heir.Syntax.Location.html
  name: Location
  nameWithType: Location
  fullName: Heir.Syntax.Location
- uid: Heir.DiagnosticLevel
  commentId: T:Heir.DiagnosticLevel
  parent: Heir
  href: Heir.DiagnosticLevel.html
  name: DiagnosticLevel
  nameWithType: DiagnosticLevel
  fullName: Heir.DiagnosticLevel
- uid: Heir.Syntax
  commentId: N:Heir.Syntax
  href: Heir.html
  name: Heir.Syntax
  nameWithType: Heir.Syntax
  fullName: Heir.Syntax
  spec.csharp:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.Syntax
    name: Syntax
    href: Heir.Syntax.html
  spec.vb:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.Syntax
    name: Syntax
    href: Heir.Syntax.html
- uid: Heir.Diagnostic.SourceFile*
  commentId: Overload:Heir.Diagnostic.SourceFile
  href: Heir.Diagnostic.html#Heir_Diagnostic_SourceFile
  name: SourceFile
  nameWithType: Diagnostic.SourceFile
  fullName: Heir.Diagnostic.SourceFile
- uid: Heir.Diagnostic.Code*
  commentId: Overload:Heir.Diagnostic.Code
  href: Heir.Diagnostic.html#Heir_Diagnostic_Code
  name: Code
  nameWithType: Diagnostic.Code
  fullName: Heir.Diagnostic.Code
- uid: Heir.Diagnostic.Message*
  commentId: Overload:Heir.Diagnostic.Message
  href: Heir.Diagnostic.html#Heir_Diagnostic_Message
  name: Message
  nameWithType: Diagnostic.Message
  fullName: Heir.Diagnostic.Message
- uid: Heir.Diagnostic.StartLocation*
  commentId: Overload:Heir.Diagnostic.StartLocation
  href: Heir.Diagnostic.html#Heir_Diagnostic_StartLocation
  name: StartLocation
  nameWithType: Diagnostic.StartLocation
  fullName: Heir.Diagnostic.StartLocation
- uid: Heir.Diagnostic.EndLocation*
  commentId: Overload:Heir.Diagnostic.EndLocation
  href: Heir.Diagnostic.html#Heir_Diagnostic_EndLocation
  name: EndLocation
  nameWithType: Diagnostic.EndLocation
  fullName: Heir.Diagnostic.EndLocation
- uid: Heir.Diagnostic.Level*
  commentId: Overload:Heir.Diagnostic.Level
  href: Heir.Diagnostic.html#Heir_Diagnostic_Level
  name: Level
  nameWithType: Diagnostic.Level
  fullName: Heir.Diagnostic.Level
- uid: Heir.Diagnostic.ToString*
  commentId: Overload:Heir.Diagnostic.ToString
  href: Heir.Diagnostic.html#Heir_Diagnostic_ToString_System_Boolean_
  name: ToString
  nameWithType: Diagnostic.ToString
  fullName: Heir.Diagnostic.ToString
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
