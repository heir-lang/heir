### YamlMime:ManagedReference
items:
- uid: Heir.Syntax.TokenStream
  commentId: T:Heir.Syntax.TokenStream
  id: TokenStream
  parent: Heir.Syntax
  children:
  - Heir.Syntax.TokenStream.#ctor(Heir.DiagnosticBag,System.Collections.Generic.List{Heir.Syntax.Token})
  - Heir.Syntax.TokenStream.Advance
  - Heir.Syntax.TokenStream.Check(Heir.Syntax.SyntaxKind,System.Int32)
  - Heir.Syntax.TokenStream.CheckSequential(System.Collections.Generic.HashSet{Heir.Syntax.SyntaxKind},System.Int32)
  - Heir.Syntax.TokenStream.CheckSet(System.Collections.Generic.HashSet{Heir.Syntax.SyntaxKind},System.Int32)
  - Heir.Syntax.TokenStream.Consume(Heir.Syntax.SyntaxKind)
  - Heir.Syntax.TokenStream.ConsumeType
  - Heir.Syntax.TokenStream.Current
  - Heir.Syntax.TokenStream.Diagnostics
  - Heir.Syntax.TokenStream.GetEnumerator
  - Heir.Syntax.TokenStream.IsAtEnd
  - Heir.Syntax.TokenStream.Match(Heir.Syntax.SyntaxKind)
  - Heir.Syntax.TokenStream.Match(Heir.Syntax.SyntaxKind,Heir.Syntax.Token@)
  - Heir.Syntax.TokenStream.Peek(System.Int32)
  - Heir.Syntax.TokenStream.Previous
  - Heir.Syntax.TokenStream.ToString
  - Heir.Syntax.TokenStream.WithoutTrivia
  langs:
  - csharp
  - vb
  name: TokenStream
  nameWithType: TokenStream
  fullName: Heir.Syntax.TokenStream
  type: Class
  source:
    remote:
      path: Heir/Syntax/TokenStream.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: TokenStream
    path: Heir/Syntax/TokenStream.cs
    startLine: 5
  assemblies:
  - Heir
  namespace: Heir.Syntax
  syntax:
    content: 'public class TokenStream : IEnumerable<Token>, IEnumerable'
    content.vb: Public Class TokenStream Implements IEnumerable(Of Token), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{Heir.Syntax.Token}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Heir.Syntax.TokenStream.#ctor(Heir.DiagnosticBag,System.Collections.Generic.List{Heir.Syntax.Token})
  commentId: M:Heir.Syntax.TokenStream.#ctor(Heir.DiagnosticBag,System.Collections.Generic.List{Heir.Syntax.Token})
  id: '#ctor(Heir.DiagnosticBag,System.Collections.Generic.List{Heir.Syntax.Token})'
  parent: Heir.Syntax.TokenStream
  langs:
  - csharp
  - vb
  name: TokenStream(DiagnosticBag, List<Token>)
  nameWithType: TokenStream.TokenStream(DiagnosticBag, List<Token>)
  fullName: Heir.Syntax.TokenStream.TokenStream(Heir.DiagnosticBag, System.Collections.Generic.List<Heir.Syntax.Token>)
  type: Constructor
  source:
    remote:
      path: Heir/Syntax/TokenStream.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: .ctor
    path: Heir/Syntax/TokenStream.cs
    startLine: 5
  assemblies:
  - Heir
  namespace: Heir.Syntax
  syntax:
    content: public TokenStream(DiagnosticBag diagnostics, List<Token> tokens)
    parameters:
    - id: diagnostics
      type: Heir.DiagnosticBag
    - id: tokens
      type: System.Collections.Generic.List{Heir.Syntax.Token}
    content.vb: Public Sub New(diagnostics As DiagnosticBag, tokens As List(Of Token))
  overload: Heir.Syntax.TokenStream.#ctor*
  nameWithType.vb: TokenStream.New(DiagnosticBag, List(Of Token))
  fullName.vb: Heir.Syntax.TokenStream.New(Heir.DiagnosticBag, System.Collections.Generic.List(Of Heir.Syntax.Token))
  name.vb: New(DiagnosticBag, List(Of Token))
- uid: Heir.Syntax.TokenStream.Diagnostics
  commentId: F:Heir.Syntax.TokenStream.Diagnostics
  id: Diagnostics
  parent: Heir.Syntax.TokenStream
  langs:
  - csharp
  - vb
  name: Diagnostics
  nameWithType: TokenStream.Diagnostics
  fullName: Heir.Syntax.TokenStream.Diagnostics
  type: Field
  source:
    remote:
      path: Heir/Syntax/TokenStream.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Diagnostics
    path: Heir/Syntax/TokenStream.cs
    startLine: 7
  assemblies:
  - Heir
  namespace: Heir.Syntax
  syntax:
    content: public readonly DiagnosticBag Diagnostics
    return:
      type: Heir.DiagnosticBag
    content.vb: Public ReadOnly Diagnostics As DiagnosticBag
- uid: Heir.Syntax.TokenStream.IsAtEnd
  commentId: P:Heir.Syntax.TokenStream.IsAtEnd
  id: IsAtEnd
  parent: Heir.Syntax.TokenStream
  langs:
  - csharp
  - vb
  name: IsAtEnd
  nameWithType: TokenStream.IsAtEnd
  fullName: Heir.Syntax.TokenStream.IsAtEnd
  type: Property
  source:
    remote:
      path: Heir/Syntax/TokenStream.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: IsAtEnd
    path: Heir/Syntax/TokenStream.cs
    startLine: 8
  assemblies:
  - Heir
  namespace: Heir.Syntax
  syntax:
    content: public bool IsAtEnd { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAtEnd As Boolean
  overload: Heir.Syntax.TokenStream.IsAtEnd*
- uid: Heir.Syntax.TokenStream.Current
  commentId: P:Heir.Syntax.TokenStream.Current
  id: Current
  parent: Heir.Syntax.TokenStream
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: TokenStream.Current
  fullName: Heir.Syntax.TokenStream.Current
  type: Property
  source:
    remote:
      path: Heir/Syntax/TokenStream.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Current
    path: Heir/Syntax/TokenStream.cs
    startLine: 9
  assemblies:
  - Heir
  namespace: Heir.Syntax
  syntax:
    content: public Token Current { get; }
    parameters: []
    return:
      type: Heir.Syntax.Token
    content.vb: Public ReadOnly Property Current As Token
  overload: Heir.Syntax.TokenStream.Current*
- uid: Heir.Syntax.TokenStream.Previous
  commentId: P:Heir.Syntax.TokenStream.Previous
  id: Previous
  parent: Heir.Syntax.TokenStream
  langs:
  - csharp
  - vb
  name: Previous
  nameWithType: TokenStream.Previous
  fullName: Heir.Syntax.TokenStream.Previous
  type: Property
  source:
    remote:
      path: Heir/Syntax/TokenStream.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Previous
    path: Heir/Syntax/TokenStream.cs
    startLine: 10
  assemblies:
  - Heir
  namespace: Heir.Syntax
  syntax:
    content: public Token? Previous { get; }
    parameters: []
    return:
      type: Heir.Syntax.Token
    content.vb: Public ReadOnly Property Previous As Token
  overload: Heir.Syntax.TokenStream.Previous*
- uid: Heir.Syntax.TokenStream.WithoutTrivia
  commentId: M:Heir.Syntax.TokenStream.WithoutTrivia
  id: WithoutTrivia
  parent: Heir.Syntax.TokenStream
  langs:
  - csharp
  - vb
  name: WithoutTrivia()
  nameWithType: TokenStream.WithoutTrivia()
  fullName: Heir.Syntax.TokenStream.WithoutTrivia()
  type: Method
  source:
    remote:
      path: Heir/Syntax/TokenStream.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: WithoutTrivia
    path: Heir/Syntax/TokenStream.cs
    startLine: 15
  assemblies:
  - Heir
  namespace: Heir.Syntax
  syntax:
    content: public TokenStream WithoutTrivia()
    return:
      type: Heir.Syntax.TokenStream
    content.vb: Public Function WithoutTrivia() As TokenStream
  overload: Heir.Syntax.TokenStream.WithoutTrivia*
- uid: Heir.Syntax.TokenStream.Match(Heir.Syntax.SyntaxKind)
  commentId: M:Heir.Syntax.TokenStream.Match(Heir.Syntax.SyntaxKind)
  id: Match(Heir.Syntax.SyntaxKind)
  parent: Heir.Syntax.TokenStream
  langs:
  - csharp
  - vb
  name: Match(SyntaxKind)
  nameWithType: TokenStream.Match(SyntaxKind)
  fullName: Heir.Syntax.TokenStream.Match(Heir.Syntax.SyntaxKind)
  type: Method
  source:
    remote:
      path: Heir/Syntax/TokenStream.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Match
    path: Heir/Syntax/TokenStream.cs
    startLine: 20
  assemblies:
  - Heir
  namespace: Heir.Syntax
  syntax:
    content: public bool Match(SyntaxKind kind)
    parameters:
    - id: kind
      type: Heir.Syntax.SyntaxKind
    return:
      type: System.Boolean
    content.vb: Public Function Match(kind As SyntaxKind) As Boolean
  overload: Heir.Syntax.TokenStream.Match*
- uid: Heir.Syntax.TokenStream.Match(Heir.Syntax.SyntaxKind,Heir.Syntax.Token@)
  commentId: M:Heir.Syntax.TokenStream.Match(Heir.Syntax.SyntaxKind,Heir.Syntax.Token@)
  id: Match(Heir.Syntax.SyntaxKind,Heir.Syntax.Token@)
  parent: Heir.Syntax.TokenStream
  langs:
  - csharp
  - vb
  name: Match(SyntaxKind, out Token)
  nameWithType: TokenStream.Match(SyntaxKind, out Token)
  fullName: Heir.Syntax.TokenStream.Match(Heir.Syntax.SyntaxKind, out Heir.Syntax.Token)
  type: Method
  source:
    remote:
      path: Heir/Syntax/TokenStream.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Match
    path: Heir/Syntax/TokenStream.cs
    startLine: 22
  assemblies:
  - Heir
  namespace: Heir.Syntax
  syntax:
    content: public bool Match(SyntaxKind kind, out Token matchedToken)
    parameters:
    - id: kind
      type: Heir.Syntax.SyntaxKind
    - id: matchedToken
      type: Heir.Syntax.Token
    return:
      type: System.Boolean
    content.vb: Public Function Match(kind As SyntaxKind, matchedToken As Token) As Boolean
  overload: Heir.Syntax.TokenStream.Match*
  nameWithType.vb: TokenStream.Match(SyntaxKind, Token)
  fullName.vb: Heir.Syntax.TokenStream.Match(Heir.Syntax.SyntaxKind, Heir.Syntax.Token)
  name.vb: Match(SyntaxKind, Token)
- uid: Heir.Syntax.TokenStream.CheckSequential(System.Collections.Generic.HashSet{Heir.Syntax.SyntaxKind},System.Int32)
  commentId: M:Heir.Syntax.TokenStream.CheckSequential(System.Collections.Generic.HashSet{Heir.Syntax.SyntaxKind},System.Int32)
  id: CheckSequential(System.Collections.Generic.HashSet{Heir.Syntax.SyntaxKind},System.Int32)
  parent: Heir.Syntax.TokenStream
  langs:
  - csharp
  - vb
  name: CheckSequential(HashSet<SyntaxKind>, int)
  nameWithType: TokenStream.CheckSequential(HashSet<SyntaxKind>, int)
  fullName: Heir.Syntax.TokenStream.CheckSequential(System.Collections.Generic.HashSet<Heir.Syntax.SyntaxKind>, int)
  type: Method
  source:
    remote:
      path: Heir/Syntax/TokenStream.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: CheckSequential
    path: Heir/Syntax/TokenStream.cs
    startLine: 32
  assemblies:
  - Heir
  namespace: Heir.Syntax
  syntax:
    content: public bool CheckSequential(HashSet<SyntaxKind> kinds, int startOffset = 0)
    parameters:
    - id: kinds
      type: System.Collections.Generic.HashSet{Heir.Syntax.SyntaxKind}
    - id: startOffset
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function CheckSequential(kinds As HashSet(Of SyntaxKind), startOffset As Integer = 0) As Boolean
  overload: Heir.Syntax.TokenStream.CheckSequential*
  nameWithType.vb: TokenStream.CheckSequential(HashSet(Of SyntaxKind), Integer)
  fullName.vb: Heir.Syntax.TokenStream.CheckSequential(System.Collections.Generic.HashSet(Of Heir.Syntax.SyntaxKind), Integer)
  name.vb: CheckSequential(HashSet(Of SyntaxKind), Integer)
- uid: Heir.Syntax.TokenStream.CheckSet(System.Collections.Generic.HashSet{Heir.Syntax.SyntaxKind},System.Int32)
  commentId: M:Heir.Syntax.TokenStream.CheckSet(System.Collections.Generic.HashSet{Heir.Syntax.SyntaxKind},System.Int32)
  id: CheckSet(System.Collections.Generic.HashSet{Heir.Syntax.SyntaxKind},System.Int32)
  parent: Heir.Syntax.TokenStream
  langs:
  - csharp
  - vb
  name: CheckSet(HashSet<SyntaxKind>, int)
  nameWithType: TokenStream.CheckSet(HashSet<SyntaxKind>, int)
  fullName: Heir.Syntax.TokenStream.CheckSet(System.Collections.Generic.HashSet<Heir.Syntax.SyntaxKind>, int)
  type: Method
  source:
    remote:
      path: Heir/Syntax/TokenStream.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: CheckSet
    path: Heir/Syntax/TokenStream.cs
    startLine: 38
  assemblies:
  - Heir
  namespace: Heir.Syntax
  syntax:
    content: public bool CheckSet(HashSet<SyntaxKind> kinds, int offset = 0)
    parameters:
    - id: kinds
      type: System.Collections.Generic.HashSet{Heir.Syntax.SyntaxKind}
    - id: offset
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function CheckSet(kinds As HashSet(Of SyntaxKind), offset As Integer = 0) As Boolean
  overload: Heir.Syntax.TokenStream.CheckSet*
  nameWithType.vb: TokenStream.CheckSet(HashSet(Of SyntaxKind), Integer)
  fullName.vb: Heir.Syntax.TokenStream.CheckSet(System.Collections.Generic.HashSet(Of Heir.Syntax.SyntaxKind), Integer)
  name.vb: CheckSet(HashSet(Of SyntaxKind), Integer)
- uid: Heir.Syntax.TokenStream.Check(Heir.Syntax.SyntaxKind,System.Int32)
  commentId: M:Heir.Syntax.TokenStream.Check(Heir.Syntax.SyntaxKind,System.Int32)
  id: Check(Heir.Syntax.SyntaxKind,System.Int32)
  parent: Heir.Syntax.TokenStream
  langs:
  - csharp
  - vb
  name: Check(SyntaxKind, int)
  nameWithType: TokenStream.Check(SyntaxKind, int)
  fullName: Heir.Syntax.TokenStream.Check(Heir.Syntax.SyntaxKind, int)
  type: Method
  source:
    remote:
      path: Heir/Syntax/TokenStream.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Check
    path: Heir/Syntax/TokenStream.cs
    startLine: 40
  assemblies:
  - Heir
  namespace: Heir.Syntax
  syntax:
    content: public bool Check(SyntaxKind kind, int offset = 0)
    parameters:
    - id: kind
      type: Heir.Syntax.SyntaxKind
    - id: offset
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function Check(kind As SyntaxKind, offset As Integer = 0) As Boolean
  overload: Heir.Syntax.TokenStream.Check*
  nameWithType.vb: TokenStream.Check(SyntaxKind, Integer)
  fullName.vb: Heir.Syntax.TokenStream.Check(Heir.Syntax.SyntaxKind, Integer)
  name.vb: Check(SyntaxKind, Integer)
- uid: Heir.Syntax.TokenStream.ConsumeType
  commentId: M:Heir.Syntax.TokenStream.ConsumeType
  id: ConsumeType
  parent: Heir.Syntax.TokenStream
  langs:
  - csharp
  - vb
  name: ConsumeType()
  nameWithType: TokenStream.ConsumeType()
  fullName: Heir.Syntax.TokenStream.ConsumeType()
  type: Method
  source:
    remote:
      path: Heir/Syntax/TokenStream.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: ConsumeType
    path: Heir/Syntax/TokenStream.cs
    startLine: 46
  assemblies:
  - Heir
  namespace: Heir.Syntax
  syntax:
    content: public Token? ConsumeType()
    return:
      type: Heir.Syntax.Token
    content.vb: Public Function ConsumeType() As Token
  overload: Heir.Syntax.TokenStream.ConsumeType*
- uid: Heir.Syntax.TokenStream.Consume(Heir.Syntax.SyntaxKind)
  commentId: M:Heir.Syntax.TokenStream.Consume(Heir.Syntax.SyntaxKind)
  id: Consume(Heir.Syntax.SyntaxKind)
  parent: Heir.Syntax.TokenStream
  langs:
  - csharp
  - vb
  name: Consume(SyntaxKind)
  nameWithType: TokenStream.Consume(SyntaxKind)
  fullName: Heir.Syntax.TokenStream.Consume(Heir.Syntax.SyntaxKind)
  type: Method
  source:
    remote:
      path: Heir/Syntax/TokenStream.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Consume
    path: Heir/Syntax/TokenStream.cs
    startLine: 60
  assemblies:
  - Heir
  namespace: Heir.Syntax
  syntax:
    content: public Token? Consume(SyntaxKind kind)
    parameters:
    - id: kind
      type: Heir.Syntax.SyntaxKind
    return:
      type: Heir.Syntax.Token
    content.vb: Public Function Consume(kind As SyntaxKind) As Token
  overload: Heir.Syntax.TokenStream.Consume*
- uid: Heir.Syntax.TokenStream.Advance
  commentId: M:Heir.Syntax.TokenStream.Advance
  id: Advance
  parent: Heir.Syntax.TokenStream
  langs:
  - csharp
  - vb
  name: Advance()
  nameWithType: TokenStream.Advance()
  fullName: Heir.Syntax.TokenStream.Advance()
  type: Method
  source:
    remote:
      path: Heir/Syntax/TokenStream.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Advance
    path: Heir/Syntax/TokenStream.cs
    startLine: 71
  assemblies:
  - Heir
  namespace: Heir.Syntax
  syntax:
    content: public Token? Advance()
    return:
      type: Heir.Syntax.Token
    content.vb: Public Function Advance() As Token
  overload: Heir.Syntax.TokenStream.Advance*
- uid: Heir.Syntax.TokenStream.Peek(System.Int32)
  commentId: M:Heir.Syntax.TokenStream.Peek(System.Int32)
  id: Peek(System.Int32)
  parent: Heir.Syntax.TokenStream
  langs:
  - csharp
  - vb
  name: Peek(int)
  nameWithType: TokenStream.Peek(int)
  fullName: Heir.Syntax.TokenStream.Peek(int)
  type: Method
  source:
    remote:
      path: Heir/Syntax/TokenStream.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Peek
    path: Heir/Syntax/TokenStream.cs
    startLine: 78
  assemblies:
  - Heir
  namespace: Heir.Syntax
  syntax:
    content: public Token? Peek(int offset)
    parameters:
    - id: offset
      type: System.Int32
    return:
      type: Heir.Syntax.Token
    content.vb: Public Function Peek(offset As Integer) As Token
  overload: Heir.Syntax.TokenStream.Peek*
  nameWithType.vb: TokenStream.Peek(Integer)
  fullName.vb: Heir.Syntax.TokenStream.Peek(Integer)
  name.vb: Peek(Integer)
- uid: Heir.Syntax.TokenStream.ToString
  commentId: M:Heir.Syntax.TokenStream.ToString
  id: ToString
  parent: Heir.Syntax.TokenStream
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TokenStream.ToString()
  fullName: Heir.Syntax.TokenStream.ToString()
  type: Method
  source:
    remote:
      path: Heir/Syntax/TokenStream.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: ToString
    path: Heir/Syntax/TokenStream.cs
    startLine: 80
  assemblies:
  - Heir
  namespace: Heir.Syntax
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Heir.Syntax.TokenStream.ToString*
- uid: Heir.Syntax.TokenStream.GetEnumerator
  commentId: M:Heir.Syntax.TokenStream.GetEnumerator
  id: GetEnumerator
  parent: Heir.Syntax.TokenStream
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: TokenStream.GetEnumerator()
  fullName: Heir.Syntax.TokenStream.GetEnumerator()
  type: Method
  source:
    remote:
      path: Heir/Syntax/TokenStream.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: GetEnumerator
    path: Heir/Syntax/TokenStream.cs
    startLine: 89
  assemblies:
  - Heir
  namespace: Heir.Syntax
  summary: Returns an enumerator that iterates through the collection.
  example: []
  syntax:
    content: public IEnumerator<Token> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{Heir.Syntax.Token}
      description: An enumerator that can be used to iterate through the collection.
    content.vb: Public Function GetEnumerator() As IEnumerator(Of Token)
  overload: Heir.Syntax.TokenStream.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{Heir.Syntax.Token}.GetEnumerator
references:
- uid: Heir.Syntax
  commentId: N:Heir.Syntax
  href: Heir.html
  name: Heir.Syntax
  nameWithType: Heir.Syntax
  fullName: Heir.Syntax
  spec.csharp:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.Syntax
    name: Syntax
    href: Heir.Syntax.html
  spec.vb:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.Syntax
    name: Syntax
    href: Heir.Syntax.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IEnumerable{Heir.Syntax.Token}
  commentId: T:System.Collections.Generic.IEnumerable{Heir.Syntax.Token}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Token>
  nameWithType: IEnumerable<Token>
  fullName: System.Collections.Generic.IEnumerable<Heir.Syntax.Token>
  nameWithType.vb: IEnumerable(Of Token)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Heir.Syntax.Token)
  name.vb: IEnumerable(Of Token)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Heir.Syntax.Token
    name: Token
    href: Heir.Syntax.Token.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Heir.Syntax.Token
    name: Token
    href: Heir.Syntax.Token.html
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: Heir.Syntax.TokenStream.#ctor*
  commentId: Overload:Heir.Syntax.TokenStream.#ctor
  href: Heir.Syntax.TokenStream.html#Heir_Syntax_TokenStream__ctor_Heir_DiagnosticBag_System_Collections_Generic_List_Heir_Syntax_Token__
  name: TokenStream
  nameWithType: TokenStream.TokenStream
  fullName: Heir.Syntax.TokenStream.TokenStream
  nameWithType.vb: TokenStream.New
  fullName.vb: Heir.Syntax.TokenStream.New
  name.vb: New
- uid: Heir.DiagnosticBag
  commentId: T:Heir.DiagnosticBag
  parent: Heir
  href: Heir.DiagnosticBag.html
  name: DiagnosticBag
  nameWithType: DiagnosticBag
  fullName: Heir.DiagnosticBag
- uid: System.Collections.Generic.List{Heir.Syntax.Token}
  commentId: T:System.Collections.Generic.List{Heir.Syntax.Token}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Token>
  nameWithType: List<Token>
  fullName: System.Collections.Generic.List<Heir.Syntax.Token>
  nameWithType.vb: List(Of Token)
  fullName.vb: System.Collections.Generic.List(Of Heir.Syntax.Token)
  name.vb: List(Of Token)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Heir.Syntax.Token
    name: Token
    href: Heir.Syntax.Token.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Heir.Syntax.Token
    name: Token
    href: Heir.Syntax.Token.html
  - name: )
- uid: Heir
  commentId: N:Heir
  href: Heir.html
  name: Heir
  nameWithType: Heir
  fullName: Heir
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Heir.Syntax.TokenStream.IsAtEnd*
  commentId: Overload:Heir.Syntax.TokenStream.IsAtEnd
  href: Heir.Syntax.TokenStream.html#Heir_Syntax_TokenStream_IsAtEnd
  name: IsAtEnd
  nameWithType: TokenStream.IsAtEnd
  fullName: Heir.Syntax.TokenStream.IsAtEnd
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Heir.Syntax.TokenStream.Current*
  commentId: Overload:Heir.Syntax.TokenStream.Current
  href: Heir.Syntax.TokenStream.html#Heir_Syntax_TokenStream_Current
  name: Current
  nameWithType: TokenStream.Current
  fullName: Heir.Syntax.TokenStream.Current
- uid: Heir.Syntax.Token
  commentId: T:Heir.Syntax.Token
  parent: Heir.Syntax
  href: Heir.Syntax.Token.html
  name: Token
  nameWithType: Token
  fullName: Heir.Syntax.Token
- uid: Heir.Syntax.TokenStream.Previous*
  commentId: Overload:Heir.Syntax.TokenStream.Previous
  href: Heir.Syntax.TokenStream.html#Heir_Syntax_TokenStream_Previous
  name: Previous
  nameWithType: TokenStream.Previous
  fullName: Heir.Syntax.TokenStream.Previous
- uid: Heir.Syntax.TokenStream.WithoutTrivia*
  commentId: Overload:Heir.Syntax.TokenStream.WithoutTrivia
  href: Heir.Syntax.TokenStream.html#Heir_Syntax_TokenStream_WithoutTrivia
  name: WithoutTrivia
  nameWithType: TokenStream.WithoutTrivia
  fullName: Heir.Syntax.TokenStream.WithoutTrivia
- uid: Heir.Syntax.TokenStream
  commentId: T:Heir.Syntax.TokenStream
  parent: Heir.Syntax
  href: Heir.Syntax.TokenStream.html
  name: TokenStream
  nameWithType: TokenStream
  fullName: Heir.Syntax.TokenStream
- uid: Heir.Syntax.TokenStream.Match*
  commentId: Overload:Heir.Syntax.TokenStream.Match
  href: Heir.Syntax.TokenStream.html#Heir_Syntax_TokenStream_Match_Heir_Syntax_SyntaxKind_
  name: Match
  nameWithType: TokenStream.Match
  fullName: Heir.Syntax.TokenStream.Match
- uid: Heir.Syntax.SyntaxKind
  commentId: T:Heir.Syntax.SyntaxKind
  parent: Heir.Syntax
  href: Heir.Syntax.SyntaxKind.html
  name: SyntaxKind
  nameWithType: SyntaxKind
  fullName: Heir.Syntax.SyntaxKind
- uid: Heir.Syntax.TokenStream.CheckSequential*
  commentId: Overload:Heir.Syntax.TokenStream.CheckSequential
  href: Heir.Syntax.TokenStream.html#Heir_Syntax_TokenStream_CheckSequential_System_Collections_Generic_HashSet_Heir_Syntax_SyntaxKind__System_Int32_
  name: CheckSequential
  nameWithType: TokenStream.CheckSequential
  fullName: Heir.Syntax.TokenStream.CheckSequential
- uid: System.Collections.Generic.HashSet{Heir.Syntax.SyntaxKind}
  commentId: T:System.Collections.Generic.HashSet{Heir.Syntax.SyntaxKind}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<SyntaxKind>
  nameWithType: HashSet<SyntaxKind>
  fullName: System.Collections.Generic.HashSet<Heir.Syntax.SyntaxKind>
  nameWithType.vb: HashSet(Of SyntaxKind)
  fullName.vb: System.Collections.Generic.HashSet(Of Heir.Syntax.SyntaxKind)
  name.vb: HashSet(Of SyntaxKind)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: Heir.Syntax.SyntaxKind
    name: SyntaxKind
    href: Heir.Syntax.SyntaxKind.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: Heir.Syntax.SyntaxKind
    name: SyntaxKind
    href: Heir.Syntax.SyntaxKind.html
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Heir.Syntax.TokenStream.CheckSet*
  commentId: Overload:Heir.Syntax.TokenStream.CheckSet
  href: Heir.Syntax.TokenStream.html#Heir_Syntax_TokenStream_CheckSet_System_Collections_Generic_HashSet_Heir_Syntax_SyntaxKind__System_Int32_
  name: CheckSet
  nameWithType: TokenStream.CheckSet
  fullName: Heir.Syntax.TokenStream.CheckSet
- uid: Heir.Syntax.TokenStream.Check*
  commentId: Overload:Heir.Syntax.TokenStream.Check
  href: Heir.Syntax.TokenStream.html#Heir_Syntax_TokenStream_Check_Heir_Syntax_SyntaxKind_System_Int32_
  name: Check
  nameWithType: TokenStream.Check
  fullName: Heir.Syntax.TokenStream.Check
- uid: Heir.Syntax.TokenStream.ConsumeType*
  commentId: Overload:Heir.Syntax.TokenStream.ConsumeType
  href: Heir.Syntax.TokenStream.html#Heir_Syntax_TokenStream_ConsumeType
  name: ConsumeType
  nameWithType: TokenStream.ConsumeType
  fullName: Heir.Syntax.TokenStream.ConsumeType
- uid: Heir.Syntax.TokenStream.Consume*
  commentId: Overload:Heir.Syntax.TokenStream.Consume
  href: Heir.Syntax.TokenStream.html#Heir_Syntax_TokenStream_Consume_Heir_Syntax_SyntaxKind_
  name: Consume
  nameWithType: TokenStream.Consume
  fullName: Heir.Syntax.TokenStream.Consume
- uid: Heir.Syntax.TokenStream.Advance*
  commentId: Overload:Heir.Syntax.TokenStream.Advance
  href: Heir.Syntax.TokenStream.html#Heir_Syntax_TokenStream_Advance
  name: Advance
  nameWithType: TokenStream.Advance
  fullName: Heir.Syntax.TokenStream.Advance
- uid: Heir.Syntax.TokenStream.Peek*
  commentId: Overload:Heir.Syntax.TokenStream.Peek
  href: Heir.Syntax.TokenStream.html#Heir_Syntax_TokenStream_Peek_System_Int32_
  name: Peek
  nameWithType: TokenStream.Peek
  fullName: Heir.Syntax.TokenStream.Peek
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Heir.Syntax.TokenStream.ToString*
  commentId: Overload:Heir.Syntax.TokenStream.ToString
  href: Heir.Syntax.TokenStream.html#Heir_Syntax_TokenStream_ToString
  name: ToString
  nameWithType: TokenStream.ToString
  fullName: Heir.Syntax.TokenStream.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Heir.Syntax.TokenStream.GetEnumerator*
  commentId: Overload:Heir.Syntax.TokenStream.GetEnumerator
  href: Heir.Syntax.TokenStream.html#Heir_Syntax_TokenStream_GetEnumerator
  name: GetEnumerator
  nameWithType: TokenStream.GetEnumerator
  fullName: Heir.Syntax.TokenStream.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{Heir.Syntax.Token}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{Heir.Syntax.Token}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{Heir.Syntax.Token}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<Token>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<Heir.Syntax.Token>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of Token).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of Heir.Syntax.Token).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{Heir.Syntax.Token}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{Heir.Syntax.Token}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{Heir.Syntax.Token}
  commentId: T:System.Collections.Generic.IEnumerator{Heir.Syntax.Token}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<Token>
  nameWithType: IEnumerator<Token>
  fullName: System.Collections.Generic.IEnumerator<Heir.Syntax.Token>
  nameWithType.vb: IEnumerator(Of Token)
  fullName.vb: System.Collections.Generic.IEnumerator(Of Heir.Syntax.Token)
  name.vb: IEnumerator(Of Token)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: Heir.Syntax.Token
    name: Token
    href: Heir.Syntax.Token.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: Heir.Syntax.Token
    name: Token
    href: Heir.Syntax.Token.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
