### YamlMime:ManagedReference
items:
- uid: Heir.SourceFile
  commentId: T:Heir.SourceFile
  id: SourceFile
  parent: Heir
  children:
  - Heir.SourceFile.#ctor(System.String,System.String,System.Boolean)
  - Heir.SourceFile.Bind(System.Boolean)
  - Heir.SourceFile.Diagnostics
  - Heir.SourceFile.Evaluate
  - Heir.SourceFile.FromPath(System.String,System.Boolean)
  - Heir.SourceFile.GenerateBytecode
  - Heir.SourceFile.IsMainFile
  - Heir.SourceFile.Parse
  - Heir.SourceFile.Path
  - Heir.SourceFile.Resolve
  - Heir.SourceFile.Source
  - Heir.SourceFile.Tokenize
  - Heir.SourceFile.TypeCheck
  langs:
  - csharp
  - vb
  name: SourceFile
  nameWithType: SourceFile
  fullName: Heir.SourceFile
  type: Class
  source:
    remote:
      path: Heir/SourceFile.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: SourceFile
    path: Heir/SourceFile.cs
    startLine: 7
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public sealed class SourceFile
    content.vb: Public NotInheritable Class SourceFile
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Heir.SourceFile.Diagnostics
  commentId: P:Heir.SourceFile.Diagnostics
  id: Diagnostics
  parent: Heir.SourceFile
  langs:
  - csharp
  - vb
  name: Diagnostics
  nameWithType: SourceFile.Diagnostics
  fullName: Heir.SourceFile.Diagnostics
  type: Property
  source:
    remote:
      path: Heir/SourceFile.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Diagnostics
    path: Heir/SourceFile.cs
    startLine: 9
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public DiagnosticBag Diagnostics { get; }
    parameters: []
    return:
      type: Heir.DiagnosticBag
    content.vb: Public ReadOnly Property Diagnostics As DiagnosticBag
  overload: Heir.SourceFile.Diagnostics*
- uid: Heir.SourceFile.Source
  commentId: P:Heir.SourceFile.Source
  id: Source
  parent: Heir.SourceFile
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: SourceFile.Source
  fullName: Heir.SourceFile.Source
  type: Property
  source:
    remote:
      path: Heir/SourceFile.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Source
    path: Heir/SourceFile.cs
    startLine: 10
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public string Source { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Source As String
  overload: Heir.SourceFile.Source*
- uid: Heir.SourceFile.Path
  commentId: P:Heir.SourceFile.Path
  id: Path
  parent: Heir.SourceFile
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: SourceFile.Path
  fullName: Heir.SourceFile.Path
  type: Property
  source:
    remote:
      path: Heir/SourceFile.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Path
    path: Heir/SourceFile.cs
    startLine: 11
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public string Path { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Path As String
  overload: Heir.SourceFile.Path*
- uid: Heir.SourceFile.IsMainFile
  commentId: P:Heir.SourceFile.IsMainFile
  id: IsMainFile
  parent: Heir.SourceFile
  langs:
  - csharp
  - vb
  name: IsMainFile
  nameWithType: SourceFile.IsMainFile
  fullName: Heir.SourceFile.IsMainFile
  type: Property
  source:
    remote:
      path: Heir/SourceFile.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: IsMainFile
    path: Heir/SourceFile.cs
    startLine: 12
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public bool IsMainFile { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMainFile As Boolean
  overload: Heir.SourceFile.IsMainFile*
- uid: Heir.SourceFile.#ctor(System.String,System.String,System.Boolean)
  commentId: M:Heir.SourceFile.#ctor(System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.Boolean)'
  parent: Heir.SourceFile
  langs:
  - csharp
  - vb
  name: SourceFile(string, string?, bool)
  nameWithType: SourceFile.SourceFile(string, string?, bool)
  fullName: Heir.SourceFile.SourceFile(string, string?, bool)
  type: Constructor
  source:
    remote:
      path: Heir/SourceFile.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: .ctor
    path: Heir/SourceFile.cs
    startLine: 19
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public SourceFile(string source, string? path, bool isMainFile)
    parameters:
    - id: source
      type: System.String
    - id: path
      type: System.String
    - id: isMainFile
      type: System.Boolean
    content.vb: Public Sub New(source As String, path As String, isMainFile As Boolean)
  overload: Heir.SourceFile.#ctor*
  nameWithType.vb: SourceFile.New(String, String, Boolean)
  fullName.vb: Heir.SourceFile.New(String, String, Boolean)
  name.vb: New(String, String, Boolean)
- uid: Heir.SourceFile.FromPath(System.String,System.Boolean)
  commentId: M:Heir.SourceFile.FromPath(System.String,System.Boolean)
  id: FromPath(System.String,System.Boolean)
  parent: Heir.SourceFile
  langs:
  - csharp
  - vb
  name: FromPath(string, bool)
  nameWithType: SourceFile.FromPath(string, bool)
  fullName: Heir.SourceFile.FromPath(string, bool)
  type: Method
  source:
    remote:
      path: Heir/SourceFile.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: FromPath
    path: Heir/SourceFile.cs
    startLine: 27
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public static SourceFile FromPath(string path, bool isMainFile = false)
    parameters:
    - id: path
      type: System.String
    - id: isMainFile
      type: System.Boolean
    return:
      type: Heir.SourceFile
    content.vb: Public Shared Function FromPath(path As String, isMainFile As Boolean = False) As SourceFile
  overload: Heir.SourceFile.FromPath*
  nameWithType.vb: SourceFile.FromPath(String, Boolean)
  fullName.vb: Heir.SourceFile.FromPath(String, Boolean)
  name.vb: FromPath(String, Boolean)
- uid: Heir.SourceFile.Evaluate
  commentId: M:Heir.SourceFile.Evaluate
  id: Evaluate
  parent: Heir.SourceFile
  langs:
  - csharp
  - vb
  name: Evaluate()
  nameWithType: SourceFile.Evaluate()
  fullName: Heir.SourceFile.Evaluate()
  type: Method
  source:
    remote:
      path: Heir/SourceFile.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Evaluate
    path: Heir/SourceFile.cs
    startLine: 33
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public (object?, VirtualMachine) Evaluate()
    return:
      type: System.ValueTuple{System.Object,Heir.VirtualMachine}
    content.vb: Public Function Evaluate() As (Object, VirtualMachine)
  overload: Heir.SourceFile.Evaluate*
- uid: Heir.SourceFile.GenerateBytecode
  commentId: M:Heir.SourceFile.GenerateBytecode
  id: GenerateBytecode
  parent: Heir.SourceFile
  langs:
  - csharp
  - vb
  name: GenerateBytecode()
  nameWithType: SourceFile.GenerateBytecode()
  fullName: Heir.SourceFile.GenerateBytecode()
  type: Method
  source:
    remote:
      path: Heir/SourceFile.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: GenerateBytecode
    path: Heir/SourceFile.cs
    startLine: 57
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public Bytecode GenerateBytecode()
    return:
      type: Heir.CodeGeneration.Bytecode
    content.vb: Public Function GenerateBytecode() As Bytecode
  overload: Heir.SourceFile.GenerateBytecode*
- uid: Heir.SourceFile.TypeCheck
  commentId: M:Heir.SourceFile.TypeCheck
  id: TypeCheck
  parent: Heir.SourceFile
  langs:
  - csharp
  - vb
  name: TypeCheck()
  nameWithType: SourceFile.TypeCheck()
  fullName: Heir.SourceFile.TypeCheck()
  type: Method
  source:
    remote:
      path: Heir/SourceFile.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: TypeCheck
    path: Heir/SourceFile.cs
    startLine: 68
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public Binder TypeCheck()
    return:
      type: Heir.Binder
    content.vb: Public Function TypeCheck() As Binder
  overload: Heir.SourceFile.TypeCheck*
- uid: Heir.SourceFile.Bind(System.Boolean)
  commentId: M:Heir.SourceFile.Bind(System.Boolean)
  id: Bind(System.Boolean)
  parent: Heir.SourceFile
  langs:
  - csharp
  - vb
  name: Bind(bool)
  nameWithType: SourceFile.Bind(bool)
  fullName: Heir.SourceFile.Bind(bool)
  type: Method
  source:
    remote:
      path: Heir/SourceFile.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Bind
    path: Heir/SourceFile.cs
    startLine: 78
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public Binder Bind(bool resolve = true)
    parameters:
    - id: resolve
      type: System.Boolean
    return:
      type: Heir.Binder
    content.vb: Public Function Bind(resolve As Boolean = True) As Binder
  overload: Heir.SourceFile.Bind*
  nameWithType.vb: SourceFile.Bind(Boolean)
  fullName.vb: Heir.SourceFile.Bind(Boolean)
  name.vb: Bind(Boolean)
- uid: Heir.SourceFile.Resolve
  commentId: M:Heir.SourceFile.Resolve
  id: Resolve
  parent: Heir.SourceFile
  langs:
  - csharp
  - vb
  name: Resolve()
  nameWithType: SourceFile.Resolve()
  fullName: Heir.SourceFile.Resolve()
  type: Method
  source:
    remote:
      path: Heir/SourceFile.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Resolve
    path: Heir/SourceFile.cs
    startLine: 89
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public SyntaxTree Resolve()
    return:
      type: Heir.AST.SyntaxTree
    content.vb: Public Function Resolve() As SyntaxTree
  overload: Heir.SourceFile.Resolve*
- uid: Heir.SourceFile.Parse
  commentId: M:Heir.SourceFile.Parse
  id: Parse
  parent: Heir.SourceFile
  langs:
  - csharp
  - vb
  name: Parse()
  nameWithType: SourceFile.Parse()
  fullName: Heir.SourceFile.Parse()
  type: Method
  source:
    remote:
      path: Heir/SourceFile.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Parse
    path: Heir/SourceFile.cs
    startLine: 98
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public SyntaxTree Parse()
    return:
      type: Heir.AST.SyntaxTree
    content.vb: Public Function Parse() As SyntaxTree
  overload: Heir.SourceFile.Parse*
- uid: Heir.SourceFile.Tokenize
  commentId: M:Heir.SourceFile.Tokenize
  id: Tokenize
  parent: Heir.SourceFile
  langs:
  - csharp
  - vb
  name: Tokenize()
  nameWithType: SourceFile.Tokenize()
  fullName: Heir.SourceFile.Tokenize()
  type: Method
  source:
    remote:
      path: Heir/SourceFile.cs
      branch: master
      repo: git@github.com:heir-lang/heir.git
    id: Tokenize
    path: Heir/SourceFile.cs
    startLine: 108
  assemblies:
  - Heir
  namespace: Heir
  syntax:
    content: public TokenStream Tokenize()
    return:
      type: Heir.Syntax.TokenStream
    content.vb: Public Function Tokenize() As TokenStream
  overload: Heir.SourceFile.Tokenize*
references:
- uid: Heir
  commentId: N:Heir
  href: Heir.html
  name: Heir
  nameWithType: Heir
  fullName: Heir
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Heir.SourceFile.Diagnostics*
  commentId: Overload:Heir.SourceFile.Diagnostics
  href: Heir.SourceFile.html#Heir_SourceFile_Diagnostics
  name: Diagnostics
  nameWithType: SourceFile.Diagnostics
  fullName: Heir.SourceFile.Diagnostics
- uid: Heir.DiagnosticBag
  commentId: T:Heir.DiagnosticBag
  parent: Heir
  href: Heir.DiagnosticBag.html
  name: DiagnosticBag
  nameWithType: DiagnosticBag
  fullName: Heir.DiagnosticBag
- uid: Heir.SourceFile.Source*
  commentId: Overload:Heir.SourceFile.Source
  href: Heir.SourceFile.html#Heir_SourceFile_Source
  name: Source
  nameWithType: SourceFile.Source
  fullName: Heir.SourceFile.Source
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Heir.SourceFile.Path*
  commentId: Overload:Heir.SourceFile.Path
  href: Heir.SourceFile.html#Heir_SourceFile_Path
  name: Path
  nameWithType: SourceFile.Path
  fullName: Heir.SourceFile.Path
- uid: Heir.SourceFile.IsMainFile*
  commentId: Overload:Heir.SourceFile.IsMainFile
  href: Heir.SourceFile.html#Heir_SourceFile_IsMainFile
  name: IsMainFile
  nameWithType: SourceFile.IsMainFile
  fullName: Heir.SourceFile.IsMainFile
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Heir.SourceFile.#ctor*
  commentId: Overload:Heir.SourceFile.#ctor
  href: Heir.SourceFile.html#Heir_SourceFile__ctor_System_String_System_String_System_Boolean_
  name: SourceFile
  nameWithType: SourceFile.SourceFile
  fullName: Heir.SourceFile.SourceFile
  nameWithType.vb: SourceFile.New
  fullName.vb: Heir.SourceFile.New
  name.vb: New
- uid: Heir.SourceFile.FromPath*
  commentId: Overload:Heir.SourceFile.FromPath
  href: Heir.SourceFile.html#Heir_SourceFile_FromPath_System_String_System_Boolean_
  name: FromPath
  nameWithType: SourceFile.FromPath
  fullName: Heir.SourceFile.FromPath
- uid: Heir.SourceFile
  commentId: T:Heir.SourceFile
  parent: Heir
  href: Heir.SourceFile.html
  name: SourceFile
  nameWithType: SourceFile
  fullName: Heir.SourceFile
- uid: Heir.SourceFile.Evaluate*
  commentId: Overload:Heir.SourceFile.Evaluate
  href: Heir.SourceFile.html#Heir_SourceFile_Evaluate
  name: Evaluate
  nameWithType: SourceFile.Evaluate
  fullName: Heir.SourceFile.Evaluate
- uid: System.ValueTuple{System.Object,Heir.VirtualMachine}
  commentId: T:System.ValueTuple{System.Object,Heir.VirtualMachine}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: (object, VirtualMachine)
  nameWithType: (object, VirtualMachine)
  fullName: (object, Heir.VirtualMachine)
  nameWithType.vb: (Object, VirtualMachine)
  fullName.vb: (Object, Heir.VirtualMachine)
  name.vb: (Object, VirtualMachine)
  spec.csharp:
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Heir.VirtualMachine
    name: VirtualMachine
    href: Heir.VirtualMachine.html
  - name: )
  spec.vb:
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: Heir.VirtualMachine
    name: VirtualMachine
    href: Heir.VirtualMachine.html
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Heir.SourceFile.GenerateBytecode*
  commentId: Overload:Heir.SourceFile.GenerateBytecode
  href: Heir.SourceFile.html#Heir_SourceFile_GenerateBytecode
  name: GenerateBytecode
  nameWithType: SourceFile.GenerateBytecode
  fullName: Heir.SourceFile.GenerateBytecode
- uid: Heir.CodeGeneration.Bytecode
  commentId: T:Heir.CodeGeneration.Bytecode
  parent: Heir.CodeGeneration
  href: Heir.CodeGeneration.Bytecode.html
  name: Bytecode
  nameWithType: Bytecode
  fullName: Heir.CodeGeneration.Bytecode
- uid: Heir.CodeGeneration
  commentId: N:Heir.CodeGeneration
  href: Heir.html
  name: Heir.CodeGeneration
  nameWithType: Heir.CodeGeneration
  fullName: Heir.CodeGeneration
  spec.csharp:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.CodeGeneration
    name: CodeGeneration
    href: Heir.CodeGeneration.html
  spec.vb:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.CodeGeneration
    name: CodeGeneration
    href: Heir.CodeGeneration.html
- uid: Heir.SourceFile.TypeCheck*
  commentId: Overload:Heir.SourceFile.TypeCheck
  href: Heir.SourceFile.html#Heir_SourceFile_TypeCheck
  name: TypeCheck
  nameWithType: SourceFile.TypeCheck
  fullName: Heir.SourceFile.TypeCheck
- uid: Heir.Binder
  commentId: T:Heir.Binder
  parent: Heir
  href: Heir.Binder.html
  name: Binder
  nameWithType: Binder
  fullName: Heir.Binder
- uid: Heir.SourceFile.Bind*
  commentId: Overload:Heir.SourceFile.Bind
  href: Heir.SourceFile.html#Heir_SourceFile_Bind_System_Boolean_
  name: Bind
  nameWithType: SourceFile.Bind
  fullName: Heir.SourceFile.Bind
- uid: Heir.SourceFile.Resolve*
  commentId: Overload:Heir.SourceFile.Resolve
  href: Heir.SourceFile.html#Heir_SourceFile_Resolve
  name: Resolve
  nameWithType: SourceFile.Resolve
  fullName: Heir.SourceFile.Resolve
- uid: Heir.AST.SyntaxTree
  commentId: T:Heir.AST.SyntaxTree
  parent: Heir.AST
  href: Heir.AST.SyntaxTree.html
  name: SyntaxTree
  nameWithType: SyntaxTree
  fullName: Heir.AST.SyntaxTree
- uid: Heir.AST
  commentId: N:Heir.AST
  href: Heir.html
  name: Heir.AST
  nameWithType: Heir.AST
  fullName: Heir.AST
  spec.csharp:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.AST
    name: AST
    href: Heir.AST.html
  spec.vb:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.AST
    name: AST
    href: Heir.AST.html
- uid: Heir.SourceFile.Parse*
  commentId: Overload:Heir.SourceFile.Parse
  href: Heir.SourceFile.html#Heir_SourceFile_Parse
  name: Parse
  nameWithType: SourceFile.Parse
  fullName: Heir.SourceFile.Parse
- uid: Heir.SourceFile.Tokenize*
  commentId: Overload:Heir.SourceFile.Tokenize
  href: Heir.SourceFile.html#Heir_SourceFile_Tokenize
  name: Tokenize
  nameWithType: SourceFile.Tokenize
  fullName: Heir.SourceFile.Tokenize
- uid: Heir.Syntax.TokenStream
  commentId: T:Heir.Syntax.TokenStream
  parent: Heir.Syntax
  href: Heir.Syntax.TokenStream.html
  name: TokenStream
  nameWithType: TokenStream
  fullName: Heir.Syntax.TokenStream
- uid: Heir.Syntax
  commentId: N:Heir.Syntax
  href: Heir.html
  name: Heir.Syntax
  nameWithType: Heir.Syntax
  fullName: Heir.Syntax
  spec.csharp:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.Syntax
    name: Syntax
    href: Heir.Syntax.html
  spec.vb:
  - uid: Heir
    name: Heir
    href: Heir.html
  - name: .
  - uid: Heir.Syntax
    name: Syntax
    href: Heir.Syntax.html
